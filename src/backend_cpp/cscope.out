cscope 15 $HOME/research/greenmarl-to-mpi/Green-Marl-MPI/Green-Marl/src/backend_cpp               0000252739
	@gm_cpp_decide_schedule.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_‰⁄ãnd.h
"

15 
boﬁ
 
gm_˝p_should_be_dy«mic_schedulög
(
a°_f‹óch
* 
„
);

17 ˛as†
	cgm_˝p_check_dy«mic
 : 
public
 
gm_≠∂y


19 
public
:

20 
	$gm_˝p_check_dy«mic
() {

21 
	`£t_f‹_£¡
(
åue
);

22 
is_dy«mic
 = 
Ál£
;

25 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

26 i‡((
s
->
	`gë_nodëy≥
(Ë=
AST_BFS
) ||

27 (
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
) ||

28 (
s
->
	`gë_nodëy≥
(Ë=
AST_WHILE
)) {

29 
is_dy«mic
 = 
åue
;

31  
åue
;

32 
	}
}

34 
boﬁ
 
	$gë_dy«mic
(Ë{ 
is_dy«mic
;
	}
}

35 
	g¥iv©e
:

36 
boﬁ
 
is_dy«mic
;

39 
boﬁ
 
	$gm_˝p_should_be_dy«mic_schedulög
(
a°_f‹óch
* 
„
)

41 
gm_˝p_check_dy«mic
 
T
;

43 
„
->
	`gë_body
()->
	`åavî£_¥e
(&
T
);

45  
T
.
	`gë_dy«mic
();

46 
	}
}

	@gm_cpp_gen.cc

1 
	~<°dio.h
>

2 
	~<io°ªam
>

3 
	~<ve˘‹
>

4 
	~"gm_backíd_˝p.h
"

5 
	~"gm_îr‹.h
"

6 
	~"gm_code_wrôî.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_å™sf‹m_hñ≥r.h
"

9 
	~"gm_buûtö.h
"

10 
	~"gm_˝∂ib_w‹ds.h
"

11 
	~"gm_¨g›ts.h
"

12 
	~"gm_backíd_mpi.h
"

14 
usög
 
«me•a˚
 
	g°d
;

26 
gm_mpi_gí
 
	gMPI_GEN
;

28 
	ggm_˝p_gí
::
	$£tT¨gëDú
(c⁄° * 
d
) {

29 
	`as£π
(
d
 !
NULL
);

30 i‡(
d«me
 !
NULL
Ë
dñëe
[] dname;

31 
d«me
 = 
√w
 [
	`°æí
(
d
) + 1];

32 
	`°r˝y
(
d«me
, 
d
);

33 
	}
}

35 
	ggm_˝p_gí
::
	$£tFûeName
(c⁄° * 
f
) {

36 
	`as£π
(
f
 !
NULL
);

37 i‡(
‚ame
 !
NULL
Ë
dñëe
[] fname;

38 
‚ame
 = 
√w
 [
	`°æí
(
f
) + 1];

39 
	`°r˝y
(
‚ame
, 
f
);

40 
	}
}

42 
boﬁ
 
	ggm_˝p_gí
::
	$›í_ouçut_fûes
() {

43 
ãmp
[1024];

44 
	`as£π
(
d«me
 !
NULL
);

45 
	`as£π
(
‚ame
 !
NULL
);

47 
	`•rötf
(
ãmp
, "%s/%s.h", 
d«me
, 
‚ame
);

48 
f_hódî
 = 
	`f›í
(
ãmp
, "w");

49 i‡(
f_hódî
 =
NULL
) {

50 
	`gm_backíd_îr‹
(
GM_ERROR_FILEWRITE_ERROR
, 
ãmp
);

51  
Ál£
;

53 
Hódî
.
	`£t_ouçut_fûe
(
f_hódî
);

55 
	`•rötf
(
ãmp
, "%s/%s.cc", 
d«me
, 
‚ame
);

56 
f_body
 = 
	`f›í
(
ãmp
, "w");

57 i‡(
f_body
 =
NULL
) {

58 
	`gm_backíd_îr‹
(
GM_ERROR_FILEWRITE_ERROR
, 
ãmp
);

59  
Ál£
;

61 
Body
.
	`£t_ouçut_fûe
(
f_body
);

63 
	`gë_lib
()->
	`£t_code_wrôî
(&
Body
);

65 i‡(
OPTIONS
.
	`gë_¨g_boﬁ
(
GMARGFLAG_CPP_CREATE_MAIN
)) {

66 
	`•rötf
(
ãmp
, "%s/%s_compûe.mk", 
d«me
, 
‚ame
);

67 
f_shñl
 = 
	`f›í
(
ãmp
, "w");

68 i‡(
f_shñl
 =
NULL
) {

69 
	`gm_backíd_îr‹
(
GM_ERROR_FILEWRITE_ERROR
, 
ãmp
);

70  
Ál£
;

73  
åue
;

74 
	}
}

76 
	ggm_˝p_gí
::
	$˛o£_ouçut_fûes
(
boﬁ
 
ªmove_fûes
) {

77 
ãmp
[1024];

78 i‡(
f_hódî
 !
NULL
) {

79 
Hódî
.
	`Êush
();

80 
	`f˛o£
(
f_hódî
);

81 i‡(
ªmove_fûes
) {

82 
	`•rötf
(
ãmp
, "rm %s/%s.h", 
d«me
, 
‚ame
);

83 
	`sy°em
(
ãmp
);

85 
f_hódî
 = 
NULL
;

87 i‡(
f_body
 !
NULL
) {

88 
Body
.
	`Êush
();

89 
	`f˛o£
(
f_body
);

90 i‡(
ªmove_fûes
) {

91 
	`•rötf
(
ãmp
, "rm %s/%s.cc", 
d«me
, 
‚ame
);

92 
	`sy°em
(
ãmp
);

94 
f_body
 = 
NULL
;

97 i‡(
f_shñl
 !
NULL
) {

98 
	`f˛o£
(
f_shñl
);

99 
f_shñl
 = 
NULL
;

100 i‡(
ªmove_fûes
) {

101 
	`•rötf
(
ãmp
, "rm %s/%s_compûe.mk", 
d«me
, 
‚ame
);

102 
	`sy°em
(
ãmp
);

105 
	}
}

107 
	ggm_˝p_gí
::
	$add_ö˛ude
(c⁄° * 
°rög
, 
gm_code_wrôî
& 
Out
, 
boﬁ
 
is_˛ib
, c⁄° * 
°r2
) {

108 
Out
.
	`push
("#include ");

109 i‡(
is_˛ib
)

110 
Out
.
	`push
('<');

112 
Out
.
	`push
('"');

113 
Out
.
	`push
(
°rög
);

114 
Out
.
	`push
(
°r2
);

115 i‡(
is_˛ib
)

116 
Out
.
	`push
('>');

118 
Out
.
	`push
('"');

119 
Out
.
	`NL
();

120 
	}
}

121 
	ggm_˝p_gí
::
	$add_ifdef_¥Ÿe˘i⁄
(c⁄° * 
s
) {

122 
Hódî
.
	`push
("#ifndef GM_GENERATED_CPP_");

123 
Hódî
.
	`push_to_uµî
(
s
);

124 
Hódî
.
	`push 
("_H");

125 
Hódî
.
	`push
("#define GM_GENERATED_CPP_");

126 
Hódî
.
	`push_to_uµî
(
s
);

127 
Hódî
.
	`push 
("_H");

128 
Hódî
.
	`NL
();

129 
	}
}

131 
	ggm_˝p_gí
::
	$do_gíî©e_begö
() {

135 
	`add_ifdef_¥Ÿe˘i⁄
(
‚ame
);

136 
	`add_ö˛ude
("°dio.h", 
Hódî
);

137 
	`add_ö˛ude
("°dlib.h", 
Hódî
);

138 
	`add_ö˛ude
("°döt.h", 
Hódî
);

139 
	`add_ö˛ude
("Êﬂt.h", 
Hódî
);

140 
	`add_ö˛ude
("limôs.h", 
Hódî
);

141 
	`add_ö˛ude
("cm©h", 
Hódî
);

142 
	`add_ö˛ude
("Æg‹ôhm", 
Hódî
);

143 
	`add_ö˛ude
("omp.h", 
Hódî
);

145 
	`add_ö˛ude
(
RT_INCLUDE
, 
Hódî
, 
Ál£
);

146 
Hódî
.
	`NL
();

151 
	`•rötf
(
ãmp
, "%s.h", 
‚ame
);

152 
	`add_ö˛ude
(
ãmp
, 
Body
, 
Ál£
);

153 
Body
.
	`NL
();

154 
	}
}

156 
	ggm_˝p_gí
::
	$do_gíî©e_íd
() {

157 
Hódî
.
	`NL
();

158 
Hódî
.
	`push 
("#endif");

159 
	}
}

161 
	ggm_˝p_gí
::
	$gíî©e_¥oc
(
a°_¥ocdef
* 
¥oc
) {

166 
	`gíî©e_¥oc_de˛
(
¥oc
, 
Ál£
);

167 
MPI_GEN
.
loˇl_ac˚ss_nodes
.
	`˛ór
();

168 
MPI_GEN
.
loˇl_ac˚ss_edges
.
	`˛ór
();

173 i‡(
¥oc
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_HAS_BFS
)) {

174 
a°_exåa_öfo_li°
* 
L
 = (a°_exåa_öfo_li°*Ë
¥oc
->
	`föd_öfo
(
CPPBE_INFO_BFS_LIST
);

175 
	`as£π
(
L
 !
NULL
);

176 
°d
::
li°
<*>::
ôî©‹
 
I
;

177 
Body
.
	`NL
();

178 
Body
.
	`push 
("// BFS/DFS definitions forÅheÖrocedure");

179 
I
 = 
L
->
	`gë_li°
().
	`begö
(); I !L->gë_li°().
	`íd
(); I++) {

180 
a°_bfs
* 
bfs
 = (a°_bfs*Ë*
I
;

181 
	`gíî©e_bfs_def
(
bfs
);

188 
	`gíî©e_¥oc_de˛
(
¥oc
, 
åue
);

190 
MPI_GEN
.
¥oc
 =Öroc;

192 
	`gíî©e_£¡
(
¥oc
->
	`gë_body
());

193 
Body
.
	`NL
();

196 
	}
}

198 
	ggm_˝p_gí
::
	$gíî©e_¥oc_de˛
(
a°_¥ocdef
* 
¥oc
, 
boﬁ
 
is_body_fûe
) {

200 
gm_code_wrôî
& 
Out
 = 
is_body_fûe
 ? 
Body
 : 
Hódî
;

202 i‡(!
is_body_fûe
 && 
¥oc
->
	`is_loˇl
()) ;

204 if(!
is_body_fûe
)

212 
Out
.
	`push 
("#define MASTER 0");

214 
Out
.
	`push
("#defineÜock_win_for_node(_node)\\");

215 
Out
.
	`NL
();

216 
Out
.
	`push
("{\\");

217 
Out
.
	`NL
();

218 
Out
.
	`push
("int _err_val;\\");

219 
Out
.
	`NL
();

220 
Out
.
	`push
("int _rank;\\");

221 
Out
.
	`NL
();

222 
Out
.
	`push
("_rank = G.get_rank_node(_node);\\");

223 
Out
.
	`NL
();

224 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

225 
Out
.
	`NL
();

226 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

227 
Out
.
	`NL
();

228 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

229 
Out
.
	`NL
();

230 
Out
.
	`push
("}");

231 
Out
.
	`NL
();

232 
Out
.
	`NL
();

234 
Out
.
	`push
("#define unlock_win_for_node(_node)\\");

235 
Out
.
	`NL
();

236 
Out
.
	`push
("{\\");

237 
Out
.
	`NL
();

238 
Out
.
	`push
("int _err_val;\\");

239 
Out
.
	`NL
();

240 
Out
.
	`push
("int _rank;\\");

241 
Out
.
	`NL
();

242 
Out
.
	`push
("_rank = G.get_rank_node(_node);\\");

243 
Out
.
	`NL
();

244 
Out
.
	`push
("_err_val=MPI_Win_unlock(_rank, win);\\");

245 
Out
.
	`NL
();

246 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

247 
Out
.
	`NL
();

248 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

249 
Out
.
	`NL
();

250 
Out
.
	`push
("}");

251 
Out
.
	`NL
();

252 
Out
.
	`NL
();

255 
Out
.
	`push
("#defineÜock_and_get_node_property_int(_result, _ba_index, _rank, _prop_index)\\");

256 
Out
.
	`NL
();

257 
Out
.
	`push
("{\\");

258 
Out
.
	`NL
();

259 
Out
.
	`push
("int _err_val;\\");

260 
Out
.
	`NL
();

261 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

262 
Out
.
	`NL
();

263 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

264 
Out
.
	`NL
();

265 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

266 
Out
.
	`NL
();

267 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(int), 1, MPI_INT, win);\\");

268 
Out
.
	`NL
();

269 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

270 
Out
.
	`NL
();

271 
Out
.
	`push
("}");

272 
Out
.
	`NL
();

273 
Out
.
	`NL
();

276 
Out
.
	`push
("#defineÜock_and_get_edge_property_int(_result, _ba_index, _rank, _prop_index)\\");

277 
Out
.
	`NL
();

278 
Out
.
	`push
("{\\");

279 
Out
.
	`NL
();

280 
Out
.
	`push
("int _err_val;\\");

281 
Out
.
	`NL
();

282 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

283 
Out
.
	`NL
();

284 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

285 
Out
.
	`NL
();

286 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

287 
Out
.
	`NL
();

288 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index+_rank] + _prop_index*sizeof(int), 1, MPI_INT, win);\\");

289 
Out
.
	`NL
();

290 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

291 
Out
.
	`NL
();

292 
Out
.
	`push
("}");

293 
Out
.
	`NL
();

294 
Out
.
	`NL
();

298 
Out
.
	`push
("#defineÜock_and_put_node_property_int(_result, _ba_index, _rank, _prop_index)\\");

299 
Out
.
	`NL
();

300 
Out
.
	`push
("{\\");

301 
Out
.
	`NL
();

302 
Out
.
	`push
("int _err_val;\\");

303 
Out
.
	`NL
();

304 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

305 
Out
.
	`NL
();

306 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

307 
Out
.
	`NL
();

308 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

309 
Out
.
	`NL
();

310 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index +_rank] + _prop_index*sizeof(int), 1, MPI_INT, win);\\");

311 
Out
.
	`NL
();

312 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

313 
Out
.
	`NL
();

314 
Out
.
	`push
("}");

315 
Out
.
	`NL
();

316 
Out
.
	`NL
();

320 
Out
.
	`push
("#defineÜock_and_put_edge_property_int(_result, _ba_index, _rank, _prop_index)\\");

321 
Out
.
	`NL
();

322 
Out
.
	`push
("{\\");

323 
Out
.
	`NL
();

324 
Out
.
	`push
("int _err_val;\\");

325 
Out
.
	`NL
();

326 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

327 
Out
.
	`NL
();

328 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

329 
Out
.
	`NL
();

330 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

331 
Out
.
	`NL
();

332 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index + _rank]+_prop_index*sizeof(int), 1, MPI_INT, win);\\");

333 
Out
.
	`NL
();

334 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

335 
Out
.
	`NL
();

336 
Out
.
	`push
("}");

337 
Out
.
	`NL
();

338 
Out
.
	`NL
();

342 
Out
.
	`push
("#define get_node_property_int(_result, _ba_index, _rank, _prop_index)\\");

343 
Out
.
	`NL
();

344 
Out
.
	`push
("{\\");

345 
Out
.
	`NL
();

346 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(int), 1, MPI_INT, win);\\");

347 
Out
.
	`NL
();

348 
Out
.
	`push
("}");

349 
Out
.
	`NL
();

350 
Out
.
	`NL
();

353 
Out
.
	`push
("#define get_edge_property_int(_result, _ba_index, _rank, _prop_index)\\");

354 
Out
.
	`NL
();

355 
Out
.
	`push
("{\\");

356 
Out
.
	`NL
();

357 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(int), 1, MPI_INT, win);\\");

358 
Out
.
	`NL
();

359 
Out
.
	`push
("}");

360 
Out
.
	`NL
();

361 
Out
.
	`NL
();

365 
Out
.
	`push
("#defineÖut_node_property_int(_result, _ba_index, _rank, _prop_index)\\");

366 
Out
.
	`NL
();

367 
Out
.
	`push
("{\\");

368 
Out
.
	`NL
();

369 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(int), 1, MPI_INT, win);\\");

370 
Out
.
	`NL
();

371 
Out
.
	`push
("}");

372 
Out
.
	`NL
();

373 
Out
.
	`NL
();

377 
Out
.
	`push
("#defineÖut_edge_property_int(_result, _ba_index, _rank, _prop_index)\\");

378 
Out
.
	`NL
();

379 
Out
.
	`push
("{\\");

380 
Out
.
	`NL
();

381 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_INT, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(int), 1, MPI_INT, win);\\");

382 
Out
.
	`NL
();

383 
Out
.
	`push
("}");

384 
Out
.
	`NL
();

385 
Out
.
	`NL
();

388 
Out
.
	`push
("#defineÜock_and_get_node_property_bool(_result, _ba_index, _rank, _prop_index)\\");

389 
Out
.
	`NL
();

390 
Out
.
	`push
("{\\");

391 
Out
.
	`NL
();

392 
Out
.
	`push
("int _err_val;\\");

393 
Out
.
	`NL
();

394 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

395 
Out
.
	`NL
();

396 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

397 
Out
.
	`NL
();

398 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

399 
Out
.
	`NL
();

400 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_C_BOOL, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(bool), 1, MPI_C_BOOL, win);\\");

401 
Out
.
	`NL
();

402 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

403 
Out
.
	`NL
();

404 
Out
.
	`push
("}");

405 
Out
.
	`NL
();

406 
Out
.
	`NL
();

409 
Out
.
	`push
("#defineÜock_and_put_node_property_bool(_result, _ba_index, _rank, _prop_index)\\");

410 
Out
.
	`NL
();

411 
Out
.
	`push
("{\\");

412 
Out
.
	`NL
();

413 
Out
.
	`push
("int _err_val;\\");

414 
Out
.
	`NL
();

415 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

416 
Out
.
	`NL
();

417 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

418 
Out
.
	`NL
();

419 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

420 
Out
.
	`NL
();

421 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_C_BOOL, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(bool), 1, MPI_C_BOOL, win);\\");

422 
Out
.
	`NL
();

423 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

424 
Out
.
	`NL
();

425 
Out
.
	`push
("}");

426 
Out
.
	`NL
();

427 
Out
.
	`NL
();

429 
Out
.
	`push
("#define get_node_property_bool(_result, _ba_index, _rank, _prop_index)\\");

430 
Out
.
	`NL
();

431 
Out
.
	`push
("{\\");

432 
Out
.
	`NL
();

433 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_C_BOOL, _rank, base_address[G.get_num_processes()*_ba_index+_rankj + _prop_index*sizeof(bool), 1, MPI_C_BOOL, win);\\");

434 
Out
.
	`NL
();

435 
Out
.
	`push
("}");

436 
Out
.
	`NL
();

437 
Out
.
	`NL
();

439 
Out
.
	`push
("#defineÖut_node_property_bool(_result, _ba_index, _rank, _prop_index)\\");

440 
Out
.
	`NL
();

441 
Out
.
	`push
("{\\");

442 
Out
.
	`NL
();

443 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_C_BOOL, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(bool), 1, MPI_C_BOOL, win);\\");

444 
Out
.
	`NL
();

445 
Out
.
	`push
("}");

446 
Out
.
	`NL
();

447 
Out
.
	`NL
();

449 
Out
.
	`push
("#defineÜock_and_put_node_property_float(_result, _ba_index, _rank, _prop_index)\\");

450 
Out
.
	`NL
();

451 
Out
.
	`push
("{\\");

452 
Out
.
	`NL
();

453 
Out
.
	`push
("int _err_val;\\");

454 
Out
.
	`NL
();

455 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

456 
Out
.
	`NL
();

457 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

458 
Out
.
	`NL
();

459 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

460 
Out
.
	`NL
();

461 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_FLOAT, _rank, base_address[G.get_num_processes()*_ba_index +_rank] + _prop_index*sizeof(float), 1, MPI_FLOAT, win);\\");

462 
Out
.
	`NL
();

463 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

464 
Out
.
	`NL
();

465 
Out
.
	`push
("}");

466 
Out
.
	`NL
();

467 
Out
.
	`NL
();

470 
Out
.
	`push
("#defineÜock_and_get_node_property_float(_result, _ba_index, _rank, _prop_index)\\");

471 
Out
.
	`NL
();

472 
Out
.
	`push
("{\\");

473 
Out
.
	`NL
();

474 
Out
.
	`push
("int _err_val;\\");

475 
Out
.
	`NL
();

476 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

477 
Out
.
	`NL
();

478 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

479 
Out
.
	`NL
();

480 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

481 
Out
.
	`NL
();

482 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_FLOAT, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(float), 1, MPI_FLOAT, win);\\");

483 
Out
.
	`NL
();

484 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

485 
Out
.
	`NL
();

486 
Out
.
	`push
("}");

487 
Out
.
	`NL
();

488 
Out
.
	`NL
();

490 
Out
.
	`push
("#defineÜock_and_get_node_property_double(_result, _ba_index, _rank, _prop_index)\\");

491 
Out
.
	`NL
();

492 
Out
.
	`push
("{\\");

493 
Out
.
	`NL
();

494 
Out
.
	`push
("int _err_val;\\");

495 
Out
.
	`NL
();

496 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

497 
Out
.
	`NL
();

498 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

499 
Out
.
	`NL
();

500 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

501 
Out
.
	`NL
();

502 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_DOUBLE, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(double), 1, MPI_DOUBLE, win);\\");

503 
Out
.
	`NL
();

504 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

505 
Out
.
	`NL
();

506 
Out
.
	`push
("}");

507 
Out
.
	`NL
();

508 
Out
.
	`NL
();

510 
Out
.
	`push
("#defineÜock_and_get_edge_property_double(_result, _ba_index, _rank, _prop_index)\\");

511 
Out
.
	`NL
();

512 
Out
.
	`push
("{\\");

513 
Out
.
	`NL
();

514 
Out
.
	`push
("int _err_val;\\");

515 
Out
.
	`NL
();

516 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

517 
Out
.
	`NL
();

518 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

519 
Out
.
	`NL
();

520 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

521 
Out
.
	`NL
();

522 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_DOUBLE, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(double), 1, MPI_DOUBLE, win);\\");

523 
Out
.
	`NL
();

524 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

525 
Out
.
	`NL
();

526 
Out
.
	`push
("}");

527 
Out
.
	`NL
();

528 
Out
.
	`NL
();

530 
Out
.
	`push
("#defineÜock_and_put_node_property_double(_result, _ba_index, _rank, _prop_index)\\");

531 
Out
.
	`NL
();

532 
Out
.
	`push
("{\\");

533 
Out
.
	`NL
();

534 
Out
.
	`push
("int _err_val;\\");

535 
Out
.
	`NL
();

536 
Out
.
	`push
("_err_val=MPI_Win_lock(MPI_LOCK_EXCLUSIVE,_rank, 0, win);\\");

537 
Out
.
	`NL
();

538 
Out
.
	`push
("if(_err_val != MPI_SUCCESS)\\");

539 
Out
.
	`NL
();

540 
Out
.
	`push
("fprintf(stderr,\"error occured forÜock with val%d\",_err_val);\\");

541 
Out
.
	`NL
();

542 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_DOUBLE, _rank, base_address[G.get_num_processes()*_ba_index +_rank] + _prop_index*sizeof(double), 1, MPI_DOUBLE, win);\\");

543 
Out
.
	`NL
();

544 
Out
.
	`push
("MPI_Win_unlock(_rank, win);\\");

545 
Out
.
	`NL
();

546 
Out
.
	`push
("}");

547 
Out
.
	`NL
();

548 
Out
.
	`NL
();

550 
Out
.
	`push
("#define get_edge_property_double(_result, _ba_index, _rank, _prop_index)\\");

551 
Out
.
	`NL
();

552 
Out
.
	`push
("{\\");

553 
Out
.
	`NL
();

554 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_DOUBLE, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(double), 1, MPI_DOUBLE, win);\\");

555 
Out
.
	`NL
();

556 
Out
.
	`push
("}");

557 
Out
.
	`NL
();

558 
Out
.
	`NL
();

560 
Out
.
	`push
("#define get_node_property_double(_result, _ba_index, _rank, _prop_index)\\");

561 
Out
.
	`NL
();

562 
Out
.
	`push
("{\\");

563 
Out
.
	`NL
();

564 
Out
.
	`push
("MPI_Get(&_result, 1, MPI_DOUBLE, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(double), 1, MPI_DOUBLE, win);\\");

565 
Out
.
	`NL
();

566 
Out
.
	`push
("}");

567 
Out
.
	`NL
();

568 
Out
.
	`NL
();

571 
Out
.
	`push
("#defineÖut_node_property_double(_result, _ba_index, _rank, _prop_index)\\");

572 
Out
.
	`NL
();

573 
Out
.
	`push
("{\\");

574 
Out
.
	`NL
();

575 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_DOUBLE, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(double), 1, MPI_DOUBLE, win);\\");

576 
Out
.
	`NL
();

577 
Out
.
	`push
("}");

578 
Out
.
	`NL
();

579 
Out
.
	`NL
();

582 
Out
.
	`push
("#defineÖut_edge_property_double(_result, _ba_index, _rank, _prop_index)\\");

583 
Out
.
	`NL
();

584 
Out
.
	`push
("{\\");

585 
Out
.
	`NL
();

586 
Out
.
	`push
("MPI_Put(&_result, 1, MPI_DOUBLE, _rank, base_address[G.get_num_processes()*_ba_index+_rank]+_prop_index*sizeof(double), 1, MPI_DOUBLE, win);\\");

587 
Out
.
	`NL
();

588 
Out
.
	`push
("}");

589 
Out
.
	`NL
();

590 
Out
.
	`NL
();

595 i‡(
¥oc
->
	`is_loˇl
()Ë
Out
.
	`push
("static ");

598 
Out
.
	`push_•c
(
	`gë_ty≥_°rög
(
¥oc
->
	`gë_ªtu∫_ty≥
()));

599 
Out
.
	`push
(
¥oc
->
	`gë_¥o˙ame
()->
	`gë_gí«me
());

600 
Out
.
	`push
('(');

602 
max_¨g_≥r_löe
 = 2;

603 
¨g_cuº
 = 0;

604 
ªmaö_¨gs
 = 
¥oc
->
	`gë_ö_¨gs
().
	`size
(Ë+Öroc->
	`gë_out_¨gs
().size();

606 
°d
::
li°
<
a°_¨gde˛
*>& 
l°
 = 
¥oc
->
	`gë_ö_¨gs
();

607 
°d
::
li°
<
a°_¨gde˛
*>::
ôî©‹
 
i
;

608 
i
 = 
l°
.
	`begö
(); i !l°.
	`íd
(); i++) {

609 
ªmaö_¨gs
--;

610 
¨g_cuº
++;

612 
a°_ty≥de˛
* 
T
 = (*
i
)->
	`gë_ty≥
();

613 
Out
.
	`push
(
	`gë_ty≥_°rög
(
T
));

614 i‡(
T
->
	`is_¥imôive
(Ë|| T->
	`is_¥›îty
())

615 
Out
.
	`push
(" ");

617 
Out
.
	`push
("& ");

619 
	`as£π
((*
i
)->
	`gë_idli°
()->
	`gë_Àngth
() == 1);

620 
Out
.
	`push
((*
i
)->
	`gë_idli°
()->
	`gë_ôem
(0)->
	`gë_gí«me
());

621 i‡(
ªmaö_¨gs
 > 0) {

622 
Out
.
	`push
(", ");

625 i‡((
¨g_cuº
 =
max_¨g_≥r_löe
Ë&& (
ªmaö_¨gs
 > 0)) {

626 
Out
.
	`NL
();

627 
¨g_cuº
 = 0;

632 
°d
::
li°
<
a°_¨gde˛
*>& 
l°
 = 
¥oc
->
	`gë_out_¨gs
();

633 
°d
::
li°
<
a°_¨gde˛
*>::
ôî©‹
 
i
;

634 
i
 = 
l°
.
	`begö
(); i !l°.
	`íd
(); i++) {

635 
ªmaö_¨gs
--;

636 
¨g_cuº
++;

638 
Out
.
	`push
(
	`gë_ty≥_°rög
((*
i
)->
	`gë_ty≥
()));

639 
a°_ty≥de˛
* 
T
 = (*
i
)->
	`gë_ty≥
();

640 i‡(!
T
->
	`is_¥›îty
()Ë
Out
.
	`push_•c
("& ");

642 
Out
.
	`push
((*
i
)->
	`gë_idli°
()->
	`gë_ôem
(0)->
	`gë_gí«me
());

644 i‡(
ªmaö_¨gs
 > 0) {

645 
Out
.
	`push
(", ");

647 i‡((
¨g_cuº
 =
max_¨g_≥r_löe
Ë&& (
ªmaö_¨gs
 > 0)) {

648 
Out
.
	`NL
();

649 
¨g_cuº
 = 0;

654 
Out
.
	`push
(')');

655 i‡(!
is_body_fûe
) {

656 
Out
.
	`push
(';');

657 
Out
.
	`NL
();

660 
Out
.
	`push
("extern MPI_Win win;");

661 
Out
.
	`NL
();

662 
Out
.
	`push
("extern MPI_Aint *base_address;");

663 
Out
.
	`NL
();

664 
Out
.
	`push
("extern int base_address_index;");

666 
Out
.
	`NL
();

668 
	}
}

670 
	ggm_˝p_gí
::
	$gíî©e_idli°
(
a°_idli°
* 
idl
) {

671 
z
 = 
idl
->
	`gë_Àngth
();

672 
i
 = 0; i < 
z
; i++) {

673 
a°_id
* 
id
 = 
idl
->
	`gë_ôem
(
i
);

674 
	`gíî©e_lhs_id
(
id
);

675 i‡(
i
 < 
z
 - 1Ë
Body
.
	`push_•c
(',');

677 
	}
}

679 
	ggm_˝p_gí
::
	$gíî©e_idli°_¥imôive
(
a°_idli°
* 
idLi°
) {

680 
Àngth
 = 
idLi°
->
	`gë_Àngth
();

681 
i
 = 0; i < 
Àngth
; i++) {

683 
a°_id
* 
id
 = 
idLi°
->
	`gë_ôem
(
i
);

684 if(
MPI_GEN
.
	`is_ö_∑øŒñ_lo›
())

686 
id
->
	`add_öfo
(
LABEL_DECLARED_IN_PAR
, 
√w
 
	`a°_exåa_öfo
(
åue
));

690 
id
->
	`add_öfo
(
LABEL_DECLARED_IN_PAR
, 
√w
 
	`a°_exåa_öfo
(
Ál£
));

692 
	`gíî©e_lhs_id
(
id
);

693 
	`gíî©e_lhs_deÁu…
(
id
->
	`gëTy≥Summ¨y
());

694 i‡(
i
 < 
Àngth
 - 1Ë
Body
.
	`push_•c
(',');

696 
	}
}

698 
	ggm_˝p_gí
::
	$gíî©e_lhs_deÁu…
(
ty≥
) {

699 
ty≥
) {

700 
GMTYPE_BYTE
:

701 
GMTYPE_SHORT
:

702 
GMTYPE_INT
:

703 
GMTYPE_LONG
:

704 
Body
.
	`push_•c
(" = 0");

706 
GMTYPE_FLOAT
:

707 
GMTYPE_DOUBLE
:

708 
Body
.
	`push_•c
(" = 0.0");

710 
GMTYPE_BOOL
:

711 
Body
.
	`push_•c
(" = false");

714 
	`as£π
(
Ál£
);

717 
	}
}

719 
	ggm_˝p_gí
::
	$gíî©e_lhs_id
(
a°_id
* 
id
) {

721 
Body
.
	`push
(
id
->
	`gë_gí«me
());

722 
	}
}

723 
	ggm_˝p_gí
::
	$gíî©e_rhs_id
(
a°_id
* 
id
) {

725 i‡(
id
->
	`gëTy≥Info
()->
	`is_edge_com∑tibÀ
()) {

727 i‡(
id
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_IS_REVERSE_EDGE
)) {

728 
Body
.
	`push
(
	`gë_lib
()->
	`fw_edge_ödex
(
id
));

741 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
id
->
	`gë_gí«me
()))

743 
Body
.
	`push
("G.get_global_node_num( ");

744 
Body
.
	`push
(
id
->
	`gë_gí«me
());

745 
Body
.
	`push
(")");

747 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(
id
->
	`gë_gí«me
())){

748 
Body
.
	`push
("G.get_global_node_num( ");

749 
Body
.
	`push
(
id
->
	`gë_gí«me
());

750 
Body
.
	`push
(")");

753 
	`gíî©e_lhs_id
(
id
);

757 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
id
->
	`gë_gí«me
()))

759 
Body
.
	`push
("G.get_global_node_num( ");

760 
Body
.
	`push
(
id
->
	`gë_gí«me
());

761 
Body
.
	`push
(")");

763 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(
id
->
	`gë_gí«me
())){

764 
Body
.
	`push
("G.get_global_node_num( ");

765 
Body
.
	`push
(
id
->
	`gë_gí«me
());

766 
Body
.
	`push
(")");

769 
	`gíî©e_lhs_id
(
id
);

771 
	}
}

773 
	ggm_˝p_gí
::
	$gë_ãmpv¨_«me_™d_ty≥
(c⁄° **
tmp_ty≥
,

774 c⁄° **
tmp_«me
, 
a°_fõld
 *
f
) {

776 
a°_ty≥de˛
 *
tmp_ty≥_de˛
 = 
f
->
	`gë_£c⁄d
()->
	`gëT¨gëTy≥Info
();

777 *
tmp_ty≥
 = 
	`gë_ty≥_°rög
(
tmp_ty≥_de˛
);

778 *
tmp_«me
 = 
f
->
	`gë_£c⁄d
()->
	`gë_gí«me
();

780 
	}
}

782 
	ggm_˝p_gí
::
	$gíî©e_lhs_fõld
(
a°_fõld
* 
f
) {

784 
boﬁ
 
n⁄_loˇl_ac˚ss
 = 
Ál£
;

785 if(
f
->
	`gëTy≥Info
()->
	`is_node_¥›îty
())

787 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
	`gë_lib
()->
	`node_ödex
(
f
->
	`gë_fú°
()))) {

788 
Body
.
	`push
(
f
->
	`gë_£c⁄d
()->
	`gë_gí«me
());

789 
Body
.
	`push
('[');

790 
Body
.
	`push
(
	`gë_lib
()->
	`node_ödex
(
f
->
	`gë_fú°
()));

791 
Body
.
	`push
(']');

793 
n⁄_loˇl_ac˚ss
 = 
åue
;

797 if(
f
->
	`gëTy≥Info
()->
	`is_edge_¥›îty
())

806 c⁄° * 
ödex_«me
;

808 i‡(
f
->
	`is_øºow
()) {

809 c⁄° * 
Æüs_«me
 = 
f
->
	`gë_fú°
()->
	`gëSymInfo
()->
	`föd_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
);

810 
	`as£π
(
Æüs_«me
 !
NULL
);

811 
	`as£π
(
	`°æí
(
Æüs_«me
) > 0);

812 
ödex_«me
 = 
Æüs_«me
;

815 i‡(
f
->
	`gë_fú°
()->
	`föd_öfo_boﬁ
(
CPPBE_INFO_IS_REVERSE_EDGE
)) {

816 
ödex_«me
 = 
	`gë_lib
()->
	`fw_edge_ödex
(
f
->
	`gë_fú°
());

820 
ödex_«me
 = 
	`gë_lib
()->
	`edge_ödex
(
f
->
	`gë_fú°
());

823 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(
ödex_«me
)) {

824 
Body
.
	`push
(
f
->
	`gë_£c⁄d
()->
	`gë_gí«me
());

825 
Body
.
	`push
('[');

826 
Body
.
	`push
(
ödex_«me
);

827 
Body
.
	`push
(']');

829 
n⁄_loˇl_ac˚ss
 = 
åue
;

832 if(
n⁄_loˇl_ac˚ss
)

834 c⁄° *
tmp_ty≥
 = 
NULL
;

835 c⁄° *
tmp_«me
 = 
NULL
;

836 
	`gë_ãmpv¨_«me_™d_ty≥
(&
tmp_ty≥
, &
tmp_«me
, 
f
);

849 
MPI_GEN
.
tmpv¨_cou¡
++;

850 
	`•rötf
(
MPI_GEN
.
ãmpv¨_cou¡°r
, "%d", MPI_GEN.
tmpv¨_cou¡
);

854 
Body
.
	`push
(
tmp_ty≥
);

855 
Body
.
	`push
(" ");

857 
Body
.
	`push
(
tmp_«me
);

858 
Body
.
	`push
("_tmp");

859 
Body
.
	`push
(
MPI_GEN
.
ãmpv¨_cou¡°r
);

860 
Body
.
	`push
(";");

861 
Body
.
	`NL
();

865 
Body
.
	`push
(
tmp_«me
);

866 
Body
.
	`push
("_tmp");

867 
Body
.
	`push
(
MPI_GEN
.
ãmpv¨_cou¡°r
);

900 
	}
}

902 
	ggm_˝p_gí
::
	$gíî©e_rhs_fõld
(
a°_fõld
* 
f
) {

904 
boﬁ
 
n⁄_loˇl_ac˚ss
 = 
Ál£
;

905 if(
f
->
	`gëTy≥Info
()->
	`is_node_¥›îty
())

908 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
	`gë_lib
()->
	`node_ödex
(
f
->
	`gë_fú°
()))) {

909 
Body
.
	`push
(
f
->
	`gë_£c⁄d
()->
	`gë_gí«me
());

910 
Body
.
	`push
('[');

911 
Body
.
	`push
(
	`gë_lib
()->
	`node_ödex
(
f
->
	`gë_fú°
()));

912 
Body
.
	`push
(']');

914 
n⁄_loˇl_ac˚ss
 = 
åue
;

918 if(
f
->
	`gëTy≥Info
()->
	`is_edge_¥›îty
())

927 c⁄° * 
ödex_«me
;

929 i‡(
f
->
	`is_øºow
()) {

930 c⁄° * 
Æüs_«me
 = 
f
->
	`gë_fú°
()->
	`gëSymInfo
()->
	`föd_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
);

931 
	`as£π
(
Æüs_«me
 !
NULL
);

932 
	`as£π
(
	`°æí
(
Æüs_«me
) > 0);

933 
ödex_«me
 = 
Æüs_«me
;

936 i‡(
f
->
	`gë_fú°
()->
	`föd_öfo_boﬁ
(
CPPBE_INFO_IS_REVERSE_EDGE
)) {

937 
ödex_«me
 = 
	`gë_lib
()->
	`fw_edge_ödex
(
f
->
	`gë_fú°
());

941 
ödex_«me
 = 
	`gë_lib
()->
	`edge_ödex
(
f
->
	`gë_fú°
());

944 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(
ödex_«me
)) {

945 
Body
.
	`push
(
f
->
	`gë_£c⁄d
()->
	`gë_gí«me
());

946 
Body
.
	`push
('[');

947 
Body
.
	`push
(
ödex_«me
);

948 
Body
.
	`push
(']');

950 
n⁄_loˇl_ac˚ss
 = 
åue
;

963 i‡(
n⁄_loˇl_ac˚ss
) {

964 
MPI_GEN
.
tmpv¨_cou¡
++;

965 *
tmpcou¡°r
 = 
√w
 [32];

966 
	`•rötf
(
tmpcou¡°r
, "%d", 
MPI_GEN
.
tmpv¨_cou¡
);

967 
gm_mpi_gë_öfo
 *
GET_INFO
 = 
√w
 
	`gm_mpi_gë_öfo
(
f
, 
tmpcou¡°r
);

968 
MPI_GEN
.
mpi_gë_dëaûs
.
	`push_back
(
GET_INFO
);

970 
Body
.
	`push
(
f
->
	`gë_£c⁄d
()->
	`gë_gí«me
());

971 
Body
.
	`push
("_tmp");

972 
Body
.
	`push
(
tmpcou¡°r
);

1006 
	}
}

1008 c⁄° * 
	ggm_˝p_gí
::
	$gë_ty≥_°rög
(
ty≥_id
) {

1010 i‡(
	`gm_is_¥im_ty≥
(
ty≥_id
)) {

1011 
ty≥_id
) {

1012 
GMTYPE_BYTE
:

1014 
GMTYPE_SHORT
:

1016 
GMTYPE_INT
:

1018 
GMTYPE_LONG
:

1020 
GMTYPE_FLOAT
:

1022 
GMTYPE_DOUBLE
:

1024 
GMTYPE_BOOL
:

1027 
	`as£π
(
Ál£
);

1031  
	`gë_lib
()->
	`gë_ty≥_°rög
(
ty≥_id
);

1033 
	}
}

1035 c⁄° * 
	ggm_˝p_gí
::
	$gë_ty≥_°rög
(
a°_ty≥de˛
* 
t
) {

1036 i‡((
t
 =
NULL
Ë|| (t->
	`is_void
())) {

1040 i‡(
t
->
	`is_¥imôive
()) {

1041  
	`gë_ty≥_°rög
(
t
->
	`gë_ty≥id
());

1042 } i‡(
t
->
	`is_¥›îty
()) {

1043 
a°_ty≥de˛
* 
t2
 = 
t
->
	`gë_èrgë_ty≥
();

1044 
	`as£π
(
t2
 !
NULL
);

1045 i‡(
t2
->
	`is_¥imôive
()) {

1046 
t2
->
	`gë_ty≥id
()) {

1047 
GMTYPE_BYTE
:

1049 
GMTYPE_SHORT
:

1051 
GMTYPE_INT
:

1053 
GMTYPE_LONG
:

1055 
GMTYPE_FLOAT
:

1057 
GMTYPE_DOUBLE
:

1059 
GMTYPE_BOOL
:

1062 
	`as£π
(
Ál£
);

1065 } i‡(
t2
->
	`is_nodìdge
()) {

1066 
ãmp
[128];

1067 
	`•rötf
(
ãmp
, "%s*", 
	`gë_lib
()->
	`gë_ty≥_°rög
(
t2
));

1068  
	`gm_°rdup
(
ãmp
);

1069 } i‡(
t2
->
	`is_cﬁÀ˘i⁄
()) {

1070 
ãmp
[128];

1071 
	`•rötf
(
ãmp
, "%s<%s>&", 
PROP_OF_COL
, 
	`gë_lib
()->
	`gë_ty≥_°rög
(
t2
));

1072  
	`gm_°rdup
(
ãmp
);

1074 
	`as£π
(
Ál£
);

1076 } i‡(
t
->
	`is_m≠
()) {

1077 
ãmp
[256];

1078 
a°_m≠ty≥de˛
* 
m≠Ty≥
 = (a°_m≠ty≥de˛*Ë
t
;

1079 c⁄° * 
keyTy≥
 = 
	`gë_ty≥_°rög
(
m≠Ty≥
->
	`gë_key_ty≥
());

1080 c⁄° * 
vÆueTy≥
 = 
	`gë_ty≥_°rög
(
m≠Ty≥
->
	`gë_vÆue_ty≥
());

1081 
	`•rötf
(
ãmp
, "gm_m≠<%s, %s>", 
keyTy≥
, 
vÆueTy≥
);

1082  
	`gm_°rdup
(
ãmp
);

1084  
	`gë_lib
()->
	`gë_ty≥_°rög
(
t
);

1087 
	}
}

1089 
boﬁ
 
gm_˝p_should_be_dy«mic_schedulög
(
a°_f‹óch
* 
f
);

1091 
	ggm_˝p_gí
::
	$gíî©e_£¡_f‹óch
(
a°_f‹óch
* 
f
) {

1093 #ifde‡
__USE_VAR_REUSE_OPT__


1094 i‡(
MPI_GEN
.
	`is_ö_∑øŒñ_lo›
()) {

1095 
MPI_GEN
.
	`öc_√°ög_Àvñ
();

1099 
±r
;

1100 
boﬁ
 
√ed_öô_bef‹e
 = 
	`gë_lib
()->
	`√ed_up_öôülizî
(
f
);

1102 i‡(
√ed_öô_bef‹e
) {

1103 
	`as£π
(
f
->
	`gë_∑ª¡
()->
	`gë_nodëy≥
(Ë=
AST_SENTBLOCK
);

1104 
	`gë_lib
()->
	`gíî©e_up_öôülizî
(
f
, 
Body
);

1107 i‡(
f
->
	`is_∑øŒñ
()) {

1108 
Body
.
	`NL
();

1109 
	`¥ï¨e_∑øŒñ_f‹
(
	`gm_˝p_should_be_dy«mic_schedulög
(
f
));

1110 
MPI_GEN
.
	`£t_ö_∑øŒñ_lo›
();

1113 
	`gë_lib
()->
	`gíî©e_f‹óch_hódî
(
f
, 
Body
);

1115 i‡(
	`gë_lib
()->
	`√ed_down_öôülizî
(
f
)) {

1116 
Body
.
	`push 
("{");

1117 
	`gë_lib
()->
	`gíî©e_down_öôülizî
(
f
, 
Body
);

1119 i‡(
f
->
	`gë_body
()->
	`gë_nodëy≥
(Ë!
AST_SENTBLOCK
) {

1120 
	`gíî©e_£¡
(
f
->
	`gë_body
());

1123 
	`gíî©e_£¡_block
((
a°_£¡block
*Ë
f
->
	`gë_body
(), 
Ál£
);

1126 
ty≥
 = 
f
->
	`gë_ôî_ty≥
();

1127 i‡(
	`gm_is_sim∂e_cﬁÀ˘i⁄_ôî©i⁄
(
ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(type))

1129 
Body
.
	`push 
("if(G.get_rank() == MASTER)");

1130 
Body
.
	`push 
("{");

1131 
Body
.
	`push
(
f
->
	`gë_sour˚
()->
	`gë_gí«me
());

1132 
Body
.
	`push
("_has_next = ");

1133 
Body
.
	`push
(
f
->
	`föd_öfo_°rög
(
CPPBE_INFO_COLLECTION_ITERATOR
));

1134 
Body
.
	`push
(".has_next();");

1135 
Body
.
	`NL
();

1136 
Body
.
	`push 
("}");

1137 
Body
.
	`push
("MPI_Bcast(&");

1138 
Body
.
	`push
(
f
->
	`gë_sour˚
()->
	`gë_gí«me
());

1139 
Body
.
	`push
("_has_next, 1, MPI_INT, MASTER, MPI_COMM_WORLD);");

1140 
Body
.
	`NL
();

1144 
Body
.
	`push 
("}");

1146 } i‡(
f
->
	`gë_body
()->
	`gë_nodëy≥
(Ë=
AST_SENTBLOCK
) {

1147 
	`gíî©e_£¡
(
f
->
	`gë_body
());

1149 
Body
.
	`push_ödít
();

1150 
	`gíî©e_£¡
(
f
->
	`gë_body
());

1151 
Body
.
	`p›_ödít
();

1152 
Body
.
	`NL
();

1154 if(
f
->
	`is_∑øŒñ
())

1156 
MPI_GEN
.
	`ª£t_ö_∑øŒñ_lo›
();

1157 
Body
.
	`push
("MPI_Barrier(MPI_COMM_WORLD);");

1158 
Body
.
	`NL
();

1163 #ifde‡
__USE_VAR_REUSE_OPT__


1164 i‡(
MPI_GEN
.
	`is_ö_∑øŒñ_lo›
()) {

1165 
MPI_GEN
.
	`˛ór_v¨s_ö_cuº_sc›e
();

1166 
MPI_GEN
.
	`dec_√°ög_Àvñ
();

1170 
	}
}

1172 
	ggm_˝p_gí
::
	$gíî©e_£¡_ˇŒ
(
a°_ˇŒ
* 
c
) {

1173 
	`as£π
(
c
->
	`is_buûtö_ˇŒ
());

1174 
	`gíî©e_ex¥_buûtö
(
c
->
	`gë_buûtö
());

1175 
Body
.
	`push 
(";");

1176 
	}
}

1180 
	ggm_˝p_gí
::
	$de˛¨e_¥›_def
(
a°_ty≥de˛
* 
t
, 
a°_id
 * 
id
) {

1181 
a°_ty≥de˛
* 
t2
 = 
t
->
	`gë_èrgë_ty≥
();

1182 
	`as£π
(
t2
 !
NULL
);

1184 
Body
.
	`push
(" = ");

1185 
t2
->
	`gëTy≥Summ¨y
()) {

1186 
GMTYPE_INT
:

1187 
Body
.
	`push
("new int[");

1190 
GMTYPE_LONG
:

1191 
Body
.
	`push
("newÜong[");

1192 
Body
.
	`push
(
ALLOCATE_LONG
);

1194 
GMTYPE_BOOL
:

1195 
Body
.
	`push
("new bool[");

1198 
GMTYPE_DOUBLE
:

1199 
Body
.
	`push
("new double[");

1202 
GMTYPE_FLOAT
:

1203 
Body
.
	`push
("new float[");

1205 
GMTYPE_NODE
:

1206 
Body
.
	`push
("newÇode_t[");

1209 
GMTYPE_EDGE
:

1210 
Body
.
	`push
("newÉdge_t[");

1213 
GMTYPE_NSET
:

1214 
GMTYPE_ESET
:

1215 
GMTYPE_NSEQ
:

1216 
GMTYPE_ESEQ
:

1217 
GMTYPE_NORDER
:

1218 
GMTYPE_EORDER
: {

1219 
ãmp
[128];

1220 
boﬁ
 
œzyInôüliz©i⁄
 = 
Ál£
;

1221 
	`•rötf
(
ãmp
, "%s<%s, %s>", 
ALLOCATE_COLLECTION
, 
	`gë_lib
()->
	`gë_ty≥_°rög
(
t2
), (
œzyInôüliz©i⁄
 ? "true" : "false"));

1222 
Body
.
	`push
(
ãmp
);

1226 
	`as£π
(
Ál£
);

1231 i‡(
t
->
	`is_node_¥›îty
()) {

1232 
Body
.
	`push
("G.get_num_of_local_nodes()];");

1234 } i‡(
t
->
	`is_edge_¥›îty
()) {

1235 
Body
.
	`push
("G.get_num_of_local_forward_edges()];");

1236 
Body
.
	`push
(
	`gë_lib
()->
	`max_edge_ödex
(
t
->
	`gë_èrgë_gøph_id
()));

1241 
Body
.
	`NL
();

1242 
Body
.
	`push
("int ");

1243 
Body
.
	`push
(
id
->
	`gë_gí«me
());

1244 
Body
.
	`push
("_index = base_address_index;");

1245 
Body
.
	`NL
();

1247 
t2
->
	`gëTy≥Summ¨y
()) {

1248 
GMTYPE_INT
:

1249 
Body
.
	`push
("G.win_attach_int");

1252 
GMTYPE_LONG
:

1253 
Body
.
	`push
("G.win_attach_long");

1256 
GMTYPE_BOOL
:

1257 
Body
.
	`push
("G.win_attach_bool");

1260 
GMTYPE_DOUBLE
:

1261 
Body
.
	`push
("G.win_attach_double");

1264 
GMTYPE_FLOAT
:

1265 
Body
.
	`push
("G.win_attach_float");

1267 
GMTYPE_NODE
:

1268 
Body
.
	`push
("G.win_attach_int");

1271 
GMTYPE_EDGE
:

1272 
Body
.
	`push
("G.win_attach_int");

1276 
GMTYPE_NSET
:

1277 
GMTYPE_ESET
:

1278 
GMTYPE_NSEQ
:

1279 
GMTYPE_ESEQ
:

1280 
GMTYPE_NORDER
:

1281 
GMTYPE_EORDER
: {

1282 
ãmp
[128];

1283 
boﬁ
 
œzyInôüliz©i⁄
 = 
Ál£
;

1284 
	`•rötf
(
ãmp
, "%s<%s, %s>", 
ALLOCATE_COLLECTION
, 
	`gë_lib
()->
	`gë_ty≥_°rög
(
t2
), (
œzyInôüliz©i⁄
 ? "true" : "false"));

1285 
Body
.
	`push
(
ãmp
);

1289 
	`as£π
(
Ál£
);

1293 i‡(
t
->
	`is_node_¥›îty
()) {

1294 
Body
.
	`push
("(");

1295 
Body
.
	`push
(
id
->
	`gë_gí«me
());

1296 
Body
.
	`push
(", G.get_num_of_local_nodes());");

1298 } i‡(
t
->
	`is_edge_¥›îty
()) {

1299 
Body
.
	`push
("(");

1300 
Body
.
	`push
(
id
->
	`gë_gí«me
());

1301 
Body
.
	`push
(", G.get_num_of_local_forward_edges());");

1302 
Body
.
	`push
(
	`gë_lib
()->
	`max_edge_ödex
(
t
->
	`gë_èrgë_gøph_id
()));

1304 
Body
.
	`NL
();

1309 
	}
}

1311 
	ggm_˝p_gí
::
	$gíî©e_£¡_v¨de˛
(
a°_v¨de˛
* 
v
) {

1312 
a°_ty≥de˛
* 
t
 = 
v
->
	`gë_ty≥
();

1314 i‡(
t
->
	`is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄
()) {

1315 
Body
.
	`push
(
	`gë_ty≥_°rög
(
t
));

1316 
a°_ty≥de˛
* 
èrgëTy≥
 = 
t
->
	`gë_èrgë_ty≥
();

1317 
Body
.
	`push
("<");

1318 
Body
.
	`push
(
	`gë_ty≥_°rög
(
t
->
	`gëT¨gëTy≥Summ¨y
()));

1319 
Body
.
	`push
("> ");

1320 
a°_idli°
* 
idl
 = 
v
->
	`gë_idli°
();

1321 
	`as£π
(
idl
->
	`gë_Àngth
() == 1);

1322 
	`gíî©e_lhs_id
(
idl
->
	`gë_ôem
(0));

1324 
	`gë_lib
()->
	`add_cﬁÀ˘i⁄_def
(
idl
->
	`gë_ôem
(0));

1328 i‡(
t
->
	`is_m≠
()) {

1329 
a°_m≠ty≥de˛
* 
m≠
 = (a°_m≠ty≥de˛*Ë
t
;

1330 
a°_idli°
* 
idl
 = 
v
->
	`gë_idli°
();

1331 
	`as£π
(
idl
->
	`gë_Àngth
() == 1);

1332 
	`gë_lib
()->
	`add_mpi_m≠_def
(
m≠
, 
idl
->
	`gë_ôem
(0));

1336 i‡(
t
->
	`is_£quí˚_cﬁÀ˘i⁄
()) {

1338 
a°_id
* 
id
 = 
v
->
	`gë_idli°
()->
	`gë_ôem
(0);

1339 c⁄° * 
ty≥_°rög
;

1340 if(
	`gë_lib
()->
	`has_›timized_ty≥_«me
(
id
->
	`gëSymInfo
())) {

1341 
ty≥_°rög
 = 
	`gë_lib
()->
	`gë_›timized_ty≥_«me
(
id
->
	`gëSymInfo
());

1343 
ty≥_°rög
 = 
	`gë_ty≥_°rög
(
t
);

1345 
Body
.
	`push_•c
(
ty≥_°rög
);

1347 
Body
.
	`push_•c
(
	`gë_ty≥_°rög
(
t
));

1350 i‡(
t
->
	`is_¥›îty
()) {

1356 
a°_idli°
* 
idl
 = 
v
->
	`gë_idli°
();

1357 
	`as£π
(
idl
->
	`gë_Àngth
() == 1);

1358 
	`gíî©e_lhs_id
(
idl
->
	`gë_ôem
(0));

1359 
	`de˛¨e_¥›_def
(
t
, 
idl
->
	`gë_ôem
(0));

1360 } i‡(
t
->
	`is_cﬁÀ˘i⁄
()) {

1361 
a°_idli°
* 
idl
 = 
v
->
	`gë_idli°
();

1362 
	`as£π
(
idl
->
	`gë_Àngth
() == 1);

1363 
	`gíî©e_lhs_id
(
idl
->
	`gë_ôem
(0));

1364 
	`gë_lib
()->
	`add_cﬁÀ˘i⁄_def
(
idl
->
	`gë_ôem
(0));

1365 } i‡(
t
->
	`is_¥imôive
()) {

1366 
	`gíî©e_idli°_¥imôive
(
v
->
	`gë_idli°
());

1367 
Body
.
	`push 
(";");

1369 
	`gíî©e_idli°
(
v
->
	`gë_idli°
());

1370 
Body
.
	`push 
(";");

1372 
	}
}

1374 c⁄° * 
	ggm_˝p_gí
::
	$gë_fun˘i⁄_«me_m≠_ªdu˚_assign
(
ªdu˚Ty≥
) {

1376 
ªdu˚Ty≥
) {

1377 
GMREDUCE_PLUS
:

1380 
	`as£π
(
Ál£
);

1383 
	}
}

1385 
	ggm_˝p_gí
::
	$gíî©e_£¡_m≠_assign
(
a°_assign_m≠íåy
* 
a
) {

1386 
a°_m≠ac˚ss
* 
m≠Ac˚ss
 = 
a
->
	`to_assign_m≠íåy
()->
	`gë_lhs_m≠ac˚ss
();

1387 
a°_id
* 
m≠
 = 
m≠Ac˚ss
->
	`gë_m≠_id
();

1389 
cuºít_ödít
 = 0;

1390 
f_±r
 = 
_Body
.
	`gë_wrôe_±r
(
cuºít_ödít
);

1391 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

1392 
buf„r
[256];

1393 i‡(
a
->
	`is_undî_∑øŒñ_executi⁄
()) {

1394 i‡(
a
->
	`is_ªdu˚_assign
(Ë&&á->
	`gë_ªdu˚_ty≥
(Ë=
GMREDUCE_PLUS
) {

1395 
	`•rötf
(
buf„r
, "%s.%s(", 
m≠
->
	`gë_gí«me
(), 
	`gë_fun˘i⁄_«me_m≠_ªdu˚_assign
(
a
->
	`gë_ªdu˚_ty≥
()));

1397 
	`•rötf
(
buf„r
, "%s.£tVÆue_∑r(", 
m≠
->
	`gë_gí«me
());

1400 i‡(
a
->
	`is_ªdu˚_assign
(Ë&&á->
	`gë_ªdu˚_ty≥
(Ë=
GMREDUCE_PLUS
) {

1402 
	`•rötf
(
buf„r
, "%s.%s(", 
m≠
->
	`gë_gí«me
(), 
	`gë_fun˘i⁄_«me_m≠_ªdu˚_assign
(
a
->
	`gë_ªdu˚_ty≥
()));

1404 
	`•rötf
(
buf„r
, "%s.£tVÆue_£q(", 
m≠
->
	`gë_gí«me
());

1407 
Body
.
	`push
(
buf„r
);

1409 
a°_ex¥
* 
key
 = 
m≠Ac˚ss
->
	`gë_key_ex¥
();

1410 
	`gíî©e_ex¥
(
key
);

1411 
Body
.
	`push
(", ");

1412 
	`gíî©e_ex¥
(
a
->
	`gë_rhs
());

1413 
Body
.
	`push 
(");");

1414 if(
MPI_GEN
.
mpi_gë_dëaûs
.
	`size
() != 0)

1415 
MPI_GEN
.
	`gíî©e_mpi_gë_block
(
f_±r
, 
cuºít_ödít
, 
Body
);

1416 
	}
}

1421 
	ggm_˝p_gí
::
	$gíî©e_£¡_assign
(
a°_assign
* 
a
) {

1425 
cuºít_ödít
 = 0;

1426 
f_±r
 = 
_Body
.
	`gë_wrôe_±r
(
cuºít_ödít
);

1428 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

1429 i‡(
a
->
	`is_èrgë_sˇœr
()) {

1430 
a°_id
* 
À·H™dSide
 = 
a
->
	`gë_lhs_sˇœ
();

1431 i‡(
À·H™dSide
->
	`is_ö°™éy_assig√d
()) {

1432 
_Body
.
	`push
(
	`gë_lib
()->
	`gë_ty≥_°rög
(
À·H™dSide
->
	`gëTy≥Summ¨y
()));

1433 i‡(
a
->
	`is_ª„ªn˚
()) {

1434 
_Body
.
	`push
("& ");

1436 
_Body
.
	`push
(" ");

1439 
	`gíî©e_lhs_id
(
a
->
	`gë_lhs_sˇœ
());

1441 #ifde‡
__USE_VAR_REUSE_OPT__


1442 i‡(
MPI_GEN
.
	`is_ö_∑øŒñ_lo›
()) {

1443 i‡(
MPI_GEN
.
	`check_ö_v¨s_ö_sc›e
(
a
->
	`gë_lhs_sˇœ
())->
	`gë_gí«me
()) {

1444 
MPI_GEN
.
	`ªmove_v¨
();

1449 if(
	`°rcmp
((
a
->
	`gë_lhs_sˇœ
())->
	`gë_gí«me
(), "dist") == 0)

1450 
	`¥ötf
("found dist\n");

1451 } i‡(
a
->
	`is_èrgë_m≠_íåy
()) {

1452 
	`gíî©e_£¡_m≠_assign
(
a
->
	`to_assign_m≠íåy
());

1456 
	`gíî©e_lhs_fõld
(
a
->
	`gë_lhs_fõld
());

1459 
_Body
.
	`push
(" = ");

1489 
	`gíî©e_ex¥
(
a
->
	`gë_rhs
());

1492 
_Body
.
	`push 
(" ;");

1496 i‡(!(
a
->
	`is_èrgë_sˇœr
()Ë&& !◊->
	`is_èrgë_m≠_íåy
())) {

1498 
boﬁ
 
loˇl_ac˚ss_node
 = 
Ál£
;

1499 
boﬁ
 
loˇl_ac˚ss_edge
 = 
Ál£
;

1501 
a°_fõld
* 
f
 = 
a
->
	`gë_lhs_fõld
();

1502 
	`as£π
(
f
);

1503 c⁄° * 
ödex_«me
;

1504 if(
f
->
	`gëTy≥Info
()->
	`is_node_¥›îty
()){

1505 
ödex_«me
 = 
	`gë_lib
()->
	`node_ödex
(
f
->
	`gë_fú°
());

1506 
loˇl_ac˚ss_node
 = 
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
ödex_«me
);

1508 if(
f
->
	`gëTy≥Info
()->
	`is_edge_¥›îty
())

1510 i‡(
f
->
	`is_øºow
()) {

1511 c⁄° * 
Æüs_«me
 = 
f
->
	`gë_fú°
()->
	`gëSymInfo
()->
	`föd_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
);

1512 
	`as£π
(
Æüs_«me
 !
NULL
);

1513 
	`as£π
(
	`°æí
(
Æüs_«me
) > 0);

1514 
ödex_«me
 = 
Æüs_«me
;

1517 i‡(
f
->
	`gë_fú°
()->
	`föd_öfo_boﬁ
(
CPPBE_INFO_IS_REVERSE_EDGE
)) {

1518 
ödex_«me
 = 
	`gë_lib
()->
	`fw_edge_ödex
(
f
->
	`gë_fú°
());

1522 
ödex_«me
 = 
	`gë_lib
()->
	`edge_ödex
(
f
->
	`gë_fú°
());

1524 
loˇl_ac˚ss_edge
 = 
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(
ödex_«me
);

1527 if(!(
loˇl_ac˚ss_node
||
loˇl_ac˚ss_edge
))

1528 
MPI_GEN
.
	`gíî©e_mpi_put_block
(
f
, 
Body
);

1531 
cur_öd
 = 0;

1532 
	`¥ötf
("bef‹êˇŒög gíî©e_mpi_gë_block: fûe_±∏i†%d\n", 
_Body
.
	`gë_wrôe_±r
(
cur_öd
));

1535 if(
MPI_GEN
.
mpi_gë_dëaûs
.
	`size
() != 0)

1536 
MPI_GEN
.
	`gíî©e_mpi_gë_block
(
f_±r
, 
cuºít_ödít
, 
Body
);

1537 
	}
}

1539 
	ggm_˝p_gí
::
	$gíî©e_£¡_block
(
a°_£¡block
* 
sb
) {

1540 
	`gíî©e_£¡_block
(
sb
, 
åue
);

1541 
	}
}

1543 
	ggm_˝p_gí
::
	$gíî©e_£¡_block_íãr
(
a°_£¡block
* 
sb
) {

1544 i‡(
sb
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_IS_PROC_ENTRY
Ë&& !
FE
.
	`gë_cuºít_¥oc
()->
	`is_loˇl
()) {

1545 
Body
.
	`push 
("//Initializations");

1547 
	`•rötf
(
ãmp
, "%s();", 
RT_INIT
);

1548 
Body
.
	`push 
(
ãmp
);

1553 
a°_¥ocdef
* 
¥oc
 = 
FE
.
	`gë_cuºít_¥oc
();

1554 
gm_symèb
* 
v¨s
 = 
¥oc
->
	`gë_symèb_v¨
();

1555 
gm_symèb
* 
fõlds
 = 
¥oc
->
	`gë_symèb_fõld
();

1559 
°d
::
£t
<
gm_symèb_íåy
*>& 
E
 = 
v¨s
->
	`gë_íåõs
();

1560 
°d
::
£t
<
gm_symèb_íåy
*>::
ôî©‹
 
I
;

1561 
I
 = 
E
.
	`begö
(); I !E.
	`íd
(); I++) {

1562 
gm_symèb_íåy
* 
e
 = *
I
;

1563 i‡(
e
->
	`gëTy≥
()->
	`is_gøph
()) {

1564 
	`•rötf
(
ãmp
, "%s.%s();", 
e
->
	`gëId
()->
	`gë_gí«me
(), 
FREEZE
);

1565 
Body
.
	`push 
(
ãmp
);

1568 i‡(
e
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_REVERSE_EDGE
)) {

1569 
	`•rötf
(
ãmp
, "%s.%s();", 
e
->
	`gëId
()->
	`gë_gí«me
(), 
MAKE_REVERSE
);

1570 
Body
.
	`push 
(
ãmp
);

1572 i‡(
e
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_NEED_SEMI_SORT
)) {

1573 
boﬁ
 
has_edge_¥›
 = 
Ál£
;

1579 
°d
::
£t
<
gm_symèb_íåy
*>& 
F
 = 
fõlds
->
	`gë_íåõs
();

1580 
°d
::
£t
<
gm_symèb_íåy
*>::
ôî©‹
 
J
;

1581 
J
 = 
F
.
	`begö
(); J !F.
	`íd
(); J++) {

1582 
gm_symèb_íåy
* 
f
 = *
J
;

1583 i‡((
f
->
	`gëTy≥
()->
	`gë_èrgë_gøph_sym
(Ë=
e
Ë&& (f->gëTy≥()->
	`is_edge_¥›îty
())Ë
has_edge_¥›
 = 
åue
;

1586 i‡(
has_edge_¥›
) {

1587 
Body
.
	`push 
("//[xxx]ÉdgeÖroperty must be created before semi-sorting");

1588 
	`•rötf
(
ãmp
, "as£π(%s.%s());", 
e
->
	`gëId
()->
	`gë_gí«me
(), 
IS_SEMI_SORTED
);

1589 
Body
.
	`push 
(
ãmp
);

1591 
	`•rötf
(
ãmp
, "%s.%s();", 
e
->
	`gëId
()->
	`gë_gí«me
(), 
SEMI_SORT
);

1592 
Body
.
	`push 
(
ãmp
);

1595 
	`•rötf
(
ãmp
, "%s.%s();", 
e
->
	`gëId
()->
	`gë_gí«me
(), 
SEMI_SORT
);

1596 
Body
.
	`push 
(
ãmp
);

1600 i‡(
e
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_NEED_FROM_INFO
)) {

1601 
	`•rötf
(
ãmp
, "%s.%s();", 
e
->
	`gëId
()->
	`gë_gí«me
(), 
PREPARE_FROM_INFO
);

1602 
Body
.
	`push 
(
ãmp
);

1607 
Body
.
	`NL
();

1608 
MPI_GEN
.
	`gíî©e_wö_©èch_ö_∑øm_¥›s
(
Body
);

1609 
Body
.
	`NL
();

1610 
MPI_GEN
.
	`gíî©e_wö_©èch_out_∑øm_¥›s
(
Body
);

1615 
	}
}

1617 
	ggm_˝p_gí
::
	$gíî©e_£¡_block
(
a°_£¡block
* 
sb
, 
boﬁ
 
√ed_br
) {

1618 i‡(
	`is_èrgë_omp
()) {

1619 
boﬁ
 
is_∑r_sc›e
 = 
sb
->
	`föd_öfo_boﬁ
(
LABEL_PAR_SCOPE
);

1620 i‡(
is_∑r_sc›e
) {

1621 
	`as£π
(
	`is_undî_∑øŒñ_£¡block
(Ë=
Ál£
);

1622 
	`£t_undî_∑øŒñ_£¡block
(
åue
);

1623 
√ed_br
 = 
åue
;

1628 i‡(
√ed_br
Ë
Body
.
	`push 
("{");

1631 
	`gíî©e_£¡_block_íãr
(
sb
);

1633 
°d
::
li°
<
a°_£¡
*>& 
£¡s
 = 
sb
->
	`gë_£¡s
();

1634 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
ô
;

1635 
boﬁ
 
v¨de˛_°¨ãd
 = 
Ál£
;

1636 
boﬁ
 
Ÿhî_°¨ãd
 = 
Ál£
;

1637 
ô
 = 
£¡s
.
	`begö
(); ià!£¡s.
	`íd
(); it++) {

1639 
a°_£¡
* 
s
 = *
ô
;

1640 i‡(!
v¨de˛_°¨ãd
) {

1641 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_VARDECL
Ë
v¨de˛_°¨ãd
 = 
åue
;

1643 i‡(
Ÿhî_°¨ãd
 =
Ál£
) {

1644 i‡(
s
->
	`gë_nodëy≥
(Ë!
AST_VARDECL
) {

1645 
Body
.
	`NL
();

1646 
Ÿhî_°¨ãd
 = 
åue
;

1650 
	`gíî©e_£¡
(*
ô
);

1654 
	`gíî©e_£¡_block_exô
(
sb
);

1656 i‡(
√ed_br
Ë
Body
.
	`push 
("}");

1658 i‡(
	`is_undî_∑øŒñ_£¡block
()Ë
	`£t_undî_∑øŒñ_£¡block
(
Ál£
);

1661 
	}
}

1663 
	ggm_˝p_gí
::
	$gíî©e_£¡_block_exô
(
a°_£¡block
* 
sb
) {

1664 
boﬁ
 
has_¥›_de˛
 = 
sb
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_HAS_PROPDECL
);

1665 
boﬁ
 
is_¥oc_íåy
 = 
sb
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_IS_PROC_ENTRY
);

1666 
	`as£π
(
sb
->
	`gë_nodëy≥
(Ë=
AST_SENTBLOCK
);

1667 
boﬁ
 
has_ªtu∫_ahód
 = 
	`gm_check_if_íd_wôh_ªtu∫
(
sb
);

1669 i‡(
has_¥›_de˛
 && !
has_ªtu∫_ahód
) {

1670 i‡(
is_¥oc_íåy
) {

1671 
Body
.
	`NL
();

1672 
	`•rötf
(
ãmp
, "%s();", 
CLEANUP_PTR
);

1673 
Body
.
	`push 
(
ãmp
);

1675 
Body
.
	`NL
();

1676 
gm_symèb
* 
èb
 = 
sb
->
	`gë_symèb_fõld
();

1679 
°d
::
£t
<
gm_symèb_íåy
*>& 
íåõs
 = 
èb
->
	`gë_íåõs
();

1680 
°d
::
£t
<
gm_symèb_íåy
*>::
ôî©‹
 
I
;

1681 
I
 = 
íåõs
.
	`begö
(); I !íåõs.
	`íd
(); I++) {

1682 
gm_symèb_íåy
 *
e
 = *
I
;

1683 
	`•rötf
(
ãmp
, "%s(%s,%s());", 
DEALLOCATE
, 
e
->
	`gëId
()->
	`gë_gí«me
(), 
THREAD_ID
);

1684 
Body
.
	`push 
(
ãmp
);

1689 
	}
}

1691 
	ggm_˝p_gí
::
	$gíî©e_£¡_ªdu˚_assign
(
a°_assign
 *
a
) {

1692 i‡(
a
->
	`is_¨gmömax_assign
()) {

1693 
	`gíî©e_£¡_ªdu˚_¨gmö_assign
(
a
);

1697 
GM_REDUCE_T
 
r_ty≥
 = (GM_REDUCE_TË
a
->
	`gë_ªdu˚_ty≥
();

1698 c⁄° * 
mëhod_«me
 = 
	`gë_lib
()->
	`gë_ªdu˘i⁄_fun˘i⁄_«me
(
r_ty≥
);

1699 
boﬁ
 
is_sˇœr
 = (
a
->
	`gë_lhs_ty≥
(Ë=
GMASSIGN_LHS_SCALA
);

1701 
a°_ty≥de˛
* 
lhs_èrgë_ty≥
;

1702 i‡(
a
->
	`gë_lhs_ty≥
(Ë=
GMASSIGN_LHS_SCALA
) {

1703 
lhs_èrgë_ty≥
 = 
a
->
	`gë_lhs_sˇœ
()->
	`gëTy≥Info
();

1705 
lhs_èrgë_ty≥
 = 
a
->
	`gë_lhs_fõld
()->
	`gëTy≥Info
()->
	`gë_èrgë_ty≥
();

1708 
ãm∂©eP¨amëî
[32];

1709 i‡(
r_ty≥
 !
GMREDUCE_OR
 &&Ñ_ty≥ !
GMREDUCE_AND
) {

1710 
	`•rötf
(
ãm∂©eP¨amëî
, "<%s>", 
	`gë_ty≥_°rög
(
lhs_èrgë_ty≥
));

1712 
	`•rötf
(
ãm∂©eP¨amëî
, "");

1716 
cuºít_ödít
 = 0;

1717 
f_±r
 = 
_Body
.
	`gë_wrôe_±r
(
cuºít_ödít
);

1719 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

1721 if(!
is_sˇœr
){

1722 
a°_fõld
 *
f
 = 
a
->
	`gë_lhs_fõld
();

1723 c⁄° *
tmp_ty≥
 = 
NULL
;

1724 c⁄° *
tmp_«me
 = 
NULL
;

1725 
	`gë_ãmpv¨_«me_™d_ty≥
(&
tmp_ty≥
, &
tmp_«me
, 
f
);

1727 
MPI_GEN
.
tmpv¨_cou¡
++;

1728 
	`•rötf
(
MPI_GEN
.
ãmpv¨_cou¡°r
, "%d", MPI_GEN.
tmpv¨_cou¡
);

1730 
Body
.
	`push
(
tmp_ty≥
);

1731 
Body
.
	`push
(" ");

1733 
Body
.
	`push
(
tmp_«me
);

1734 
Body
.
	`push
("_tmp");

1735 
Body
.
	`push
(
MPI_GEN
.
ãmpv¨_cou¡°r
);

1736 
Body
.
	`push
(";");

1737 
Body
.
	`NL
();

1739 
Body
.
	`push
(
tmp_«me
);

1740 
Body
.
	`push
("_tmp");

1741 
Body
.
	`push
(
MPI_GEN
.
ãmpv¨_cou¡°r
);

1742 
Body
.
	`push
(" = ");

1747 
boﬁ
 
ªquúe_mpi_ªd
 = 
Ál£
;

1748 if(
is_sˇœr
)

1750 
a°_id
 * 
lhs_id
 = 
a
->
	`gë_lhs_sˇœ
();

1751 if(!(
lhs_id
->
	`föd_öfo_boﬁ
(
LABEL_DECLARED_IN_PAR
)))

1754 
ªquúe_mpi_ªd
 = 
åue
;

1758 if(
ªquúe_mpi_ªd
)

1762 
Body
.
	`push
(
mëhod_«me
);

1763 
Body
.
	`push
(
ãm∂©eP¨amëî
);

1764 
Body
.
	`push
("(&");

1765 i‡(
is_sˇœr
)

1766 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
());

1767 
Body
.
	`push
(", ");

1768 
	`gíî©e_ex¥
(
a
->
	`gë_rhs
());

1769 
Body
.
	`push
(");\n");

1773 i‡(
is_sˇœr
)

1775 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
());

1776 
Body
.
	`push
(" = ");

1777 
r_ty≥
) {

1778 
GMREDUCE_PLUS
:

1779 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
()); 
Body
.
	`push
("+"); 
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(";");

1781 
GMREDUCE_MULT
:

1782 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
()); 
Body
.
	`push
("*"); 
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(";");

1784 
GMREDUCE_AND
:

1785 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
()); 
Body
.
	`push
("&"); Body.push("(");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1787 
GMREDUCE_OR
:

1788 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
()); 
Body
.
	`push
("|"); Body.push("(");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1790 
GMREDUCE_MIN
:

1791 
Body
.
	`push
("°d::mö(");
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
()); Body.push(",");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1793 
GMREDUCE_MAX
:

1794 
Body
.
	`push
("°d::max(");
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
()); Body.push(",");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1797 
	`as£π
(
Ál£
);

1803 
r_ty≥
) {

1804 
GMREDUCE_PLUS
:

1805 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
()); 
Body
.
	`push
("+"); 
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(";");

1807 
GMREDUCE_MULT
:

1808 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
()); 
Body
.
	`push
("*"); 
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(";");

1810 
GMREDUCE_AND
:

1811 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
()); 
Body
.
	`push
("&"); Body.push("(");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1813 
GMREDUCE_OR
:

1814 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
()); 
Body
.
	`push
("|"); Body.push("(");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1816 
GMREDUCE_MIN
:

1817 
Body
.
	`push
("°d::mö("); 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
()); Body.push(",");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1819 
GMREDUCE_MAX
:

1820 
Body
.
	`push
("°d::max("); 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
()); Body.push(",");
	`gíî©e_ex¥
◊->
	`gë_rhs
()); Body.push(");");

1823 
	`as£π
(
Ál£
);

1828 
MPI_GEN
.
	`gíî©e_mpi_gë_block
(
f_±r
, 
cuºít_ödít
, 
Body
);

1830 if(!
is_sˇœr
){

1831 
a°_fõld
 *
f
 = 
a
->
	`gë_lhs_fõld
();

1832 
MPI_GEN
.
	`gíî©e_mpi_put_block
(
f
 ,
Body
);

1834 
	}
}

1838 
	ggm_˝p_gí
::
	$gíî©e_£¡_ªdu˚_¨gmö_assign
(
a°_assign
 *
a
) {

1839 
	`as£π
(
a
->
	`is_¨gmömax_assign
());

1840 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

1862 
Body
.
	`push 
("{ ");

1864 
cuº_ödít
 = 0;

1865 
Â
 = 
Body
.
	`gë_wrôe_±r
(
cuº_ödít
);

1867 c⁄° * 
rhs_ãmp
;

1868 
t
;

1869 i‡(
a
->
	`is_èrgë_sˇœr
()) {

1870 
t
 = 
a
->
	`gë_lhs_sˇœ
()->
	`gëTy≥Summ¨y
();

1871 
rhs_ãmp
 = (c⁄° *Ë
FE
.
	`voˇ_ãmp_«me_™d_add
(
a
->
	`gë_lhs_sˇœ
()->
	`gë_gí«me
(), "_new");

1873 
t
 = 
a
->
	`gë_lhs_fõld
()->
	`gë_£c⁄d
()->
	`gëT¨gëTy≥Summ¨y
();

1874 
rhs_ãmp
 = (c⁄° *Ë
FE
.
	`voˇ_ãmp_«me_™d_add
(
a
->
	`gë_lhs_fõld
()->
	`gë_£c⁄d
()->
	`gë_gí«me
(), "_new");

1876 
Body
.
	`push
(
	`gë_ty≥_°rög
(
t
));

1877 
Body
.
	`SPC
();

1878 
Body
.
	`push
(
rhs_ãmp
);

1879 
Body
.
	`push
(" = ");

1880 
	`gíî©e_ex¥
(
a
->
	`gë_rhs
());

1881 
Body
.
	`push 
(";");

1883 
boﬁ
 
ªquúe_mpi_ªd
 = 
Ál£
;

1884 i‡(
a
->
	`is_èrgë_sˇœr
()) {

1885 
a°_id
 * 
lhs_id
 = 
a
->
	`gë_lhs_sˇœ
();

1886 if(!(
lhs_id
->
	`föd_öfo_boﬁ
(
LABEL_DECLARED_IN_PAR
)))

1889 
ªquúe_mpi_ªd
 = 
åue
;

1892 if(
ªquúe_mpi_ªd
)

1894 c⁄° * 
√w_ãmp
;

1895 
t
 = 
a
->
	`gë_lhs_sˇœ
()->
	`gëTy≥Summ¨y
();

1896 
√w_ãmp
 = (c⁄° *Ë
FE
.
	`voˇ_ãmp_«me_™d_add
(
a
->
	`gë_lhs_sˇœ
()->
	`gë_gí«me
(), "_red");

1897 
Body
.
	`push
(
	`gë_ty≥_°rög
(
t
));

1898 
Body
.
	`SPC
();

1899 
Body
.
	`push
(
√w_ãmp
);

1900 
Body
.
	`push 
(";");

1902 i‡(
a
->
	`gë_ªdu˚_ty≥
(Ë=
GMREDUCE_MIN
) {

1903 
Body
.
	`push
("MPI_Allreduce( &");

1904 
Body
.
	`push
(
rhs_ãmp
);

1905 
Body
.
	`push
(", &");

1906 
Body
.
	`push
(
√w_ãmp
);

1907 
Body
.
	`push 
(", 1, MPI_INT, MPI_MIN, MPI_COMM_WORLD);");

1910 
Body
.
	`push
("MPI_Allreduce( &");

1911 
Body
.
	`push
(
rhs_ãmp
);

1912 
Body
.
	`push
(", &");

1913 
Body
.
	`push
(
√w_ãmp
);

1914 
Body
.
	`push 
(", 1, MPI_INT, MPI_MAX, MPI_COMM_WORLD);");

1917 
rhs_ãmp
 = 
√w_ãmp
;

1925 
MPI_GEN
.
	`gíî©e_mpi_gë_block
(
Â
, 
cuº_ödít
, 
Body
);

1927 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

1929 
cuº_ödít1
 = 0;

1930 
Â1
 = 
Body
.
	`gë_wrôe_±r
(
cuº_ödít1
);

1932 
Body
.
	`NL
();

1934 
Body
.
	`push
("if (");

1935 i‡(
a
->
	`is_èrgë_sˇœr
()) {

1936 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
());

1938 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
());

1944 i‡(
a
->
	`gë_ªdu˚_ty≥
(Ë=
GMREDUCE_MIN
) {

1945 
Body
.
	`push
(">");

1947 
Body
.
	`push
("<");

1949 
Body
.
	`push
(
rhs_ãmp
);

1950 
Body
.
	`push 
(") {");

1953 if(!
a
->
	`is_èrgë_sˇœr
()){

1954 
MPI_GEN
.
	`gíî©e_mpi_gë_block
(
Â1
, 
cuº_ödít1
, 
Body
);

1955 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

1962 
°d
::
li°
<
a°_node
*> 
L
 = 
a
->
	`gë_lhs_li°
();

1963 
°d
::
li°
<
a°_ex¥
*> 
R
 = 
a
->
	`gë_rhs_li°
();

1964 
°d
::
li°
<
a°_node
*>::
ôî©‹
 
I
;

1965 
°d
::
li°
<
a°_ex¥
*>::
ôî©‹
 
J
;

1966 ** 
«mes
 = 
√w
 *[
L
.
	`size
()];

1967 
i
 = 0;

1968 
J
 = 
R
.
	`begö
();

1969 
I
 = 
L
.
	`begö
(); I !L.
	`íd
(); I++, 
J
++, 
i
++) {

1970 
a°_node
* 
n
 = *
I
;

1971 
a°_id
* 
id
;

1972 
ty≥
;

1973 i‡(
n
->
	`gë_nodëy≥
(Ë=
AST_ID
) {

1974 
id
 = (
a°_id
*Ë
n
;

1975 
ty≥
 = 
id
->
	`gëTy≥Summ¨y
();

1977 
	`as£π
(
n
->
	`gë_nodëy≥
(Ë=
AST_FIELD
);

1978 
a°_fõld
* 
f
 = (a°_fõld*Ë
n
;

1979 
id
 = 
f
->
	`gë_£c⁄d
();

1980 
ty≥
 = 
id
->
	`gëT¨gëTy≥Summ¨y
();

1982 
«mes
[
i
] = (*Ë
FE
.
	`voˇ_ãmp_«me_™d_add
(
id
->
	`gë_gí«me
(), "_arg");

1983 
Body
.
	`push
(
	`gë_ty≥_°rög
(
ty≥
));

1984 
Body
.
	`SPC
();

1985 
Body
.
	`push
(
«mes
[
i
]);

1986 
Body
.
	`push
(" = ");

1987 
	`gíî©e_ex¥
(*
J
);

1988 
Body
.
	`push 
(";");

1992 c⁄° * 
LOCK_FN_NAME
;

1993 c⁄° * 
UNLOCK_FN_NAME
;

1994 i‡(
a
->
	`is_èrgë_sˇœr
()) {

1995 
LOCK_FN_NAME
 = "";

1996 
UNLOCK_FN_NAME
 = "";

1998 
a°_id
* 
drv
 = 
a
->
	`gë_lhs_fõld
()->
	`gë_fú°
();

1999 i‡(
drv
->
	`gëTy≥Info
()->
	`is_node_com∑tibÀ
()) {

2000 
LOCK_FN_NAME
 = "lock_win_for_node";

2001 
UNLOCK_FN_NAME
 = "unlock_win_for_node";

2002 } i‡(
drv
->
	`gëTy≥Info
()->
	`is_edge_com∑tibÀ
()) {

2003 
LOCK_FN_NAME
 = "lock_win_for_edge";

2004 
UNLOCK_FN_NAME
 = "unlock_win_for_edge";

2006 
	`as£π
(
Ál£
);

2010 
Body
.
	`push
(
LOCK_FN_NAME
);

2011 
Body
.
	`push
("(");

2012 i‡(
a
->
	`is_èrgë_sˇœr
()) {

2013 
Body
.
	`push
("&");

2014 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
());

2016 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_fõld
()->
	`gë_fú°
());

2018 
Body
.
	`push 
(");");

2020 
cuº_ödít2
 = 0;

2021 
Â2
 = 
Body
.
	`gë_wrôe_±r
(
cuº_ödít2
);

2024 
Body
.
	`push
("if (");

2025 i‡(
a
->
	`is_èrgë_sˇœr
()) {

2026 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
());

2028 
	`gíî©e_rhs_fõld
(
a
->
	`gë_lhs_fõld
());

2030 i‡(
a
->
	`gë_ªdu˚_ty≥
(Ë=
GMREDUCE_MIN
) {

2031 
Body
.
	`push
(">");

2033 
Body
.
	`push
("<");

2035 
Body
.
	`push
(
rhs_ãmp
);

2036 
Body
.
	`push 
(") {");

2038 if(!(
a
->
	`is_èrgë_sˇœr
()))

2040 
MPI_GEN
.
	`gíî©e_mpi_gë_block_wôhout_lock
(
Â2
, 
cuº_ödít2
, 
Body
, 
åue
);

2041 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

2045 i‡(
a
->
	`is_èrgë_sˇœr
()) {

2046 
	`gíî©e_lhs_id
(
a
->
	`gë_lhs_sˇœ
());

2050 
	`gíî©e_lhs_fõld
(
a
->
	`gë_lhs_fõld
());

2055 
Body
.
	`push
(" = ");

2056 
Body
.
	`push
(
rhs_ãmp
);

2057 
Body
.
	`push 
(";");

2060 if(!(
a
->
	`is_èrgë_sˇœr
()))

2062 
MPI_GEN
.
	`gíî©e_mpi_put_block_wôhout_lock
(
a
->
	`gë_lhs_fõld
(), 
Body
);

2067 
i
 = 0;

2068 
I
 = 
L
.
	`begö
(); I !L.
	`íd
(); I++, 
i
++) {

2069 
a°_node
* 
n
 = *
I
;

2070 i‡(
n
->
	`gë_nodëy≥
(Ë=
AST_ID
) {

2071 
	`gíî©e_lhs_id
((
a°_id
*Ë
n
);

2072 
a°_id
 *
√
 = (a°_id *)
n
;

2074 
	`gíî©e_lhs_fõld
((
a°_fõld
*Ë
n
);

2075 
a°_fõld
 *
√
 = (a°_fõld *)
n
;

2077 
Body
.
	`push
(" = ");

2078 
Body
.
	`push
(
«mes
[
i
]);

2079 
Body
.
	`push 
(";");

2080 i‡(!(
n
->
	`gë_nodëy≥
(Ë=
AST_ID
)) {

2081 
MPI_GEN
.
	`gíî©e_mpi_put_block_wôhout_lock
((
a°_fõld
*Ë
n
, 
Body
);

2085 
Body
.
	`push 
("}");

2087 
Body
.
	`push
(
UNLOCK_FN_NAME
);

2088 
Body
.
	`push
("(");

2089 i‡(
a
->
	`is_èrgë_sˇœr
()) {

2090 
Body
.
	`push
("&");

2091 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_sˇœ
());

2093 
	`gíî©e_rhs_id
(
a
->
	`gë_lhs_fõld
()->
	`gë_fú°
());

2095 
Body
.
	`push 
(");");

2097 
Body
.
	`push 
("}");

2099 
Body
.
	`push 
("}");

2101 
i
 = 0; i < (Ë
L
.
	`size
(); i++)

2102 
dñëe
[] 
«mes
[
i
];

2103 
dñëe
[] 
«mes
;

2104 
dñëe
[] 
rhs_ãmp
;

2105 
	}
}

2107 
	ggm_˝p_gí
::
	$gíî©e_£¡_ªtu∫
(
a°_ªtu∫
 *
r
) {

2108 i‡(
FE
.
	`gë_cuºít_¥oc
()->
	`föd_öfo_boﬁ
(
CPPBE_INFO_HAS_PROPDECL
)) {

2109 
Body
.
	`push
(
CLEANUP_PTR
);

2110 
Body
.
	`push 
("();");

2114 
cuºít_ödít
 = 0;

2115 
f_±r
 = 
_Body
.
	`gë_wrôe_±r
(
cuºít_ödít
);

2116 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

2117 
Body
.
	`push
("/*here*/return");

2118 i‡(
r
->
	`gë_ex¥
(Ë!
NULL
) {

2119 
Body
.
	`SPC
();

2120 
	`gíî©e_ex¥
(
r
->
	`gë_ex¥
());

2122 
Body
.
	`push 
("; ");

2123 if(
MPI_GEN
.
mpi_gë_dëaûs
.
	`size
() != 0)

2124 
MPI_GEN
.
	`gíî©e_mpi_gë_block
(
f_±r
, 
cuºít_ödít
, 
Body
);

2125 
	}
}

2127 
	ggm_˝p_gí
::
	$gíî©e_£¡_n›
(
a°_n›
* 
n
) {

2128 
n
->
	`gë_subty≥
()) {

2129 
NOP_REDUCE_SCALAR
:

2130 ((
n›_ªdu˚_sˇœr
*Ë
n
)->
	`gíî©e
(
this
);

2134 
	`gë_lib
()->
	`gíî©e_£¡_n›
(
n
);

2140 
	}
}

2142 
	ggm_˝p_gí
::
	$gíî©e_ex¥_öf
(
a°_ex¥
 *
e
) {

2143 * 
ãmp
 = 
ãmp_°r
;

2144 
	`as£π
(
e
->
	`gë_›˛ass
(Ë=
GMEXPR_INF
);

2145 
t
 = 
e
->
	`gë_ty≥_summ¨y
();

2146 
t
) {

2147 
GMTYPE_INF
:

2148 
GMTYPE_INF_INT
:

2149 
	`•rötf
(
ãmp
, "%s", 
e
->
	`is_∂us_öf
() ? "INT_MAX" : "INT_MIN");

2151 
GMTYPE_INF_LONG
:

2152 
	`•rötf
(
ãmp
, "%s", 
e
->
	`is_∂us_öf
() ? "LLONG_MAX" : "LLONG_MIN");

2154 
GMTYPE_INF_FLOAT
:

2155 
	`•rötf
(
ãmp
, "%s", 
e
->
	`is_∂us_öf
() ? "FLT_MAX" : "FLT_MIN");

2157 
GMTYPE_INF_DOUBLE
:

2158 
	`•rötf
(
ãmp
, "%s", 
e
->
	`is_∂us_öf
() ? "DBL_MAX" : "DBL_MIN");

2161 
	`¥ötf
("wh©Åy≥ i†ô? %d", 
t
);

2162 
	`as£π
(
Ál£
);

2163 
	`•rötf
(
ãmp
, "%s", 
e
->
	`is_∂us_öf
() ? "INT_MAX" : "INT_MIN");

2166 
Body
.
	`push
(
ãmp
);

2168 
	}
}

2170 
	ggm_˝p_gí
::
	$gíî©e_ex¥_abs
(
a°_ex¥
 *
e
) {

2171 
Body
.
	`push
(" std::abs(");

2172 
	`gíî©e_ex¥
(
e
->
	`gë_À·_›
());

2173 
Body
.
	`push
(") ");

2174 
	}
}

2175 
	ggm_˝p_gí
::
	$gíî©e_ex¥_mömax
(
a°_ex¥
 *
e
) {

2176 i‡(
e
->
	`gë_›ty≥
(Ë=
GMOP_MIN
) {

2177 
Body
.
	`push
(" std::min(");

2179 
Body
.
	`push
(" std::max(");

2181 
	`gíî©e_ex¥
(
e
->
	`gë_À·_›
());

2182 
Body
.
	`push
(",");

2183 
	`gíî©e_ex¥
(
e
->
	`gë_right_›
());

2184 
Body
.
	`push
(") ");

2185 
	}
}

2187 
	ggm_˝p_gí
::
	$gíî©e_ex¥_nû
(
a°_ex¥
* 
ì
) {

2188 
	`gë_lib
()->
	`gíî©e_ex¥_nû
(
ì
, 
Body
);

2189 
	}
}

2191 c⁄° * 
	ggm_˝p_gí
::
	$gë_fun˘i⁄_«me
(
mëhodId
, 
boﬁ
& 
addThªadId
) {

2192 
mëhodId
) {

2193 
GM_BLTIN_TOP_DRAND
:

2194 
addThªadId
 = 
åue
;

2196 
GM_BLTIN_TOP_IRAND
:

2197 
addThªadId
 = 
åue
;

2199 
GM_BLTIN_TOP_LOG
:

2201 
GM_BLTIN_TOP_EXP
:

2203 
GM_BLTIN_TOP_POW
:

2206 
	`as£π
(
Ál£
);

2209 
	}
}

2211 
	ggm_˝p_gí
::
	$gíî©e_ex¥_buûtö
(
a°_ex¥
* 
ì
) {

2212 
a°_ex¥_buûtö
* 
e
 = (a°_ex¥_buûtö*Ë
ì
;

2214 
gm_buûtö_def
* 
def
 = 
e
->
	`gë_buûtö_def
();

2216 
a°_id
* 
drivî
;

2217 i‡(
e
->
	`drivî_is_fõld
())

2220 
drivî
 = ((
a°_ex¥_buûtö_fõld
*Ë
e
)->
	`gë_fõld_drivî
()->
	`gë_£c⁄d
();

2225 
drivî
 = 
e
->
	`gë_drivî
();

2228 
	`as£π
(
def
 !
NULL
);

2229 
mëhod_id
 = 
def
->
	`gë_mëhod_id
();

2230 i‡(
drivî
 =
NULL
) {

2232 
boﬁ
 
add_thªad_id
 = 
Ál£
;

2233 c⁄° * 
func_«me
 = 
	`gë_fun˘i⁄_«me
(
mëhod_id
, 
add_thªad_id
);

2234 
Body
.
	`push
(
func_«me
);

2235 
Body
.
	`push
('(');

2236 
	`gíî©e_ex¥_li°
(
e
->
	`gë_¨gs
());

2237 i‡(
add_thªad_id
) {

2238 i‡(
e
->
	`gë_¨gs
().
	`size
() > 0)

2239 
Body
.
	`push
(", G.get_rank()");

2241 
Body
.
	`push
("G.get_rank()");

2243 
Body
.
	`push
(")");

2246 
	`gë_lib
()->
	`gíî©e_ex¥_buûtö
((
a°_ex¥_buûtö
*Ë
e
, 
Body
);

2248 
	}
}

2250 
	ggm_˝p_gí
::
	$¥ï¨e_∑øŒñ_f‹
(
boﬁ
 
√ed_dy«mic
) {

2261 
Body
.
	`push
("//mpi for");

2263 
Body
.
	`NL
();

2264 
	}
}

	@gm_cpp_gen_bfs.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_code_wrôî.h
"

5 
	~"gm_‰⁄ãnd.h
"

6 
	~"gm_backíd_mpi.h
"

8 
gm_mpi_gí
 
MPI_GEN
;

10 
	ggm_˝p_gí
::
	$gíî©e_bfs_body_fw
(
a°_bfs
* 
bfs
) {

11 
	`as£π
(
bfs
->
	`gë_f_fûãr
(Ë=
NULL
);

13 i‡(
bfs
->
	`is_bfs
()) {

14 
MPI_GEN
.
	`£t_ö_bfs_body
();

15 
MPI_GEN
.
loˇl_ac˚ss_nodes
.
	`push_back
(
bfs
->
	`gë_ôî©‹
()->
	`gë_gí«me
());

16 
Body
.
	`push
("virtual void visit_fw(");

18 
Body
.
	`push
("virtual void visit_pre(");

20 
Body
.
	`push
(
	`gë_lib
()->
	`gë_ty≥_°rög
(
GMTYPE_NODE
));

21 
Body
.
	`SPC
();

22 
Body
.
	`push
(
bfs
->
	`gë_ôî©‹
()->
	`gë_gí«me
());

23 
Body
.
	`push
(") ");

24 i‡((
bfs
->
	`gë_fbody
(Ë=
NULL
Ë|| (bfs->gë_fbody()->
	`gë_£¡s
().
	`size
() == 0)) {

25 
Body
.
	`push 
("{}");

27 
Body
.
	`NL
();

28 
a°_£¡block
 *
sb
 = 
bfs
->
	`gë_fbody
();

29 
	`gíî©e_£¡_block
(
sb
);

30 
Body
.
	`NL
();

32 i‡(
bfs
->
	`is_bfs
()) {

34 
MPI_GEN
.
loˇl_ac˚ss_nodes
.
	`p›_back
();

35 
MPI_GEN
.
	`ª£t_ö_bfs_body
();

37 
	}
}

39 
	ggm_˝p_gí
::
	$gíî©e_bfs_body_bw
(
a°_bfs
* 
bfs
) {

40 
	`as£π
(
bfs
->
	`gë_b_fûãr
(Ë=
NULL
);

43 i‡(
bfs
->
	`is_bfs
()) {

44 
MPI_GEN
.
	`£t_ö_bfs_body
();

45 
MPI_GEN
.
loˇl_ac˚ss_nodes
.
	`push_back
(
bfs
->
	`gë_ôî©‹
()->
	`gë_gí«me
());

46 
Body
.
	`push
("virtual void visit_rv(");

48 
Body
.
	`push
("virtual void visit_post(");

51 
Body
.
	`push
(
	`gë_lib
()->
	`gë_ty≥_°rög
(
GMTYPE_NODE
));

52 
Body
.
	`SPC
();

53 
Body
.
	`push
(
bfs
->
	`gë_ôî©‹
()->
	`gë_gí«me
());

54 
Body
.
	`push
(") ");

55 i‡(
bfs
->
	`gë_bbody
(Ë=
NULL
) {

56 
Body
.
	`push 
("{}");

58 
Body
.
	`NL
();

59 
a°_£¡block
 *
sb
 = 
bfs
->
	`gë_bbody
();

60 
	`gíî©e_£¡_block
(
sb
);

61 
Body
.
	`NL
();

63 i‡(
bfs
->
	`is_bfs
()) {

65 
MPI_GEN
.
loˇl_ac˚ss_nodes
.
	`p›_back
();

66 
MPI_GEN
.
	`ª£t_ö_bfs_body
();

68 
	}
}

70 
	ggm_˝p_gí
::
	$gíî©e_bfs_«vig©‹
(
a°_bfs
* 
bfs
) {

71 
Body
.
	`push
("virtual bool check_navigator(");

72 
Body
.
	`push
(
	`gë_lib
()->
	`gë_ty≥_°rög
(
GMTYPE_NODE
));

73 
Body
.
	`SPC
();

74 
Body
.
	`push
(
bfs
->
	`gë_ôî©‹
()->
	`gë_gí«me
());

75 
Body
.
	`push
(", ");

76 
Body
.
	`push
(
	`gë_lib
()->
	`gë_ty≥_°rög
(
GMTYPE_EDGE
));

77 
Body
.
	`SPC
();

78 c⁄° * 
Æüs_«me
 = 
bfs
->
	`gë_ôî©‹
()->
	`gëSymInfo
()->
	`föd_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
);

79 
	`as£π
(
Æüs_«me
 !
NULL
);

80 
	`as£π
(
	`°æí
(
Æüs_«me
) > 0);

81 
Body
.
	`push
(
Æüs_«me
);

82 
Body
.
	`push
(") ");

83 i‡(
bfs
->
	`gë_«vig©‹
(Ë=
NULL
) {

84 
Body
.
	`push 
("{returnÅrue;}");

87 
Body
.
	`NL
();

88 
Body
.
	`push 
("{");

89 
cuºít_ödít
 = 0;

90 
f_±r
 = 
_Body
.
	`gë_wrôe_±r
(
cuºít_ödít
);

91 
MPI_GEN
.
mpi_gë_dëaûs
.
	`˛ór
();

92 
Body
.
	`push
("return (");

93 
a°_ex¥
 *
nv
 = 
bfs
->
	`gë_«vig©‹
();

94 
	`gíî©e_ex¥
(
nv
);

95 
Body
.
	`push 
(");");

96 if(
MPI_GEN
.
mpi_gë_dëaûs
.
	`size
() != 0)

97 
MPI_GEN
.
	`gíî©e_mpi_gë_block
(
f_±r
, 
cuºít_ödít
, 
Body
);

98 
Body
.
	`push 
("}");

100 
	}
}

102 c⁄° * 
	$boﬁ_°rög
(
boﬁ
 
b
) {

103 i‡(
b
)

107 
	}
}

109 
	ggm_˝p_gí
::
	$gíî©e_bfs_def
(
a°_bfs
* 
bfs
) {

110 c⁄° * 
bfs_«me
 = 
bfs
->
	`föd_öfo_°rög
(
CPPBE_INFO_BFS_NAME
);

111 c⁄° * 
Àvñ_t
 = "short";

112 c⁄° * 
u£_mu…ôhªad
 = 
	`boﬁ_°rög
(
	`is_èrgë_omp
());

113 c⁄° * 
ßve_chûd
 = 
	`boﬁ_°rög
(
bfs
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_DOWN_NBR
));

114 c⁄° * 
u£_ªvî£_edge
 = 
	`boﬁ_°rög
(
bfs
->
	`is_å™•o£
());

115 c⁄° * 
has_«vig©‹
 = 
	`boﬁ_°rög
(
bfs
->
	`gë_«vig©‹
(Ë!
NULL
);

117 c⁄° * 
has_¥e_visô
 = 
	`boﬁ_°rög
((
bfs
->
	`gë_fbody
(Ë!
NULL
Ë&& (bfs->gë_fbody()->
	`gë_£¡s
().
	`size
() >= 1));

119 c⁄° * 
has_po°_visô
 = 
	`boﬁ_°rög
((
bfs
->
	`gë_bbody
(Ë!
NULL
Ë&& (bfs->gë_bbody()->
	`gë_£¡s
().
	`size
() >= 1));

121 
a°_exåa_öfo_li°
* 
öfo
 = (a°_exåa_öfo_li°*Ë
bfs
->
	`föd_öfo
(
CPPBE_INFO_BFS_SYMBOLS
);

122 
°d
::
li°
<*>& 
SET
 = 
öfo
->
	`gë_li°
();

123 
°d
::
li°
<*>::
ôî©‹
 
S
;

124 
gm_symèb_íåy
* 
gøph_sym
 = (gm_symèb_íåy*Ë(*(
SET
.
	`begö
()));

125 c⁄° * 
ãm∂©e_«me
 = (
bfs
->
	`is_bfs
(Ë? 
BFS_TEMPLATE
 : 
DFS_TEMPLATE
);

127 
	`•rötf
(
ãmp
, "˛as†%†:Öubli¯%s", 
bfs_«me
, 
ãm∂©e_«me
);

128 
Body
.
	`push 
(
ãmp
);

129 
Body
.
	`push_ödít
();

130 i‡(
bfs
->
	`is_bfs
()) {

131 
	`•rötf
(
ãmp
, "<%s, %s, %s, %s, %s>", 
Àvñ_t
, 
u£_mu…ôhªad
, 
has_«vig©‹
, 
u£_ªvî£_edge
, 
ßve_chûd
);

133 
	`•rötf
(
ãmp
, "<%s, %s, %s, %s>", 
has_¥e_visô
, 
has_po°_visô
, 
has_«vig©‹
, 
u£_ªvî£_edge
);

136 
Body
.
	`push 
(
ãmp
);

137 
Body
.
	`p›_ödít
();

138 
Body
.
	`push 
("{");

140 
Body
.
	`p›_ödít
();

141 
Body
.
	`push 
("public:");

142 
Body
.
	`push_ödít
();

144 
	`•rötf
(
ãmp
, "%s(", 
bfs_«me
);

145 
Body
.
	`push
(
ãmp
);

150 
boﬁ
 
is_fú°
 = 
åue
;

151 
tŸÆ
 = 
SET
.
	`size
();

152 
i
 = 0;

153 
NL
 = 3;

154 
S
 = 
SET
.
	`begö
(); S !SET.
	`íd
(); S++, 
i
++) {

155 i‡(!
is_fú°
Ë
Body
.
	`push
(", ");

156 i‡((
i
 > 0Ë&& (ò!
tŸÆ
Ë&& ((ò% 
NL
Ë=0)Ë
Body
.
	`NL
();

157 
is_fú°
 = 
Ál£
;

158 
gm_symèb_íåy
* 
sym
 = (gm_symèb_íåy*Ë(*
S
);

159 
a°_ty≥de˛
* 
t
 = 
sym
->
	`gëTy≥
();

161 c⁄° * 
ty≥_°rög
;

162 if(
	`gë_lib
()->
	`has_›timized_ty≥_«me
(
sym
)) {

163 
ty≥_°rög
 = 
	`gë_lib
()->
	`gë_›timized_ty≥_«me
(
sym
);

165 
ty≥_°rög
 = 
	`gë_ty≥_°rög
(
t
);

167 
Body
.
	`push
(
ty≥_°rög
);

168 
Body
.
	`push
("&");

169 
Body
.
	`push
(" _");

170 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

172 if(
t
->
	`is_¥›îty
()) {

173 
Body
.
	`push
(", ");

174 
Body
.
	`push
("int");

175 
Body
.
	`push
("&");

176 
Body
.
	`push
(" _");

177 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

178 
Body
.
	`push
("_index");

182 
Body
.
	`push 
(")");

183 
	`•rötf
(
ãmp
, ": %s", 
ãm∂©e_«me
);

184 
Body
.
	`push
(
ãmp
);

185 i‡(
bfs
->
	`is_bfs
()) {

186 
	`•rötf
(
ãmp
, "<%s, %s, %s, %s, %s>", 
Àvñ_t
, 
u£_mu…ôhªad
, 
has_«vig©‹
, 
u£_ªvî£_edge
, 
ßve_chûd
);

188 
	`•rötf
(
ãmp
, "<%s, %s, %s, %s>", 
has_¥e_visô
, 
has_po°_visô
, 
has_«vig©‹
, 
u£_ªvî£_edge
);

190 
Body
.
	`push
(
ãmp
);

191 
	`•rötf
(
ãmp
, "(_%s),", 
gøph_sym
->
	`gëId
()->
	`gë_gí«me
());

192 
Body
.
	`push 
(
ãmp
);

195 
is_fú°
 = 
åue
;

196 
NL
 = 6;

197 
i
 = 0;

198 
S
 = 
SET
.
	`begö
(); S !SET.
	`íd
(); S++, 
i
++) {

199 i‡(!
is_fú°
Ë
Body
.
	`push
(", ");

200 i‡((
i
 > 0Ë&& (ò!
tŸÆ
Ë&& ((ò% 
NL
Ë=0)Ë
Body
.
	`NL
();

201 
is_fú°
 = 
Ál£
;

202 
gm_symèb_íåy
* 
sym
 = (gm_symèb_íåy*Ë(*
S
);

203 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

204 
Body
.
	`push
('(');

205 
Body
.
	`push
('_');

206 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

207 
Body
.
	`push
(')');

210 
a°_ty≥de˛
* 
t
 = 
sym
->
	`gëTy≥
();

211 if(
t
->
	`is_¥›îty
()) {

212 
Body
.
	`push
(", ");

213 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

214 
Body
.
	`push
("_index(");

215 
Body
.
	`push
("_");

216 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

217 
Body
.
	`push
("_index)");

221 
Body
.
	`push 
("{}");

222 
Body
.
	`NL
();

227 
Body
.
	`p›_ödít
();

228 
Body
.
	`push 
("private: //Üist of varaibles");

229 
Body
.
	`push_ödít
();

230 
S
 = 
SET
.
	`begö
(); S !SET.
	`íd
(); S++, 
i
++) {

231 
gm_symèb_íåy
* 
sym
 = (gm_symèb_íåy*Ë(*
S
);

232 
a°_ty≥de˛
* 
t
 = 
sym
->
	`gëTy≥
();

234 c⁄° * 
ty≥_°rög
;

235 if(
	`gë_lib
()->
	`has_›timized_ty≥_«me
(
sym
)) {

236 
ty≥_°rög
 = 
	`gë_lib
()->
	`gë_›timized_ty≥_«me
(
sym
);

238 
ty≥_°rög
 = 
	`gë_ty≥_°rög
(
t
);

240 
Body
.
	`push
(
ty≥_°rög
);

241 
Body
.
	`push
("& ");

242 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

243 
Body
.
	`push 
(";");

245 if(
t
->
	`is_¥›îty
()) {

246 
Body
.
	`push
("int");

247 
Body
.
	`push
("& ");

248 
Body
.
	`push
(
sym
->
	`gëId
()->
	`gë_gí«me
());

249 
Body
.
	`push 
("_index;");

253 
Body
.
	`NL
();

255 
Body
.
	`p›_ödít
();

256 
Body
.
	`push 
("protected:");

257 
Body
.
	`push_ödít
();

259 
a°_id
* 
ôî
 = 
bfs
->
	`gë_ôî©‹
();

260 c⁄° * 
a_«me
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
(
ôî
->
	`gë_‹g«me
(), "_idx");

261 
ôî
->
	`gëSymInfo
()->
	`add_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
, 
a_«me
);

262 
dñëe
[] 
a_«me
;

264 
	`gíî©e_bfs_body_fw
(
bfs
);

265 
	`gíî©e_bfs_body_bw
(
bfs
);

266 
	`gíî©e_bfs_«vig©‹
(
bfs
);

267 
Body
.
	`NL
();

269 
Body
.
	`NL
();

270 
Body
.
	`push 
("};");

271 
Body
.
	`NL
();

272 
	}
}

274 
	ggm_˝p_gí
::
	$gíî©e_£¡_bfs
(
a°_bfs
* 
bfs
) {

275 
Body
.
	`NL
();

280 c⁄° * 
bfs_«me
 = 
bfs
->
	`föd_öfo_°rög
(
CPPBE_INFO_BFS_NAME
);

281 c⁄° * 
bfs_ö°_«me
 = 
bfs
->
	`is_bfs
(Ë? 
FE
.
	`voˇ_ãmp_«me_™d_add
("_BFS", "") : FE.voca_temp_name_and_add("_DFS", "");

282 
	`•rötf
(
ãmp
, "%†%s", 
bfs_«me
, 
bfs_ö°_«me
);

283 
Body
.
	`push
(
ãmp
);

284 
Body
.
	`push
('(');

289 
a°_exåa_öfo_li°
* 
syms
 = (a°_exåa_öfo_li°*Ë
bfs
->
	`föd_öfo
(
CPPBE_INFO_BFS_SYMBOLS
);

290 
	`as£π
(
syms
 !
NULL
);

291 
°d
::
li°
<*>& 
S
 = 
syms
->
	`gë_li°
();

292 
°d
::
li°
<*>::
ôî©‹
 
I
;

293 
boﬁ
 
is_fú°
 = 
åue
;

294 
I
 = 
S
.
	`begö
(); I !S.
	`íd
(); I++) {

295 i‡(!
is_fú°
) {

296 
Body
.
	`push
(", ");

298 
is_fú°
 = 
Ál£
;

299 
gm_symèb_íåy
* 
e
 = (gm_symèb_íåy*Ë*
I
;

300 
Body
.
	`push
(
e
->
	`gëId
()->
	`gë_gí«me
());

303 
a°_ty≥de˛
* 
t
 = 
e
->
	`gëTy≥
();

304 if(
t
->
	`is_¥›îty
()) {

305 
Body
.
	`push
(", ");

306 
Body
.
	`push
(
e
->
	`gëId
()->
	`gë_gí«me
());

307 
Body
.
	`push
("_index");

311 
Body
.
	`push 
(");");

316 i‡(
bfs
->
	`is_bfs
()) {

317 
	`•rötf
(
ãmp
, "%s.%s(%s, %s());", 
bfs_ö°_«me
, 
PREPARE
, 
bfs
->
	`gë_roŸ
()->
	`gë_gí«me
(), 
MAX_THREADS
);

318 
Body
.
	`push 
(
ãmp
);

319 
	`•rötf
(
ãmp
, "%s.%s();", 
bfs_ö°_«me
, 
DO_BFS_FORWARD
);

320 
Body
.
	`push 
(
ãmp
);

322 i‡(
bfs
->
	`gë_bbody
(Ë!
NULL
) {

323 
	`•rötf
(
ãmp
, "%s.%s();", 
bfs_ö°_«me
, 
DO_BFS_REVERSE
);

324 
Body
.
	`push 
(
ãmp
);

327 
	`•rötf
(
ãmp
, "%s.%s(%s);", 
bfs_ö°_«me
, 
PREPARE
, 
bfs
->
	`gë_roŸ
()->
	`gë_gí«me
());

328 
Body
.
	`push 
(
ãmp
);

329 
	`•rötf
(
ãmp
, "%s.%s();", 
bfs_ö°_«me
, 
DO_DFS
);

330 
Body
.
	`push 
(
ãmp
);

333 
dñëe
[] 
bfs_ö°_«me
;

335 
	}
}

	@gm_cpp_gen_buildup_language_voca.cc

1 
	~"gm_backíd_˝p.h
"

3 
	ggm_˝p_gí
::
	$buûd_up_œnguage_voˇ
() {

4 
gm_voˇbuœry
& 
V
 = 
	`gë_œnguage_voˇ
();

7 
V
.
	`add_w‹d
("int");

8 
V
.
	`add_w‹d
("unsigned");

9 
V
.
	`add_w‹d
("char");

10 
V
.
	`add_w‹d
("void");

11 
V
.
	`add_w‹d
("short");

12 
V
.
	`add_w‹d
("long");

13 
V
.
	`add_w‹d
("while");

14 
V
.
	`add_w‹d
("for");

15 
V
.
	`add_w‹d
("continue");

16 
V
.
	`add_w‹d
("break");

17 
V
.
	`add_w‹d
("double");

18 
V
.
	`add_w‹d
("float");

19 
V
.
	`add_w‹d
("if");

20 
V
.
	`add_w‹d
("else");

21 
V
.
	`add_w‹d
("do");

22 
V
.
	`add_w‹d
("return");

23 
V
.
	`add_w‹d
("register");

24 
V
.
	`add_w‹d
("volatile");

25 
V
.
	`add_w‹d
("public");

26 
V
.
	`add_w‹d
("class");

27 
V
.
	`add_w‹d
("switch");

28 
V
.
	`add_w‹d
("case");

29 
V
.
	`add_w‹d
("virtual");

30 
V
.
	`add_w‹d
("struct");

31 
V
.
	`add_w‹d
("typedef");

32 
V
.
	`add_w‹d
("auto");

33 
V
.
	`add_w‹d
("int32_t");

34 
V
.
	`add_w‹d
("int64_t");

35 
V
.
	`add_w‹d
("uint32_t");

36 
V
.
	`add_w‹d
("uint64_t");

39 
V
.
	`add_w‹d
("rand");

40 
V
.
	`add_w‹d
("printf");

41 
V
.
	`add_w‹d
("log");

42 
V
.
	`add_w‹d
("exp");

43 
V
.
	`add_w‹d
("pow");

45 
	`gë_lib
()->
	`buûd_up_œnguage_voˇ
(
V
);

46 
	}
}

	@gm_cpp_gen_check_bfs.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_öd_›t.h
"

9 
	~"gm_¨g›ts.h
"

10 
	~"gm_rw_™Æysis.h
"

151 ˛as†
	cg©hî_symbﬁs_öside_bfs_t
: 
public
 
gm_≠∂y


154 
public
:

155 
	$g©hî_symbﬁs_öside_bfs_t
(
a°_£¡
* 
t
)

157 
	`£t_f‹_id
(
åue
);

160 
boﬁ
 
	$≠∂y
(
a°_id
* 
i
) {

161 
gm_symèb_íåy
 * 
e
 = 
i
->
	`gëSymInfo
();

162 
syms
.
	`ö£π
(
e
);

163 
	}
}

165 
	$íd_c⁄ãxt
(
a°_node
* 
n
)

168 
	`˛ónup_loˇl
(
n
->
	`gë_symèb_v¨
());

169 
	`˛ónup_loˇl
(
n
->
	`gë_symèb_fõld
());

170 
	}
}

172 
	g°d
::
£t
<
gm_symèb_íåy
*>& 
	$gë_syms
(Ë{ 
syms
;
	}
}

174 
	g¥iv©e
:

175 
°d
::
£t
<
gm_symèb_íåy
*> 
syms
;

177 
	$˛ónup_loˇl
(
gm_symèb
* 
T
)

179 
°d
::
£t
<
gm_symèb_íåy
*> &
S
 = 
T
->
	`gë_íåõs
();

180 
°d
::
£t
<
gm_symèb_íåy
*>::
ôî©‹
 
I
;

181 
I
=
S
.
	`begö
(); I!=S.
	`íd
(); I++)

183 
syms
.
	`îa£
(*
I
);

185 
	}
}

189 ˛as†
	ccheck_bfs_maö_t
 : 
public
 
gm_≠∂y


191 
public
:

192 
	$check_bfs_maö_t
(
a°_¥ocdef
* 
p
) :

193 
	`¥oc
(
p
), 
	$has_bfs
(
Ál£
) {

194 
	`£t_f‹_£¡
(
åue
);

197 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

198 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_BFS
) {

199 
has_bfs
 = 
åue
;

200 
bfs_li°s
.
	`push_back
(
s
);

202 
ãmp
[1024];

203 
	`•rötf
(
ãmp
, "%s", 
¥oc
->
	`gë_¥o˙ame
()->
	`gë_gí«me
());

204 
a°_bfs
 *
bfs
 = (a°_bfs*Ë
s
;

205 c⁄° * 
suffix
 = 
bfs
->
	`is_bfs
() ? "_bfs" : "_dfs";

206 * 
c
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
(
ãmp
, 
suffix
);

207 
s
->
	`add_öfo_°rög
(
CPPBE_INFO_BFS_NAME
, 
c
);

210 
	`föd_symobls_öside
(
s
, 
bfs
->
	`gë_sour˚
()->
	`gëSymInfo
());

212 
	}
}

214 
	g¥iv©e
:

215 
	$föd_symobls_öside
(
a°_£¡
* 
s
, 
gm_symèb_íåy
 * 
gøph
)

218 
g©hî_symbﬁs_öside_bfs_t
 
	`R
(
s
);

219 
s
->
	`åavî£_¥e
(&
R
);

221 
a°_exåa_öfo_li°
* 
syms
 = 
√w
 
	`a°_exåa_öfo_li°
();

222 
s
->
	`add_öfo
(
CPPBE_INFO_BFS_SYMBOLS
, 
syms
);

224 
°d
::
li°
<*> &
L
 = 
syms
->
	`gë_li°
();

225 
L
.
	`push_back
(
gøph
);

228 
°d
::
£t
<
gm_symèb_íåy
*>& 
S
 = 
R
.
	`gë_syms
();

229 
°d
::
£t
<
gm_symèb_íåy
*>::
ôî©‹
 
I
;

230 
I
=
S
.
	`begö
(); I!=S.
	`íd
(); I++) {

231 i‡(*
I
 =
gøph
) ;

232 
L
.
	`push_back
(*
I
);

234 
	}
}

236 
	g¥iv©e
:

237 
a°_bfs
* 
cuºít_bfs
;

238 
a°_¥ocdef
* 
	g¥oc
;

239 
	gpublic
:

240 
°d
::
li°
<
a°_£¡
*> 
bfs_li°s
;

241 
boﬁ
 
	ghas_bfs
;

245 
	ggm_˝p_gí_check_bfs
::
	$¥o˚ss
(
a°_¥ocdef
* 
d
) {

247 
	`gm_ªdo_rw_™Æysis
(
d
->
	`gë_body
());

249 
check_bfs_maö_t
 
	`T
(
d
);

251 
d
->
	`åavî£_¥e
(&
T
);

252 
d
->
	`add_öfo_boﬁ
(
CPPBE_INFO_HAS_BFS
, 
T
.
has_bfs
);

255 i‡(
T
.
has_bfs
) {

256 
°d
::
li°
<
a°_£¡
*>&
L
 = 
T
.
bfs_li°s
;

257 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

258 
a°_exåa_öfo_li°
* 
BL
 = 
√w
 
	`a°_exåa_öfo_li°
();

259 
I
 = 
L
.
	`begö
(); I !L.
	`íd
(); I++) {

260 
BL
->
	`gë_li°
().
	`push_back
(*
I
);

262 
d
->
	`add_öfo
(
CPPBE_INFO_BFS_LIST
, 
BL
);

265 
	}
}

	@gm_cpp_gen_check_rev_edge.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_öd_›t.h
"

9 
	~"gm_¨g›ts.h
"

10 
	~"gm_rw_™Æysis.h
"

11 
	~"gm_buûtö.h
"

23 ˛as†
	cgm_˝p_gí_check_ªv_edge_åv
 : 
public
 
gm_≠∂y


25 
public
:

26 
	$gm_˝p_gí_check_ªv_edge_åv
(
gm_rda_m≠
& 
_R
): 
	$R
(
_R
)

28 
	`£t_f‹_id
(
åue
);

31 
boﬁ
 
	$≠∂y
(
a°_id
* 
i
) {

32 
gm_symèb_íåy
 * 
e
 = 
i
->
	`gëSymInfo
();

33 i‡(
e
 =
NULL
Ë 
åue
;

34 i‡(!
e
->
	`gëTy≥
()->
	`is_edge_com∑tibÀ
())

35  
åue
;

38 i‡(
e
->
	`gëTy≥
()->
	`is_edge_ôî©‹
()) {

39 
ôî_ty≥
 = 
e
->
	`gëTy≥
()->
	`gë_deföed_ôî©i⁄_‰om_ôî©‹
();

42 i‡((
ôî_ty≥
 =
GMITER_EDGE_IN_NBRS
Ë|| (ôî_ty≥ =
GMITER_EDGE_UP_NBRS
))

43 
	`m¨k_ªvî£_edge
(
i
);

46 
a°_£¡
 * 
s
 = 
	`gë_cuºít_£¡
();

47 i‡(
s
 =
NULL
Ë 
åue
;

50 
boﬁ
 
is_ªvî£
 = 
åue
;

51 
gm_rda_key
 
	`K
(
e
,
s
);

52 i‡(
R
.
	`föd
(
K
Ë!R.
	`íd
()) {

53 
gm_rda_£t
& 
DEFS
 = 
R
.
	`föd
(
K
)->
£c⁄d
;

54 
gm_rda_£t
::
ôî©‹
 
I
;

55 
I
=
DEFS
.
	`begö
(); I!=DEFS.
	`íd
(); ++I)

57 
a°_node
* 
n
 = *
I
;

58 i‡(
n
->
	`gë_nodëy≥
(Ë=
AST_EXPR_BUILTIN
)

60 
a°_ex¥_buûtö
* 
b
 = (a°_ex¥_buûtö*Ë
n
;

61 i‡(!
b
->
	`drivî_is_fõld
()) {

62 
a°_id
* 
i
 = 
b
->
	`gë_drivî
();

63 
ôî_ty≥
 = 
b
->
	`gë_sour˚_ôî©i⁄
();

64 
mëhod_id
 = 
b
->
	`gë_buûtö_def
()->
	`gë_mëhod_id
();

66 i‡((
mëhod_id
 =
GM_BLTIN_NODE_TO_EDGE
) &&

67 ((
ôî_ty≥
 =
GMITER_NODE_IN_NBRS
) ||

68 (
ôî_ty≥
 =
GMITER_NODE_UP_NBRS
)))

74 
is_ªvî£
 = 
Ál£
; ;

77 i‡(
is_ªvî£
)

78 
	`m¨k_ªvî£_edge
(
i
);

83  
åue
;

84 
	}
}

86 
	$m¨k_ªvî£_edge
(
a°_id
 *
i
)

88 
i
->
	`add_öfo_boﬁ
(
CPPBE_INFO_IS_REVERSE_EDGE
, 
åue
);

89 
	}
}

92 
	g¥iv©e
:

93 
gm_rda_m≠
& 
R
;

100 
	ggm_˝p_gí_check_ªv_edge
::
	$¥o˚ss
(
a°_¥ocdef
* 
¥oc
)

103 
gm_rda_m≠
 
R
;

104 
	`gm_do_ªachög_def_™Æysis
(
¥oc
, 
R
);

106 
gm_˝p_gí_check_ªv_edge_åv
 
	`T
(
R
);

107 
¥oc
->
	`gë_body
()->
	`åavî£_¥e
(&
T
);

109 
	}
}

	@gm_cpp_gen_check_usermain.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_öd_›t.h
"

9 
	~"gm_¨g›ts.h
"

10 
	~"gm_rw_™Æysis.h
"

12 
	ggm_˝p_gí_check_u£rmaö
::
	$¥o˚ss
(
a°_¥ocdef
* 
d
) {

13 i‡(!
OPTIONS
.
	`gë_¨g_boﬁ
(
GMARGFLAG_CPP_CREATE_MAIN
))

16 i‡(
FE
.
	`gë_num_¥ocs
() != 1) {

17 
	`gm_backíd_îr‹
(
GM_ERROR_GPS_NUM_PROCS
, "");

18 
	`£t_okay
(
Ál£
);

22 
a°_ty≥de˛
* 
ªt_ty≥
 = 
d
->
	`gë_ªtu∫_ty≥
();

23 i‡(!
ªt_ty≥
->
	`is_void
(Ë&& !ªt_ty≥->
	`is_nodìdge
(Ë&& !ªt_ty≥->
	`is_¥imôive
())

25 
	`gm_backíd_îr‹
(
GM_ERROR_CPPMAIN_RETURN_TYPE
, 
	`gm_gë_ty≥_°rög
(
ªt_ty≥
->
	`gëTy≥Summ¨y
()));

26 
	`£t_okay
(
Ál£
);

31 
°d
::
li°
<
a°_¨gde˛
*>::
ôî©‹
 
I
;

32 
°d
::
li°
<
a°_¨gde˛
*>& 
In
 = 
d
->
	`gë_ö_¨gs
();

33 
boﬁ
 
found_gøph
 = 
Ál£
;

34 
I
=
In
.
	`begö
(); I!In.
	`íd
(); I++) {

35 
a°_ty≥de˛
* 
t
 = (*
I
)->
	`gë_ty≥
();

36 i‡(
t
->
	`is_¥›îty
()Ëàt->
	`gë_èrgë_ty≥
();

37 i‡(
t
->
	`is_gøph
()) {

38 i‡(
found_gøph
 || ((*
I
)->
	`gë_idli°
()->
	`gë_Àngth
() > 1)) {

39 
	`gm_backíd_îr‹
(
GM_ERROR_CPPMAIN_NUM_GRAPHS
,"");

40 
	`£t_okay
(
Ál£
);

44 
found_gøph
 = 
åue
;

48 i‡(!
t
->
	`is_¥imôive
(Ë&& !t->
	`is_nodìdge
()) {

49 
a°_id
* 
id
=(*
I
)->
	`gë_idli°
()->
	`gë_ôem
(0);;

50 
	`gm_backíd_îr‹
(
GM_ERROR_CPPMAIN_UNSUPPORTED_TYPE
,

51 
id
->
	`gë_löe
(), id->
	`gë_cﬁ
(), 
	`gm_gë_ty≥_°rög
(
t
->
	`gëTy≥Summ¨y
()));

52 
	`£t_okay
(
Ál£
);

56 i‡(!
found_gøph
) {

57 
	`gm_backíd_îr‹
(
GM_ERROR_CPPMAIN_NUM_GRAPHS
,"");

58 
	`£t_okay
(
Ál£
);

61 
°d
::
li°
<
a°_¨gde˛
*>& 
Out
 = 
d
->
	`gë_out_¨gs
();

62 
I
=
Out
.
	`begö
(); I!Out.
	`íd
(); I++) {

63 
a°_ty≥de˛
* 
t
 = (*
I
)->
	`gë_ty≥
();

64 i‡(
t
->
	`is_¥›îty
()Ëàt->
	`gë_èrgë_ty≥
();

65 i‡(!
t
->
	`is_¥imôive
(Ë&& !t->
	`is_nodìdge
()) {

66 
a°_id
* 
id
=(*
I
)->
	`gë_idli°
()->
	`gë_ôem
(0);;

67 
	`gm_backíd_îr‹
(
GM_ERROR_CPPMAIN_UNSUPPORTED_TYPE
,

68 
id
->
	`gë_löe
(), id->
	`gë_cﬁ
(), 
	`gm_gë_ty≥_°rög
(
t
->
	`gëTy≥Summ¨y
()));

69 
	`£t_okay
(
Ál£
);

91 
	}
}

	@gm_cpp_gen_foreach.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_‰⁄ãnd_≠i.h
"

4 
	~"gm_ty≥check.h
"

5 
	~"gm_îr‹.h
"

6 
	~"gm_åavî£.h
"

7 
	~"gm_misc.h
"

8 
	~"gm_ty≥check.h
"

9 
	~"gm_a°.h
"

10 
	~"gm_å™sf‹m_hñ≥r.h
"

11 
	~"gm_buûtö.h
"

12 
	~"gm_˝∂ib_w‹ds.h
"

13 
	~"gm_backíd_mpi.h
"

15 
gm_mpi_gí
 
MPI_GEN
;

28 
boﬁ
 
	ggm_˝∂ib
::
	$√ed_up_öôülizî
(
a°_f‹óch
* 
f
) {

29 
ôî_ty≥
 = 
f
->
	`gë_ôî_ty≥
();

30 i‡(
	`gm_is_sim∂e_cﬁÀ˘i⁄_ôî©i⁄
(
ôî_ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(iter_type))

31  
åue
;

32 i‡(
	`gm_is_comm⁄_nbr_ôî©i⁄
(
ôî_ty≥
))

33  
åue
;

34  
Ál£
;

35 
	}
}

37 
boﬁ
 
	ggm_˝∂ib
::
	$√ed_down_öôülizî
(
a°_f‹óch
* 
f
) {

38 
ôî_ty≥
 = 
f
->
	`gë_ôî_ty≥
();

40 i‡(
	`gm_is_sim∂e_cﬁÀ˘i⁄_ôî©i⁄
(
ôî_ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(iter_type)) {

41  
åue
;

42 } i‡(
	`gm_is_comm⁄_nbr_ôî©i⁄
(
ôî_ty≥
)) {

43  
Ál£
;

46 i‡(
	`gm_is_™y_√ighb‹_node_ôî©i⁄
(
ôî_ty≥
)) {

47  
åue
;

50  
Ál£
;

51 
	}
}

53 
	ggm_˝∂ib
::
	$gíî©e_up_öôülizî
(
a°_f‹óch
* 
f
, 
gm_code_wrôî
& 
Body
) {

54 
ôî_ty≥
 = 
f
->
	`gë_ôî_ty≥
();

55 i‡(
	`gm_is_sim∂e_cﬁÀ˘i⁄_ôî©i⁄
(
ôî_ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(iter_type)) {

57 
	`as£π
(!
f
->
	`is_∑øŒñ
());

60 c⁄° * 
ôî_ty≥_°r
 = 
f
->
	`is_∑øŒñ
(Ë? "∑r_ôî" : f->
	`is_ªvî£_ôî©i⁄
() ? "rev_iter" : "seq_iter";

61 c⁄° * 
¥ï_°r
 = 
f
->
	`is_∑øŒñ
(Ë? "¥ï¨e_∑r_ôî©i⁄" : f->
	`is_ªvî£_ôî©i⁄
() ? "prepare_rev_iteration" : "prepare_seq_iteration";

62 c⁄° * 
sour˚_ty≥_°r
;

63 
ôî_sour˚_ty≥
;

64 i‡(
f
->
	`is_sour˚_fõld
()) {

65 
sour˚_ty≥_°r
 = 
	`gë_ty≥_°rög
(
f
->
	`gë_sour˚_fõld
()->
	`gë_£c⁄d
()->
	`gëT¨gëTy≥Info
());

66 
ôî_sour˚_ty≥
 = 
f
->
	`gë_sour˚_fõld
()->
	`gë_£c⁄d
()->
	`gëTy≥Info
()->
	`gëT¨gëTy≥Summ¨y
();

68 
gm_symèb_íåy
* 
sym
 = 
f
->
	`gë_sour˚
()->
	`gëSymInfo
();

69 if(
	`has_›timized_ty≥_«me
(
sym
)) {

70 
sour˚_ty≥_°r
 = 
	`gë_›timized_ty≥_«me
(
sym
);

72 
sour˚_ty≥_°r
 = 
	`gë_ty≥_°rög
(
f
->
	`gë_sour˚
()->
	`gëTy≥Info
());

75 
ôî_sour˚_ty≥
 = 
f
->
	`gë_sour˚
()->
	`gëTy≥Info
()->
	`gëTy≥Summ¨y
();

78 if(!(
f
->
	`is_sour˚_fõld
()))

80 
Body
.
	`push
("bool ");

81 
Body
.
	`push
(
f
->
	`gë_sour˚
()->
	`gë_gí«me
());

82 
Body
.
	`push
("_has_next;");

83 
Body
.
	`NL
();

87 c⁄° * 
ty≥Såög
 = 
NULL
;

88 i‡(
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ty≥
(
ôî_sour˚_ty≥
)) {

89 
a°_id
* 
sour˚
 = 
f
->
	`gë_sour˚
();

90 
	`•rötf
(
°r_buf
, "%s<%s>::%s", 
	`gë_ty≥_°rög
(
sour˚
->
	`gëTy≥Info
()), gë_ty≥_°rög(sour˚->
	`gëT¨gëTy≥Info
()), 
ôî_ty≥_°r
);

92 
	`•rötf
(
°r_buf
, "%s::%s", 
sour˚_ty≥_°r
, 
ôî_ty≥_°r
);

94 
Body
.
	`push
(
°r_buf
);

96 c⁄° * 
a_«me
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
(
f
->
	`gë_ôî©‹
()->
	`gë_‹g«me
(), "_I");

97 
f
->
	`add_öfo_°rög
(
CPPBE_INFO_COLLECTION_ITERATOR
, 
a_«me
);

98 
	`•rötf
(
°r_buf
, " %s", 
a_«me
);

99 
Body
.
	`push
(
°r_buf
);

102 i‡(
f
->
	`is_sour˚_fõld
()) {

103 
Body
.
	`push
(" = ");

104 
	`gë_maö
()->
	`gíî©e_rhs_fõld
(
f
->
	`gë_sour˚_fõld
());

105 
	`•rötf
(
°r_buf
, ".%s();", 
¥ï_°r
);

106 
Body
.
	`push 
(
°r_buf
);

108 
	`•rötf
(
°r_buf
, " = %s.%s();", 
f
->
	`gë_sour˚
()->
	`gë_gí«me
(), 
¥ï_°r
);

109 
Body
.
	`push 
(
°r_buf
);

110 
Body
.
	`push 
("if(G.get_rank() == MASTER)");

111 
Body
.
	`push 
("{");

112 
Body
.
	`push
(
f
->
	`gë_sour˚
()->
	`gë_gí«me
());

113 
Body
.
	`push
("_has_next = ");

114 
Body
.
	`push
(
a_«me
);

115 
Body
.
	`push
(".has_next();");

116 
Body
.
	`NL
();

117 
Body
.
	`push 
("}");

118 
Body
.
	`push
("MPI_Bcast(&");

119 
Body
.
	`push
(
f
->
	`gë_sour˚
()->
	`gë_gí«me
());

120 
Body
.
	`push
("_has_next, 1, MPI_INT, MASTER, MPI_COMM_WORLD);");

121 
Body
.
	`NL
();

125 
dñëe
[] 
a_«me
;

127 } i‡(
	`gm_is_comm⁄_nbr_ôî©i⁄
(
ôî_ty≥
)) {

128 
a°_id
* 
sour˚
 = 
f
->
	`gë_sour˚
();

129 
a°_id
* 
gøph
 = 
sour˚
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
();

130 
a°_id
* 
sour˚2
 = 
f
->
	`gë_sour˚2
();

131 
	`as£π
(
sour˚2
!=
NULL
);

132 c⁄° * 
a_«me
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
(
f
->
	`gë_ôî©‹
()->
	`gë_‹g«me
(), "_I");

133 
f
->
	`add_öfo_°rög
(
CPPBE_INFO_COMMON_NBR_ITERATOR
, 
a_«me
);

134 
Body
.
	`push 
("// Iterate over CommonÇeighbors");

135 
	`•rötf
(
°r_buf
, "gm_comm⁄_√ighb‹_ôî %s(%s, %s, %s);", 
a_«me
, 
gøph
->
	`gë_gí«me
(), 
sour˚
->gë_gí«me(), 
sour˚2
->get_genname());

136 
Body
.
	`push 
(
°r_buf
);

139 
	`as£π
(
Ál£
);

141 
	}
}

143 
	ggm_˝∂ib
::
	$gíî©e_down_öôülizî
(
a°_f‹óch
* 
f
, 
gm_code_wrôî
& 
Body
) {

144 
ôî_ty≥
 = 
f
->
	`gë_ôî_ty≥
();

145 
a°_id
* 
ôî
 = 
f
->
	`gë_ôî©‹
();

146 
a°_ty≥de˛
* 
sour˚_ty≥
;

147 i‡(
f
->
	`is_sour˚_fõld
()) {

148 
sour˚_ty≥
 = 
f
->
	`gë_sour˚_fõld
()->
	`gë_£c⁄d
()->
	`gëTy≥Info
();

150 
sour˚_ty≥
 = 
f
->
	`gë_sour˚
()->
	`gëTy≥Info
();

153 i‡(
	`gm_is_sim∂e_cﬁÀ˘i⁄_ôî©i⁄
(
ôî_ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(iter_type)) {

154 
	`as£π
(
f
->
	`föd_öfo
(
CPPBE_INFO_COLLECTION_ITERATOR
Ë!
NULL
);

155 c⁄° * 
l°_ôî_«me
 = 
f
->
	`föd_öfo_°rög
(
CPPBE_INFO_COLLECTION_ITERATOR
);

156 c⁄° * 
ty≥_«me
;

157 i‡(
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ty≥
(
sour˚_ty≥
->
	`gëTy≥Summ¨y
()))

158 
ty≥_«me
 = 
	`gë_ty≥_°rög
(
f
->
	`gë_sour˚
()->
	`gëT¨gëTy≥Info
());

160 
ty≥_«me
 = 
sour˚_ty≥
->
	`is_node_cﬁÀ˘i⁄
(Ë? 
NODE_T
 : 
EDGE_T
;

162 i‡(
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(
ôî_ty≥
)) {

163 
	`•rötf
(
°r_buf
, "%s& %†%s.gë_√xt();", 
ty≥_«me
, 
f
->
	`gë_ôî©‹
()->
	`gë_gí«me
(), 
l°_ôî_«me
);

164 
Body
.
	`push 
(
°r_buf
);

166 
Body
.
	`push
(
ty≥_«me
);

167 
Body
.
	`push
(" ");

168 
Body
.
	`push
(
f
->
	`gë_ôî©‹
()->
	`gë_gí«me
());

169 
Body
.
	`push 
(";");

170 
Body
.
	`push 
("if(G.get_rank() == MASTER)");

171 
Body
.
	`push 
("{");

172 
	`•rötf
(
°r_buf
, "%†%s.gë_√xt();", 
f
->
	`gë_ôî©‹
()->
	`gë_gí«me
(), 
l°_ôî_«me
);

173 
Body
.
	`push 
(
°r_buf
);

174 
Body
.
	`push 
("}");

175 if(
	`°rcmp
(
ty≥_«me
,"node_t")==0)

177 
Body
.
	`push
("MPI_Bcast(&");

178 
Body
.
	`push
(
f
->
	`gë_ôî©‹
()->
	`gë_gí«me
());

179 
Body
.
	`push
(", 1, MPI_INT, MASTER, MPI_COMM_WORLD);");

180 
Body
.
	`NL
();

187 } i‡(
	`gm_is_™y_√ighb‹_node_ôî©i⁄
(
ôî_ty≥
)) {

188 
a°_id
* 
sour˚
 = 
f
->
	`gë_sour˚
();

189 c⁄° * 
Æüs_«me
 = 
f
->
	`föd_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
);

190 c⁄° * 
ty≥_«me
 = 
	`gë_ty≥_°rög
(
ôî
->
	`gëTy≥Info
());

191 c⁄° * 
gøph_«me
 = 
sour˚
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
();

192 c⁄° * 
v¨_«me
 = 
ôî
->
	`gë_gí«me
();

193 c⁄° * 
¨øy_«me
;

196 
	`as£π
(
	`gm_is_node_ôî©i⁄
(
ôî_ty≥
));

199 
¨øy_«me
 = 
	`gm_is_ôî©i⁄_u£_ªvî£
(
ôî_ty≥
Ë? 
R_NODE_IDX
 : 
NODE_IDX
;

201 i‡(
	`gm_is_down_nbr_node_ôî©i⁄
(
ôî_ty≥
)) {

203 
	`•rötf
(
°r_buf
, "i‡(!is_down_edge(%s)Ëc⁄töue;", 
Æüs_«me
);

205 
Body
.
	`push 
(
°r_buf
);

211 
	`•rötf
(
°r_buf
, "%†%†%s.%†[%s];", 
ty≥_«me
, 
v¨_«me
, 
gøph_«me
, 
¨øy_«me
, 
Æüs_«me
);

213 
Body
.
	`push 
(
°r_buf
);

214 } i‡(
	`gm_is_updown_node_ôî©i⁄
(
ôî_ty≥
)) {

215 
	`•rötf
(
°r_buf
, "%†%†%s.%†[%s];", 
ty≥_«me
, 
v¨_«me
, 
gøph_«me
, 
¨øy_«me
, 
Æüs_«me
);

216 
Body
.
	`push 
(
°r_buf
);

218 
	`•rötf
(
°r_buf
, "i‡(gë_Àvñ(%sË!(gë_cuº_Àvñ(Ë%¯1)Ëc⁄töue;", 
ôî
->
	`gë_gí«me
(),

219 
	`gm_is_up_nbr_node_ôî©i⁄
(
ôî_ty≥
) ? '-' : '+');

220 
Body
.
	`push 
(
°r_buf
);

222 
Body
.
	`push
("/*isÑeaching here */");

223 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
Æüs_«me
)||MPI_GEN.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(alias_name)) {

224 
	`•rötf
(
°r_buf
, "%†%†%s.%†[%s];", 
ty≥_«me
, 
v¨_«me
, 
gøph_«me
, 
¨øy_«me
, 
Æüs_«me
);

226 
	`•rötf
(
°r_buf
, "%†%†%†[%s-%s];", 
ty≥_«me
, 
v¨_«me
, "√w_node_idx", 
Æüs_«me
, "new_begin[0]");

228 
Body
.
	`push 
(
°r_buf
);

231 
	}
}

233 
	ggm_˝∂ib
::
	$gíî©e_f‹óch_hódî
(
a°_f‹óch
* 
„
, 
gm_code_wrôî
& 
Body
) {

235 
a°_id
* 
ôî
 = 
„
->
	`gë_ôî©‹
();

236 
ty≥
 = 
„
->
	`gë_ôî_ty≥
();

238 i‡(
	`gm_is_Æl_gøph_ôî©i⁄
(
ty≥
)) {

239 
	`as£π
(!
„
->
	`is_sour˚_fõld
());

240 
a°_id
* 
sour˚
 = 
„
->
	`gë_sour˚
();

241 * 
gøph_«me
;

242 i‡(
	`gm_is_node_¥›îty_ty≥
(
sour˚
->
	`gëTy≥Summ¨y
()Ë|| 
	`gm_is_edge_¥›îty_ty≥
(source->getTypeSummary())) {

243 
gøph_«me
 = 
sour˚
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_‹g«me
();

245 
gøph_«me
 = 
sour˚
->
	`gë_gí«me
();

247 * 
ô_«me
 = 
ôî
->
	`gë_gí«me
();

251 i‡(
„
->
	`is_∑øŒñ
()) {

252 if(
	`gm_is_node_ôî©i⁄
(
ty≥
))

253 
MPI_GEN
.
loˇl_ac˚ss_nodes
.
	`push_back
(
ô_«me
);

255 
MPI_GEN
.
loˇl_ac˚ss_edges
.
	`push_back
(
ô_«me
);

257 i‡(
„
->
	`is_∑øŒñ
()) {

258 
	`•rötf
(
°r_buf
, "f‹ (%†%†0; %†< %s.%s(); %†++Ë", 
	`gë_ty≥_°rög
(
ôî
->
	`gëTy≥Summ¨y
()), 
ô_«me
, it_«me, 
gøph_«me
,

259 
	`gm_is_node_ôî©i⁄
(
ty≥
Ë? 
NUM_LOCAL_NODES
 : 
NUM_LOCAL_EDGES
, 
ô_«me
);

261 
	`•rötf
(
°r_buf
, "f‹ (%†%†0; %†< %s.%s(); %†++Ë", 
	`gë_ty≥_°rög
(
ôî
->
	`gëTy≥Summ¨y
()), 
ô_«me
, it_«me, 
gøph_«me
,

262 
	`gm_is_node_ôî©i⁄
(
ty≥
Ë? 
NUM_NODES
 : 
NUM_EDGES
, 
ô_«me
);

265 #ifde‡
__USE_VAR_REUSE_OPT__


266 i‡(
MPI_GEN
.
	`is_ö_∑øŒñ_lo›
()) {

267 i‡(
MPI_GEN
.
	`check_ö_v¨s_ö_sc›e
(
ô_«me
)) {

268 
MPI_GEN
.
	`ªmove_v¨
();

272 
Body
.
	`push 
(
°r_buf
);

273 } i‡(
	`gm_is_comm⁄_nbr_ôî©i⁄
(
ty≥
)) {

274 
	`as£π
(!
„
->
	`is_sour˚_fõld
());

275 
a°_id
* 
sour˚
 = 
„
->
	`gë_sour˚
();

276 c⁄° * 
ôî_«me
 = 
„
->
	`föd_öfo_°rög
(
CPPBE_INFO_COMMON_NBR_ITERATOR
);

277 * 
gøph_«me
 = 
sour˚
->
	`gë_gí«me
();

278 * 
ô_«me
 = 
ôî
->
	`gë_gí«me
();

279 
	`•rötf
(
°r_buf
, "f‹ (%†%†%s.gë_√xt(); %†!gm_gøph::NIL_NODE ; %†%s.gë_√xt()Ë", 
NODE_T
, 
ô_«me
, 
ôî_«me
, it_name, it_name,

280 
ôî_«me
);

282 
Body
.
	`push 
(
°r_buf
);

285 } i‡(
	`gm_is_™y_√ighb‹_node_ôî©i⁄
(
ty≥
)) {

287 
	`as£π
(
	`gm_is_node_ôî©i⁄
(
ty≥
));

288 
	`as£π
(!
„
->
	`is_sour˚_fõld
());

289 
a°_id
* 
sour˚
 = 
„
->
	`gë_sour˚
();

294 c⁄° * 
a_«me
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
(
ôî
->
	`gë_‹g«me
(), "_idx");

295 
„
->
	`add_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
, 
a_«me
);

296 
a°_id
* 
ôî©‹
 = 
„
->
	`gë_ôî©‹
();

297 
ôî©‹
->
	`gëSymInfo
()->
	`add_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
, 
a_«me
);

298 
dñëe
[] 
a_«me
;

301 c⁄° * 
Æüs_«me
 = 
„
->
	`föd_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
);

302 c⁄° * 
gøph_«me
 = 
sour˚
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
();

303 c⁄° * 
¨øy_«me
 = 
	`gm_is_ôî©i⁄_u£_ªvî£
(
ty≥
Ë? 
R_BEGIN
 : 
BEGIN
;

304 c⁄° * 
§c_«me
 = 
sour˚
->
	`gë_gí«me
();

315 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
§c_«me
)) {

316 
MPI_GEN
.
loˇl_ac˚ss_edges
.
	`push_back
(
Æüs_«me
);

317 
	`•rötf
(
°r_buf
, "f‹ (%†%†%s.%s[%s];", 
EDGE_T
, 
Æüs_«me
, 
gøph_«me
, 
¨øy_«me
, 
§c_«me
);

318 
Body
.
	`push
(
°r_buf
);

319 
	`•rötf
(
°r_buf
, "%†< %s.%s[%s+1] ; %†++Ë", 
Æüs_«me
, 
gøph_«me
, 
¨øy_«me
, 
§c_«me
,álias_name);

320 
Body
.
	`push 
(
°r_buf
);

324 
Body
.
	`push 
("edge_t *Çew_begin = (edge_t *)calloc(2, sizeof(edge_t));");

325 
Body
.
	`push
("lock_and_get_begin(new_begin[0], ");

326 
Body
.
	`push
(
§c_«me
);

327 
Body
.
	`push 
(", 2, G);");

328 
Body
.
	`push 
("intÇode_idx_size =Çew_begin[1] -Çew_begin[0];");

329 
Body
.
	`push 
("node_t *Çew_node_idx = (node_t *)calloc(node_idx_size, sizeof(node_t));");

330 
Body
.
	`push
("lock_and_get_node_idx(new_node_idx[0], ");

331 
Body
.
	`push
(
§c_«me
);

332 
Body
.
	`push 
(",Çew_begin[0],Çode_idx_size, G);");

333 
Body
.
	`push
("adjust_begin_to_global_values(new_begin, ");

334 
Body
.
	`push
(
§c_«me
);

335 
Body
.
	`push 
(", G);");

336 
	`•rötf
(
°r_buf
, "f‹ (%†%†%s[0];", 
EDGE_T
, 
Æüs_«me
, "new_begin");

337 
Body
.
	`push
(
°r_buf
);

338 
	`•rötf
(
°r_buf
, "%†< %s[1] ; %†++Ë", 
Æüs_«me
, "new_begin",álias_name);

339 
Body
.
	`push 
(
°r_buf
);

345 } i‡(
	`gm_is_sim∂e_cﬁÀ˘i⁄_ôî©i⁄
(
ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(type)) {

347 
	`as£π
(!
„
->
	`is_∑øŒñ
());

348 
	`as£π
(
	`gm_is_node_cﬁÀ˘i⁄_ôî©i⁄
(
ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ôî©i⁄
(type));

350 c⁄° * 
ôî_«me
 = 
„
->
	`föd_öfo_°rög
(
CPPBE_INFO_COLLECTION_ITERATOR
);

351 
Body
.
	`push
("while ( ");

352 
Body
.
	`push
(
„
->
	`gë_sour˚
()->
	`gë_gí«me
());

353 
Body
.
	`push
("_has_next )");

361 
	`as£π
(
Ál£
);

365 
	}
}

	@gm_cpp_gen_main.cc

1 
	~"gm_‰⁄ãnd.h
"

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_¨g›ts.h
"

4 
	~"gm_îr‹.h
"

5 
boﬁ
 
gm_ªad_£tup_fûe
(
°d
::
m≠
<°d::
°rög
, std::°rög>& 
£tup
, boﬁ 
exp‹t_ív
);

7 
	ggm_˝p_gí
::
	$öô_gí_°ïs
() {

8 
°d
::
li°
<
gm_compûe_°ï
*> &
LIST
 = 
this
->
gí_°ïs
;

10 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_ßnôize_«me
));

11 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_ªguœr
));

12 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_¥›_de˛
));

13 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_m¨k_∑øŒñ
));

14 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_misc_check
));

15 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_check_bfs
));

16 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_check_u£rmaö
));

17 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_check_ªv_edge
));

18 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_„_ª°‹e_v¨de˛
));

19 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_gí_¥oc
));

20 
	}
}

22 
	ggm_˝p_gí
::
do_gíî©e_compûe_shñl
(
°d
::
m≠
<°d::
°rög
,°d::°rög>& 
£tup
)

25 c⁄° * 
gm_t›
 = 
£tup
["GM_TOP"].
c_°r
();

26 c⁄° * 
	gavro
 = 
£tup
["SUPPORT_AVRO"].
c_°r
();

28 
Ârötf
(
f_shñl
, "GM_TOP%s\n",
gm_t›
);

29 
Ârötf
(
f_shñl
, "GM_GRAPH${GM_TOP}/≠ps/ouçut_˝p/gm_gøph\n",
gm_t›
);

30 
Ârötf
(
f_shñl
, "CC= g++\n");

31 
Ârötf
(
f_shñl
, "CFLAGS = -g -O3 -f›ím∞-I${GM_GRAPH}/ö¯-I. \n", 
gm_t›
);

33 
Ârötf
(
f_shñl
, "LFLAGS = -L${GM_GRAPH}/lib -lgmgraph \n");

34 i‡((
	gavro
!
NULL
Ë&& (
©oi
(
avro
) != 0)) {

37 
Ârötf
(
f_shñl
, "include ${GM_TOP}/setup.mk\n");

38 
Ârötf
(
f_shñl
, "include ${GM_TOP}/apps/output_cpp/common.mk\n");

41 
Ârötf
(
f_shñl
, "\n");

42 
Ârötf
(
f_shñl
, "%†: %s.c¯%s.h\n", 
‚ame
, fname, fname);

43 
Ârötf
(
f_shñl
, "\t${CC} ${CFLAGS} $< ${LFLAGS} -ÿ$@", 
‚ame
, fname);

46 c⁄° * 
	$gë_ru¡ime_ty≥_°rög
(
gm_ty≥
)

48 
gm_ty≥
) {

49 
GMTYPE_INT
:  "GMTYPE_INT";

50 
GMTYPE_FLOAT
:  "GMTYPE_FLOAT";

51 
GMTYPE_DOUBLE
:  "GMTYPE_DOUBLE";

52 
GMTYPE_LONG
:  "GMTYPE_LONG";

53 
GMTYPE_BOOL
:  "GMTYPE_BOOL";

54 
GMTYPE_NODE
:  "GMTYPE_NODE";

55 
GMTYPE_EDGE
:  "GMTYPE_EDGE";

56 : 
	`as£π
(
Ál£
);  "";

58 
	}
}

59 c⁄° * 
	$gë_ru¡ime_˘y≥
(
gm_ty≥
)

61 
gm_ty≥
) {

62 
GMTYPE_INT
:  "int32_t";

63 
GMTYPE_FLOAT
:  "float";

64 
GMTYPE_DOUBLE
:  "double";

65 
GMTYPE_LONG
:  "int64_t";

66 
GMTYPE_BOOL
:  "bool";

67 
GMTYPE_NODE
:  "node_t";

68 
GMTYPE_EDGE
:  "edge_t";

69 : 
	`as£π
(
Ál£
);  "";

71 
	}
}

73 
	$¥öt_de˛¨e_¨gumít
(
gm_code_wrôî
& 
Body
, 
a°_¨gde˛
* 
def
, 
boﬁ
 
is_öput
, boﬁ 
is_ouçut
)

75 
	`as£π
(
def
->
	`gë_idli°
()->
	`gë_Àngth
()==1);

76 
a°_ty≥de˛
* 
t
 = (
def
)->
	`gë_ty≥
();

77 i‡(
t
->
	`is_¥›îty
()) {

78 
a°_ty≥de˛
* 
t2
 = 
t
->
	`gë_èrgë_ty≥
();

79 
Body
.
	`push
("Main.declare_property(\"");

80 
Body
.
	`push
(
def
->
	`gë_idli°
()->
	`gë_ôem
(0)->
	`gë_gí«me
());

81 
Body
.
	`push
("\", ");

82 
Body
.
	`push
(
	`gë_ru¡ime_ty≥_°rög
(
t2
->
	`gëTy≥Summ¨y
()));

83 
Body
.
	`push
(", ");

85 
gm_symèb_íåy
* 
sym
 = 
def
->
	`gë_idli°
()->
	`gë_ôem
(0)->
	`gëSymInfo
();

86 
	`as£π
(
sym
 !
NULL
);

87 
	`as£π
(
sym
->
	`föd_öfo
(
GMUSAGE_PROPERTY
Ë!
NULL
);

89 
	`¥ötf
("ußgê¥› = %d\n", 
sym
->
	`föd_öfo_öt
(
GMUSAGE_PROPERTY
));

90 
boﬁ
 
is_öput_¥›
 = (
sym
->
	`föd_öfo_öt
(
GMUSAGE_PROPERTY
Ë=
GMUSAGE_IN
Ë|| (sym->föd_öfo_öt(GMUSAGE_PROPERTYË=
GMUSAGE_INOUT
);

91 
boﬁ
 
is_ouçut_¥›
 = (
sym
->
	`föd_öfo_öt
(
GMUSAGE_PROPERTY
Ë=
GMUSAGE_OUT
Ë|| (sym->föd_öfo_öt(GMUSAGE_PROPERTYË=
GMUSAGE_INOUT
);

92 
Body
.
	`push
(
is_öput_¥›
?"true, ":"false, ");

93 
Body
.
	`push
(
is_ouçut_¥›
?"true, ":"false, ");

94 i‡(
t
->
	`is_node_¥›îty
()) {

95 
Body
.
	`push 
("GM_NODEPROP);");

97 i‡(
t
->
	`is_edge_¥›îty
()) {

98 
Body
.
	`push 
("GM_EDGEPROP);");

100 
	`as£π
(
Ál£
);

104 i‡(
t
->
	`is_gøph
())

107 
Body
.
	`push
("Main.declare_scalar(\"");

108 
Body
.
	`push
(
def
->
	`gë_idli°
()->
	`gë_ôem
(0)->
	`gë_gí«me
());

109 
Body
.
	`push
("\", ");

110 
Body
.
	`push
(
	`gë_ru¡ime_ty≥_°rög
(
t
->
	`gëTy≥Summ¨y
()));

111 
Body
.
	`push
(", ");

112 
Body
.
	`push
(
is_öput
?"true, ":"false, ");

113 
Body
.
	`push
(
is_ouçut
?"true":"false");

114 
Body
.
	`push 
(");");

116 
	}
}

118 
	$¥öt_¨gumít_lﬂdî
(
gm_code_wrôî
& 
Body
, 
a°_¨gde˛
* 
def
, 
boﬁ
 
is_œ°
)

120 
	`as£π
(
def
->
	`gë_idli°
()->
	`gë_Àngth
()==1);

121 
a°_ty≥de˛
* 
t
 = (
def
)->
	`gë_ty≥
();

122 i‡(
t
->
	`is_¥›îty
()) {

123 
a°_ty≥de˛
* 
t2
 = 
t
->
	`gë_èrgë_ty≥
();

124 
Body
.
	`push
("("),

125 
Body
.
	`push
(
	`gë_ru¡ime_˘y≥
(
t2
->
	`gëTy≥Summ¨y
()));

126 
Body
.
	`push
("*) Main.get_property(\"");

127 
Body
.
	`push
(
def
->
	`gë_idli°
()->
	`gë_ôem
(0)->
	`gë_gí«me
());

128 
Body
.
	`push
("\")");

131 i‡(
t
->
	`is_gøph
()){

132 
Body
.
	`push
("Main.get_graph()");

134 
Body
.
	`push
("*(("),

135 
Body
.
	`push
(
	`gë_ru¡ime_˘y≥
(
t
->
	`gëTy≥Summ¨y
()));

136 
Body
.
	`push
("*) Main.get_scalar(\"");

137 
Body
.
	`push
(
def
->
	`gë_idli°
()->
	`gë_ôem
(0)->
	`gë_gí«me
());

138 
Body
.
	`push
("\"))");

141 i‡(!
is_œ°
Ë
Body
.
	`push 
(",");

142 
	}
}

144 
	ggm_˝p_gí
::
	$do_gíî©e_u£r_maö
()

146 
Body
.
	`NL
();

147 
Body
.
	`push 
("#define GM_DEFINE_USER_MAIN 1");

148 
Body
.
	`push 
("#if GM_DEFINE_USER_MAIN");

149 
Body
.
	`NL
();

150 
Body
.
	`push
("// "); Body.push(
‚ame
); Body.push(" -? : for howÅoÑun generated mainÖrogram\n");

151 
Body
.
	`push 
("int main(intárgc, char**árgv)");

152 
Body
.
	`push 
("{");

153 
Body
.
	`push 
("gm_default_usermain Main;");

154 
Body
.
	`NL
();

156 
	`as£π
(
FE
.
	`gë_Æl_¥ocs
().
	`size
() == 1);

157 
a°_¥ocdef
* 
¥oc
 = 
FE
.
	`gë_Æl_¥ocs
()[0];

158 
a°_ty≥de˛
* 
ªt_ty≥
 = 
¥oc
->
	`gë_ªtu∫_ty≥
();

159 
°d
::
li°
<
a°_¨gde˛
*>::
ôî©‹
 
I
;

160 
°d
::
li°
<
a°_¨gde˛
*>& 
In
 = 
¥oc
->
	`gë_ö_¨gs
();

161 
°d
::
li°
<
a°_¨gde˛
*>& 
Out
 = 
¥oc
->
	`gë_out_¨gs
();

164 
I
=
In
.
	`begö
(); I!In.
	`íd
(); I++) {

165 
	`¥öt_de˛¨e_¨gumít
(
Body
, *
I
, 
åue
, 
Ál£
);

167 
I
=
Out
.
	`begö
(); I!Out.
	`íd
(); I++) {

168 
	`¥öt_de˛¨e_¨gumít
(
Body
, *
I
, 
Ál£
, 
åue
);

170 i‡(!
ªt_ty≥
->
	`is_void
()) {

171 
	`as£π
((
ªt_ty≥
->
	`is_nodìdge
()Ë|| (ªt_ty≥->
	`is_¥imôive
()));

172 
Body
.
	`push
("Main.declare_return(");

173 
Body
.
	`push
(
	`gë_ru¡ime_ty≥_°rög
(
ªt_ty≥
->
	`gëTy≥Summ¨y
()));

174 
Body
.
	`push 
(");");

177 
Body
.
	`NL
();

178 
Body
.
	`push 
("if (!Main.process_arguments(argc,árgv)) {");

179 
Body
.
	`push 
("return EXIT_FAILURE;");

180 
Body
.
	`push 
("}");

182 
Body
.
	`NL
();

183 
Body
.
	`push 
("if (!Main.do_preprocess()) {");

184 
Body
.
	`push 
("return EXIT_FAILURE;");

185 
Body
.
	`push 
("}");

187 
Body
.
	`NL
();

188 
Body
.
	`push 
("Main.begin_usermain();");

189 i‡(!
ªt_ty≥
->
	`is_void
()) {

190 
Body
.
	`push
("Main.");

191 
ªt_ty≥
->
	`gëTy≥Summ¨y
()) {

192 
GMTYPE_INT
: 
Body
.
	`push
("set_return_i("); ;

193 
GMTYPE_LONG
: 
Body
.
	`push
("set_return_l("); ;

194 
GMTYPE_BOOL
: 
Body
.
	`push
("set_return_b("); ;

195 
GMTYPE_DOUBLE
: 
Body
.
	`push
("set_return_d("); ;

196 
GMTYPE_FLOAT
: 
Body
.
	`push
("set_return_f("); ;

197 
GMTYPE_NODE
: 
Body
.
	`push
("set_return_n("); ;

198 
GMTYPE_EDGE
: 
Body
.
	`push
("set_return_e("); ;

199 : 
	`as£π
(
Ál£
); ;

202 
Body
.
	`push
(
¥oc
->
	`gë_¥o˙ame
()->
	`gë_gí«me
());

203 
Body
.
	`push 
("(");

204 
tŸÆ
 = 
In
.
	`size
(Ë+ 
Out
.size();;

205 
˙t
 = 0;

206 
I
=
In
.
	`begö
(); I!In.
	`íd
(); I++, 
˙t
++) {

207 
	`¥öt_¨gumít_lﬂdî
(
Body
, *
I
, (
tŸÆ
-1==
˙t
));

209 
I
=
Out
.
	`begö
(); I!Out.
	`íd
(); I++, 
˙t
++) {

210 
	`¥öt_¨gumít_lﬂdî
(
Body
, *
I
, (
tŸÆ
-1==
˙t
));

214 i‡(!
ªt_ty≥
->
	`is_void
()) {

215 
Body
.
	`NL
();

216 
Body
.
	`push 
(")");

217 
Body
.
	`push 
(");");

219 
Body
.
	`push 
(");");

223 
Body
.
	`push 
("Main.end_usermain();");

225 
Body
.
	`NL
();

226 
Body
.
	`push 
("if (!Main.do_postprocess()) {");

227 
Body
.
	`push 
("return EXIT_FAILURE;");

228 
Body
.
	`push 
("}");

230 
Body
.
	`NL
();

231 
Body
.
	`push 
("return EXIT_SUCCESS;");

232 
Body
.
	`push 
("}");

233 
Body
.
	`push 
("#endif");

234 
	}
}

236 
boﬁ
 
	ggm_˝p_gí
::
	$do_gíî©e
() {

238 i‡(!
	`›í_ouçut_fûes
()Ë 
Ál£
;

240 
	`do_gíî©e_begö
();

242 
boﬁ
 
b
 = 
	`gm_≠∂y_compûî_°age
(
this
->
gí_°ïs
);

243 i‡(
b
==
Ál£
) {

244 
	`˛o£_ouçut_fûes
(
åue
);

245  
Ál£
;

248 i‡(
OPTIONS
.
	`gë_¨g_boﬁ
(
GMARGFLAG_CPP_CREATE_MAIN
)) {

250 
	`do_gíî©e_u£r_maö
();

252 
°d
::
m≠
<°d::
°rög
, std::°rög> 
£tup
;

253 
	`gm_ªad_£tup_fûe
(
£tup
, 
Ál£
);

255 
	`do_gíî©e_compûe_shñl
(
£tup
);

258 
	`do_gíî©e_íd
();

260 
	`˛o£_ouçut_fûes
();

262  
åue
;

263 
	}
}

265 
	ggm_˝p_gí_¥oc
::
	$¥o˚ss
(
a°_¥ocdef
* 
¥oc
) {

266 
CPP_BE
.
	`gíî©e_¥oc
(
¥oc
);

267 
	}
}

	@gm_cpp_gen_mark_parallel.cc

1 
	~"gm_backíd_˝p.h
"

2 
	~"gm_å™sf‹m_hñ≥r.h
"

4 
	ggm_˝p_gí_m¨k_∑øŒñ
::
	$¥o˚ss
(
a°_¥ocdef
* 
p
) {

5 c⁄° 
boﬁ
 
íåy_is_£q
 = 
åue
;

6 
	`gm_m¨k_£¡s_undî_∑øŒñ_executi⁄
(
p
->
	`gë_body
(), 
íåy_is_£q
);

7 
	}
}

	@gm_cpp_gen_misc_check.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_öd_›t.h
"

9 
	~"gm_¨g›ts.h
"

10 
	~"gm_rw_™Æysis.h
"

11 
	~"gm_buûtö.h
"

19 ˛as†
	c˝p_check_ªvî£_edge_t
 : 
public
 
gm_≠∂y


21 
public
:

22 
	$˝p_check_ªvî£_edge_t
() {

23 
	`£t_f‹_£¡
(
åue
);

24 
	`£t_f‹_ex¥
(
åue
);

26 
boﬁ
 
	$≠∂y
(
a°_ex¥
* 
s
) {

27 i‡(
s
->
	`is_buûtö
()) {

28 
a°_ex¥_buûtö
* 
b
 = (a°_ex¥_buûtö*Ë
s
;

29 
gm_buûtö_def
* 
def
 = 
b
->
	`gë_buûtö_def
();

31 i‡(
def
->
	`föd_öfo_boﬁ
(
GM_BLTIN_INFO_USE_REVERSE
)) {

32 
a°_id
* 
drivî
 = 
b
->
	`gë_drivî
();

33 
	`as£π
(
drivî
!=
NULL
);

34 
a°_id
* 
G
 = 
drivî
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
();

35 
	`as£π
(
G
!=
NULL
);

36 
gm_symèb_íåy
* 
e
 = 
G
->
	`gëSymInfo
();

37 
e
->
	`add_öfo_boﬁ
(
CPPBE_INFO_USE_REVERSE_EDGE
, 
åue
);

40 i‡(
def
->
	`föd_öfo_boﬁ
(
GM_BLTIN_INFO_CHECK_NBR
)) {

41 
a°_id
* 
drivî
 = 
b
->
	`gë_drivî
();

42 
	`as£π
(
drivî
!=
NULL
);

43 
a°_id
* 
G
 = 
drivî
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
();

44 
	`as£π
(
G
!=
NULL
);

45 
gm_symèb_íåy
* 
e
 = 
G
->
	`gëSymInfo
();

46 
e
->
	`add_öfo_boﬁ
(
CPPBE_INFO_NEED_SEMI_SORT
, 
åue
);

49 i‡(
def
->
	`föd_öfo_boﬁ
(
GM_BLTIN_INFO_NEED_FROM
)) {

50 
a°_id
* 
drivî
 = 
b
->
	`gë_drivî
();

51 
	`as£π
(
drivî
!=
NULL
);

52 
a°_id
* 
G
 = 
drivî
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
();

53 
	`as£π
(
G
!=
NULL
);

54 
gm_symèb_íåy
* 
e
 = 
G
->
	`gëSymInfo
();

55 
e
->
	`add_öfo_boﬁ
(
CPPBE_INFO_NEED_FROM_INFO
, 
åue
);

58  
åue
;

59 
	}
}

61 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

62 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_BFS
) {

63 
a°_bfs
* 
bfs
 = (a°_bfs*Ë
s
;

64 i‡(
bfs
->
	`is_å™•o£
()) {

65 
a°_id
* 
G
 = 
bfs
->
	`gë_sour˚
();

66 
gm_symèb_íåy
* 
e
 = 
G
->
	`gëSymInfo
();

67 i‡(
e
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_REVERSE_EDGE
Ë=
Ál£
) {

68 
e
->
	`add_öfo_boﬁ
(
CPPBE_INFO_USE_REVERSE_EDGE
, 
åue
);

73 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
) {

74 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

75 
ôî_ty≥
 = 
„
->
	`gë_ôî_ty≥
();

76 i‡(
	`gm_is_ôî©i⁄_u£_ªvî£
(
ôî_ty≥
)) {

77 
a°_id
* 
G
 = 
„
->
	`gë_sour˚
()->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
();

78 i‡(
G
 !
NULL
) {

79 
gm_symèb_íåy
* 
e
 = 
G
->
	`gëSymInfo
();

80 i‡(
e
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_REVERSE_EDGE
Ë=
Ál£
) {

81 
e
->
	`add_öfo_boﬁ
(
CPPBE_INFO_USE_REVERSE_EDGE
, 
åue
);

86 i‡(
	`gm_is_comm⁄_nbr_ôî©i⁄
(
ôî_ty≥
)) {

87 
a°_id
* 
G
 = 
„
->
	`gë_sour˚
()->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
();

88 i‡(
G
 !
NULL
) {

89 
gm_symèb_íåy
* 
e
 = 
G
->
	`gëSymInfo
();

90 i‡(
e
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_NEED_SEMI_SORT
Ë=
Ál£
) {

91 
e
->
	`add_öfo_boﬁ
(
CPPBE_INFO_NEED_SEMI_SORT
, 
åue
);

96  
åue
;

97 
	}
}

100 
	ggm_˝p_gí_misc_check
::
	$¥o˚ss
(
a°_¥ocdef
* 
d
) {

102 
˝p_check_ªvî£_edge_t
 
T
;

103 
d
->
	`åavî£_¥e
(&
T
);

104 
	}
}

	@gm_cpp_gen_prop_decl.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_öd_›t.h
"

9 
	~"gm_¨g›ts.h
"

17 ˛as†
	c¥›îty_de˛_check_t
 : 
public
 
gm_≠∂y


19 
public
:

20 
	$¥›îty_de˛_check_t
() :

21 
	$has_¥›_de˛
(
Ál£
) {

24 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
 *
s
) {

25 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_SENTBLOCK
) {

26 
a°_£¡block
* 
sb
 = (a°_£¡block*Ë
s
;

27 
gm_symèb
* 
e
 = 
sb
->
	`gë_symèb_fõld
();

29 i‡(
e
->
	`gë_íåõs
().
	`size
() != 0) {

30 
has_¥›_de˛
 = 
åue
;

31 
s
->
	`add_öfo_boﬁ
(
CPPBE_INFO_HAS_PROPDECL
, 
åue
);

34  
åue
;

35 
	}
}

36 
boﬁ
 
	ghas_¥›_de˛
;

39 
	ggm_˝p_gí_¥›_de˛
::
	$¥o˚ss
(
a°_¥ocdef
* 
¥oc
) {

40 
¥›îty_de˛_check_t
 
T1
;

41 
	`gm_åavî£_£¡s
(
¥oc
->
	`gë_body
(), &
T1
);

43 
¥oc
->
	`add_öfo_boﬁ
(
CPPBE_INFO_HAS_PROPDECL
, 
T1
.
has_¥›_de˛
);

45 
¥oc
->
	`gë_body
()->
	`add_öfo_boﬁ
(
CPPBE_INFO_IS_PROC_ENTRY
, 
åue
);

47 
	}
}

	@gm_cpp_gen_regular.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_ty≥check.h
"

5 
	~"gm_å™sf‹m_hñ≥r.h
"

6 
	~"gm_‰⁄ãnd.h
"

8 
gm_˝p_gí
 
CPP_BE
;

14 ˛as†
	c˝p_gí_ªguœr_1_t
 : 
public
 
gm_≠∂y


16 
public
:

17 
	$˝p_gí_ªguœr_1_t
() {

18 
	`£t_f‹_£¡
(
åue
);

21 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

22 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_RETURN
) {

23 
èrgës
.
	`push_back
(
s
);

24 } i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
) {

25 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

26 i‡(
CPP_BE
.
	`gë_lib
()->
	`√ed_up_öôülizî
(
„
)) {

27 
èrgës
.
	`push_back
(
„
);

30 i‡((
„
->
	`gë_body
()->
	`gë_nodëy≥
(Ë!
AST_SENTBLOCK
Ë&& 
CPP_BE
.
	`gë_lib
()->
	`√ed_down_öôülizî
(fe)) {

31 
èrgës
.
	`push_back
(
„
->
	`gë_body
());

34  
åue
;

35 
	}
}

37 
	$po°_¥o˚ss
() {

38 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

39 
I
 = 
èrgës
.
	`begö
(); I !èrgës.
	`íd
(); I++)

40 
	`gm_make_ô_bñ⁄g_to_£¡block
(*
I
);

41 
	}
}

43 
	g¥iv©e
:

44 
°d
::
li°
<
a°_£¡
*> 
èrgës
;

48 
	ggm_˝p_gí_ªguœr
::
	$¥o˚ss
(
a°_¥ocdef
* 
¥oc
) {

49 
˝p_gí_ªguœr_1_t
 
T
;

50 
¥oc
->
	`åavî£_¥e
(&
T
);

51 
	}
}

	@gm_cpp_gen_sanitize_name.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

8 
	~"gm_‰⁄ãnd.h
"

9 
	~"gm_öd_›t.h
"

10 
	~"gm_¨g›ts.h
"

12 ˛as†
	cª«me_¥›_«me_t
 : 
public
 
gm_≠∂y


14 
public
:

15 
	$ª«me_¥›_«me_t
() {

16 
	`£t_f‹_symèb
(
åue
);

19 
boﬁ
 
	$≠∂y
(
gm_symèb_íåy
 *
e
, 
symèb_ty≥
) {

21 i‡(
symèb_ty≥
 !
GM_SYMTAB_FIELD
Ë 
åue
;

23 
a°_id
* 
id
 = 
e
->
	`gëId
();

24 
a°_ty≥de˛
* 
T
 = 
e
->
	`gëTy≥
();

25 
a°_id
* 
gøph
 = 
T
->
	`gë_èrgë_gøph_id
();

26 
	`as£π
(
gøph
 !
NULL
);

29 
buf
[1024];

30 
	`•rötf
(
buf
, "%s_%s", 
gøph
->
	`gë_‹g«me
(), 
id
->
	`gë_gí«me
());

31 * 
√w_«me
 = 
FE
.
	`voˇ_ãmp_«me
(
buf
, 
NULL
, 
åue
);

32 
id
->
	`£t_gí«me
(
√w_«me
);

33 
FE
.
	`voˇ_add
(
√w_«me
);

34  
åue
;

35 
	}
}

38 
gm_¥ï¨e_gí«me
(
a°_¥ocdef
* 
p
, 
gm_voˇbuœry
* 
œng_voˇ
);

40 
gm_˝p_gí
 
CPP_BE
;

41 
	ggm_˝p_gí_ßnôize_«me
::
	$¥o˚ss
(
a°_¥ocdef
* 
¥oc
) {

43 
gm_voˇbuœry
 & 
V
 = 
CPP_BE
.
	`gë_œnguage_voˇ
();

44 
	`gm_¥ï¨e_gí«me
(
¥oc
, &
V
);

47 
ª«me_¥›_«me_t
 
T
;

48 
¥oc
->
	`åavî£_¥e
(&
T
);

49 
	}
}

	@gm_cpp_opt.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_rw_™Æysis.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_öd_›t.h
"

9 
	~"gm_¨g›ts.h
"

10 
	~"gm_backíd_˝p_›t_°ïs.h
"

11 
	~"gm_öd_›t_°ïs.h
"

13 
	ggm_˝p_gí
::
	$öô_›t_°ïs
() {

14 
°d
::
li°
<
gm_compûe_°ï
*>& 
LIST
 = 
this
->
›t_°ïs
;

16 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_check_„asibÀ
));

17 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_de„r
));

18 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_comm⁄_nbr
));

19 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_£À˘_∑r
));

20 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_£À˘_£q_im∂emíèti⁄
));

21 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_£À˘_m≠_im∂emíèti⁄
));

22 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_ßve_bfs
));

23 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_öd_›t_move_¥›de˛
));

24 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_„_fixup_bound_symbﬁ
));

25 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_öd_›t_n⁄c⁄f_ªdu˚
));

26 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_ªdu˚_sˇœr
));

27 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_ªdu˚_fõld
));

28 
LIST
.
	`push_back
(
	`GM_COMPILE_STEP_FACTORY
(
gm_˝p_›t_debug
));

29 
	}
}

31 
boﬁ
 
	ggm_˝p_gí
::
	$do_loˇl_›timize
() {

33  
	`gm_≠∂y_compûî_°age
(
›t_°ïs
);

34 
	}
}

36 
boﬁ
 
	ggm_˝p_gí
::
	$do_loˇl_›timize_lib
() {

37 
	`as£π
(
	`gë_lib
(Ë!
NULL
);

38  
	`gë_lib
()->
	`do_loˇl_›timize
();

39 
	}
}

	@gm_cpp_opt_check_feasible.cc

1 
	~"gm_backíd_˝p.h
"

2 
	~"gm_îr‹.h
"

4 ˛as†
	ccheck_˝p_„asibÀ_t
 : 
public
 
gm_≠∂y


6 
public
:

7 
	$check_˝p_„asibÀ_t
() {

8 
	`£t_f‹_symèb
(
åue
);

9 
	`£t_f‹_£¡
(
åue
);

10 
	`£t_£∑øã_po°_≠∂y
(
åue
);

11 
bfs_dïth
 = 0;

12 
_okay
 = 
åue
;

15 
boﬁ
 
	$≠∂y
(
a°_£¡
*
s
) {

16 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_BFS
) {

17 i‡(
bfs_dïth
 > 0) {

18 
	`gm_backíd_îr‹
(
GM_ERROR_CPP_UNSUPPORTED_SYNTAX
, 
s
->
	`gë_löe
(), s->
	`gë_cﬁ
(), "nested DFS/BFS.");

19 
	`£t_okay
(
Ál£
);

21 
bfs_dïth
++;

23  
åue
;

24 
	}
}

25 
boﬁ
 
	$≠∂y2
(
a°_£¡
*
s
) {

26 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_BFS
) {

27 
bfs_dïth
--;

29  
åue
;

30 
	}
}

31 
boﬁ
 
	$≠∂y
(
gm_symèb_íåy
* 
e
, 
gm_symèb_ty≥
) {

42  
åue
;

43 
	}
}

45 
boﬁ
 
	$is_okay
() {

46  
_okay
;

47 
	}
}

48 
	$£t_okay
(
boﬁ
 
b
) {

49 
_okay
 = 
b
;

50 
	}
}

51 
	g¥iv©e
:

52 
boﬁ
 
_okay
;

53 
	gbfs_dïth
;

56 
	ggm_˝p_›t_check_„asibÀ
::
	$¥o˚ss
(
a°_¥ocdef
* 
p
) {

57 
check_˝p_„asibÀ_t
 
T
;

58 
p
->
	`åavî£_bŸh
(&
T
);

60 
	`£t_okay
(
T
.
	`is_okay
());

61 
	}
}

	@gm_cpp_opt_common_nbr.cc

1 
	~<°dio.h
>

2 
	~<m≠
>

3 
	~"gm_backíd_˝p.h
"

4 
	~"gm_backíd_˝p_›t_°ïs.h
"

5 
	~"gm_îr‹.h
"

6 
	~"gm_ty≥check.h
"

7 
	~"gm_å™sf‹m_hñ≥r.h
"

8 
	~"gm_¨g›ts.h
"

9 
	~"gm_buûtö.h
"

29 
boﬁ
 
	$is_comm⁄_nbr_ex¥essi⁄
(
a°_ex¥
* 
e
, 
gm_symèb_íåy
* 
ôî_sym
, gm_symèb_íåy*& 
s
) {

32 i‡(
e
->
	`gë_›ty≥
(Ë=
GMOP_EQ
)

34 
a°_ex¥
* 
l
 = 
e
->
	`gë_À·_›
();

35 
a°_ex¥
* 
r
 = 
e
->
	`gë_right_›
();

36 i‡(
r
->
	`is_lôîÆ
(Ë&& (r->
	`gë_ty≥_summ¨y
(Ë=
GMTYPE_BOOL
Ë&& (r->
	`gë_bvÆ
(Ë=
åue
))

38 
e
 = 
l
;

41  
Ál£
;

44 i‡(
e
->
	`is_buûtö
())

46 
a°_ex¥_buûtö
 * 
b
 = (a°_ex¥_buûtö*Ë
e
;

49 
a°_id
* 
drivî
 = 
b
->
	`gë_drivî
();

50 i‡(
drivî
 =
NULL
)

51  
Ál£
;

52 i‡(!
drivî
->
	`gëTy≥Info
()->
	`is_node_com∑tibÀ
())

53  
Ál£
;

55 i‡(
drivî
->
	`gëSymInfo
(Ë!
ôî_sym
)

56  
Ál£
;

58 i‡(
b
->
	`gë_buûtö_def
()->
	`gë_mëhod_id
(Ë=
GM_BLTIN_NODE_IS_NBR_FROM
) {

59 
°d
::
li°
<
a°_ex¥
*>& 
L
 = 
b
->
	`gë_¨gs
();

60 
a°_ex¥
* 
¨g
 = 
L
.
	`‰⁄t
(); 
	`as£π
◊rg!=
NULL
);

61 i‡(!
¨g
->
	`is_id
())

62  
Ál£
;

63 
s
 = (
¨g
->
	`gë_id
())->
	`gëSymInfo
();

64  
åue
;

68  
Ál£
;

69 
	}
}

71 
	sgm_˝p_comm⁄_nbr_ôem_t
 {

72 
a°_f‹óch
* 
	m„
;

73 
a°_if
* 
	miff
;

74 
a°_if
* 
	mout_iff
;

75 
boﬁ
 
	m√°ed_iff
;

76 
gm_symèb_íåy
* 
	mcomm⁄_sym
;

79 ˛as†
	c˝p_›t_comm⁄_nbr_t
 : 
public
 
gm_≠∂y


81 
public
:

83 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
£¡
) {

87 i‡(
£¡
->
	`gë_nodëy≥
(Ë!
AST_FOREACH
)

88  
åue
;

90 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
£¡
;

92 i‡(!
	`gm_is_out_nbr_node_ôî©i⁄
(
„
->
	`gë_ôî_ty≥
()))

93  
åue
;

96 
a°_£¡
* 
„_body
 = 
	`gm_gë_£¡í˚_if_åivül_£¡block
(
„
->
	`gë_body
());

98 i‡(
„_body
->
	`gë_nodëy≥
(Ë!
AST_IF
)

99  
åue
;

102 
a°_if
* 
iff
 = (a°_if*Ë
„_body
;

103 i‡(
iff
->
	`gë_ñ£
(Ë!
NULL
)

104  
åue
;

106 
gm_symèb_íåy
* 
t_sym
;

107 i‡(
	`is_comm⁄_nbr_ex¥essi⁄
(
iff
->
	`gë_c⁄d
(), 
„
->
	`gë_ôî©‹
()->
	`gëSymInfo
(), 
t_sym
))

109 
gm_˝p_comm⁄_nbr_ôem_t
 
T
;

110 
T
.
„
 = fe;

111 
T
.
iff
 = iff;

112 
T
.
√°ed_iff
 = 
Ál£
;

113 
T
.
comm⁄_sym
 = 
t_sym
;

114 
_èrgës
.
	`push_back
(
T
);

118 
a°_£¡
* 
iff_body
 = 
	`gm_gë_£¡í˚_if_åivül_£¡block
(
iff
->
	`gë_thí
());

119 i‡(
iff_body
->
	`gë_nodëy≥
(Ë!
AST_IF
)

120  
åue
;

122 
a°_if
* 
iff2
 = (a°_if*Ë
iff_body
;

123 i‡(
	`is_comm⁄_nbr_ex¥essi⁄
(
iff2
->
	`gë_c⁄d
(), 
„
->
	`gë_ôî©‹
()->
	`gëSymInfo
(), 
t_sym
))

125 
gm_˝p_comm⁄_nbr_ôem_t
 
T
;

126 
T
.
„
 = fe;

127 
T
.
iff
 = 
iff2
;

128 
T
.
√°ed_iff
 = 
åue
;

129 
T
.
out_iff
 = 
iff
;

130 
T
.
comm⁄_sym
 = 
t_sym
;

131 
_èrgës
.
	`push_back
(
T
);

134  
åue
;

138 
	$å™sf‹m_èrgës
() {

139 
°d
::
li°
<
gm_˝p_comm⁄_nbr_ôem_t
>::
ôî©‹
 
I
;

140 
I
 = 
_èrgës
.
	`begö
(); I !_èrgës.
	`íd
(); I++) {

141 
	`≠∂y_å™sf‹m
(*
I
);

143 
	}
}

145 
boﬁ
 
	$has_èrgës
() {

146  
_èrgës
.
	`size
() > 0;

147 
	}
}

149 
	g¥iv©e
:

150 
°d
::
li°
<
gm_˝p_comm⁄_nbr_ôem_t
> 
_èrgës
;

151 
≠∂y_å™sf‹m
(
gm_˝p_comm⁄_nbr_ôem_t
& 
T
);

158 
	g˝p_›t_comm⁄_nbr_t
::
	$≠∂y_å™sf‹m
(
gm_˝p_comm⁄_nbr_ôem_t
& 
T
) {

159 
a°_f‹óch
* 
„
 =
T
.fe;

160 
a°_if
* 
iff
 = 
T
.iff;

161 
a°_if
* 
out_iff
 = 
T
.out_iff;

162 
boﬁ
 
√°ed_iff
 = 
T
.nested_iff;

163 
gm_symèb_íåy
* 
comm⁄_sym
 = 
T
.common_sym;

166 
a°_£¡
* 
if_body
 = 
iff
->
	`gë_thí
();

167 
	`gm_rùoff_£¡
(
if_body
);

168 
	`gm_rùoff_£¡
(
iff
);

170 i‡(!
√°ed_iff
)

184 
„
->
	`£t_body
(
if_body
);

205 
out_iff
->
	`£t_thí
(
if_body
);

209 
„
->
	`£t_ôî_ty≥
(
GMITER_NODE_COMMON_NBRS
);

210 
„
->
	`£t_sour˚2
(
comm⁄_sym
->
	`gëId
()->
	`c›y
());

213 
	`gm_ªc⁄°ru˘_sc›e
(
„
);

216 
dñëe
 
iff
;

217 
	}
}

219 
	ggm_˝p_›t_comm⁄_nbr
::
	$¥o˚ss
(
a°_¥ocdef
 *
p
) {

220 
˝p_›t_comm⁄_nbr_t
 
T
;

221 
	`gm_åavî£_£¡s
(
p
->
	`gë_body
(), &
T
);

222 i‡(
T
.
	`has_èrgës
()) {

223 
T
.
	`å™sf‹m_èrgës
();

224 
	`£t_af„˘ed
(
åue
);

226 
	}
}

	@gm_cpp_opt_debug.cc

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_backíd_˝p_›t_°ïs.h
"

4 
	~"gm_å™sf‹m_hñ≥r.h
"

10 
gm_Êush_ª¥odu˚
();

11 
	$ã°_def_™Æysis
(
a°_¥ocdef
* 
¥oc
)

13 
gm_deföed_symbﬁ_m≠
 
DI
;

14 
	`gm_compuã_deföed_symbﬁ_öfo
(
¥oc
, 
DI
);

17 
gm_deföed_symbﬁ_m≠
::
ôî©‹
 
I
;

18 
I
=
DI
.
	`begö
(); I!=DI.
	`íd
(); I++)

20 
a°_node
*
s
 = 
I
->
fú°
;

21 
°d
::
ve˘‹
<
gm_symbﬁ_def_t
> & 
V
 = 
I
->
£c⁄d
;

22 
°d
::
ve˘‹
<
gm_symbﬁ_def_t
>::
ôî©‹
 
J
;

24 
s
->
	`ª¥odu˚
(-1);

25 
	`gm_Êush_ª¥odu˚
();

26 
	`¥ötf
("===>[");

27 
J
=
V
.
	`begö
();J!=V.
	`íd
(); J++)

29 
gm_symèb_íåy
* 
e
 = 
J
->
fú°
;

30 
	`¥ötf
("%†", 
e
->
	`gëId
()->
	`gë_gí«me
());

32 
	`¥ötf
("]\n\n");

35 
	}
}

37 
	$ã°_u£_™Æysis
(
a°_¥ocdef
* 
¥oc
)

39 
gm_u£d_symbﬁ_m≠
 
UI
;

40 
	`gm_compuã_u£d_symbﬁ_öfo
(
¥oc
, 
UI
);

43 
gm_u£d_symbﬁ_m≠
::
ôî©‹
 
I
;

44 
I
=
UI
.
	`begö
(); I!=UI.
	`íd
(); I++)

46 
a°_£¡
*
s
 = 
I
->
fú°
;

47 
°d
::
£t
<
gm_symèb_íåy
*> & 
SET
 = 
I
->
£c⁄d
;

48 
°d
::
£t
<
gm_symèb_íåy
*>::
ôî©‹
 
J
;

50 
s
->
	`ª¥odu˚
(-1);

51 
	`gm_Êush_ª¥odu˚
();

52 
	`¥ötf
("===>[");

53 
J
=
SET
.
	`begö
();J!=SET.
	`íd
(); J++)

55 
gm_symèb_íåy
* 
e
 = *
J
;

56 
	`¥ötf
("%†", 
e
->
	`gëId
()->
	`gë_gí«me
());

58 
	`¥ötf
("]\n\n");

62 
	}
}

64 
	$ã°_ªachög_def_™Æysis
(
a°_¥ocdef
* 
¥oc
)

66 
gm_rda_m≠
 
R
;

67 
	`gm_do_ªachög_def_™Æysis
(
¥oc
, 
R
);

70 
gm_rda_m≠
::
ôî©‹
 
I
;

71 
I
=
R
.
	`begö
(); I!=R.
	`íd
(); I++)

73 
gm_symèb_íåy
* 
sym
 = 
I
->
fú°
.first;

74 
a°_£¡
*
s
 = 
I
->
fú°
.
£c⁄d
;

75 
	`as£π
(
sym
->
	`gëId
(Ë!
NULL
);

76 
	`as£π
(
sym
->
	`gëId
()->
	`gë_gí«me
(Ë!
NULL
);

78 
	`¥ötf
("[%s] @ [", 
sym
->
	`gëId
()->
	`gë_gí«me
());

79 
	`fÊush
(
°dout
);

80 
s
->
	`ª¥odu˚
(-1);

81 
	`gm_Êush_ª¥odu˚
();

82 
	`¥ötf
("]");

83 
	`fÊush
(
°dout
);

85 
°d
::
£t
<
a°_node
*>& 
SET
 = 
I
->
£c⁄d
;

86 
°d
::
£t
<
a°_node
*>::
ôî©‹
 
J
;

88 
	`¥ötf
("===>");

89 
J
=
SET
.
	`begö
();J!=SET.
	`íd
(); J++)

91 
a°_node
* 
n
 = *
J
;

92 
	`¥ötf
("[");

93 
n
->
	`ª¥odu˚
(-1);

94 
	`gm_Êush_ª¥odu˚
();

95 
	`¥ötf
("] ");

96 
	`fÊush
(
°dout
);

98 
	`¥ötf
("\n\n");

102 
	}
}

106 
	ggm_˝p_›t_debug
::
	$¥o˚ss
(
a°_¥ocdef
* 
¥oc
)

115 
	}
}

	@gm_cpp_opt_defer.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_ty≥check.h
"

5 
	~"gm_å™sf‹m_hñ≥r.h
"

6 
	~"gm_‰⁄ãnd.h
"

7 
	~"gm_rw_™Æysis.h
"

9 
boﬁ
 
föd_de„ºed_wrôes
(
a°_¥ocdef
* 
¥oc
, 
°d
::
li°
<
gm_symèb_íåy
*>& 
èrgë_syms
, std::li°<
a°_f‹óch
*>& 
èrgë_f‹óch
);

10 
po°_¥o˚ss_de„ºed_wrôes
(
°d
::
li°
<
gm_symèb_íåy
*>& 
èrgë_syms
, std::li°<
a°_f‹óch
*>& 
èrgë_f‹óch
);

35 
	~"gm_backíd_˝p_›t_°ïs.h
"

37 
	ggm_˝p_›t_de„r
::
	$¥o˚ss
(
a°_¥ocdef
* 
¥oc
) {

38 
°d
::
li°
<
gm_symèb_íåy
*> 
S
;

39 
°d
::
li°
<
a°_f‹óch
*> 
F
;

40 
boﬁ
 
b
 = 
	`föd_de„ºed_wrôes
(
¥oc
, 
S
, 
F
);

41 i‡(
b
) {

42 
	`po°_¥o˚ss_de„ºed_wrôes
(
S
, 
F
);

44 
	`gm_ªdo_rw_™Æysis
(
¥oc
->
	`gë_body
());

47 
	`£t_af„˘ed
(
b
);

48 
	}
}

53 ˛as†
	cgm_de„r_wrôe
 : 
public
 
gm_≠∂y


55 
public
:

56 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

57 i‡(
s
->
	`gë_nodëy≥
(Ë!
AST_FOREACH
Ë 
åue
;

58 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

61 
gm_bound_£t_öfo
* 
B
 = 
	`gm_gë_bound_£t_öfo
(
„
);

62 
	`as£π
(
B
!=
NULL
);

63 
gm_rwöfo_m≠
& 
BSET
 = 
B
->
bound_£t
;

65 
gm_rwöfo_m≠
::
ôî©‹
 
i
;

66 
i
 = 
BSET
.
	`begö
(); i !BSET.
	`íd
(); i++) {

67 
gm_symèb_íåy
*
e
 = 
i
->
fú°
;

68 
	`as£π
(
e
!=
NULL
);

69 
gm_rwöfo_li°
* 
l
 = 
i
->
£c⁄d
;

70 
	`as£π
(
l
!=
NULL
);

71 
gm_rwöfo_li°
::
ôî©‹
 
j
;

72 
boﬁ
 
is_de„ºed
 = 
Ál£
;

73 
j
 = 
l
->
	`begö
(); j !l->
	`íd
(); j++) {

74 
gm_rwöfo
* 
I
 = *
j
;

75 i‡(
I
->
ªdu˚_›
 =
GMREDUCE_DEFER
) {

76 
is_de„ºed
 = 
åue
;

77 
has_found
 = 
åue
;

81 i‡(
is_de„ºed
) {

82 
èrgë_syms
->
	`push_back
(
e
);

83 
èrgë_f‹óch
->
	`push_back
(
„
);

86  
åue
;

89 
boﬁ
 
	$föd_de„ºed_wrôes
(
a°_¥ocdef
 *
s
) {

90 
has_found
 = 
Ál£
;

91 
	`gm_åavî£_£¡s
(
s
, 
this
, 
GM_POST_APPLY
);

92  
has_found
;

93 
	}
}

95 
£t_èrgës
(
°d
::
li°
<
gm_symèb_íåy
*>* 
S
, std::li°<
a°_f‹óch
*>* 
F
) {

96 
èrgë_syms
 = 
S
;

97 
	gèrgë_f‹óch
 = 
F
;

100 
	g¥Ÿe˘ed
:

101 
°d
::
li°
<
gm_symèb_íåy
*>* 
èrgë_syms
;

102 
	g°d
::
li°
<
a°_f‹óch
*>* 
èrgë_f‹óch
;

103 
boﬁ
 
	ghas_found
;

107 
boﬁ
 
föd_de„ºed_wrôes
(
a°_¥ocdef
* 
¥oc
, 
°d
::
li°
<
gm_symèb_íåy
*>& 
èrgë_syms
, std::li°<
a°_f‹óch
*>& 
èrgë_f‹óch
) {

108 
gm_de„r_wrôe
 
T
;

109 
	gT
.
£t_èrgës
(&
èrgë_syms
, &
èrgë_f‹óch
);

110 
boﬁ
 
	gb
 = 
T
.
föd_de„ºed_wrôes
(
¥oc
);

111  
	gb
;

114 
a°_f‹óch
* 
¸óã_öôülizî
(
a°_id
* 
§c
, 
boﬁ
 
is_nodïr›
, 
gm_symèb_íåy
* 
ﬁd_de°
, gm_symèb_íåy* 
√w_de°
);

115 
a°_f‹óch
* 
¸óã_upd©î
(
a°_id
* 
§c
, 
boﬁ
 
is_nodïr›
, 
gm_symèb_íåy
* 
ﬁd_de°
, gm_symèb_íåy* 
√w_de°
);

116 
ª∂a˚_de„ºed_assignmít
(
a°_£¡
* 
s
, 
gm_symèb_íåy
 *
èrgë_ﬁd
, gm_symèb_íåy* 
èrgë_√w
);

117 
boﬁ
 
check_c⁄dôi⁄Æ_öôülize
(
a°_f‹óch
* 
èrgë_„
, 
gm_symèb_íåy
* 
èrgë_ﬁd
, 
a°_£¡
*& 
£q_lo›
);

118 
add_c⁄dôi⁄Æ_öôülize
(
a°_£¡
* 
£q_lo›
, 
a°_f‹óch
* 
èrgë_„
,á°_f‹óch* 
öô
, 
gm_symèb_íåy
* 
èrgë_ﬁd
, gm_symèb_íåy* 
èrgë_√w
);

127 
po°_¥o˚ss_de„ºed_wrôes
(
°d
::
li°
<
gm_symèb_íåy
*>& 
èrgë_syms
, std::li°<
a°_f‹óch
*>& 
èrgë_f‹óch
) {

128 
as£π
(
èrgë_syms
.
size
(Ë=
èrgë_f‹óch
.size());

129 
	g°d
::
li°
<
gm_symèb_íåy
*>::
ôî©‹
 
i
 = 
èrgë_syms
.
begö
();

130 
	g°d
::
li°
<
a°_f‹óch
*>::
ôî©‹
 
j
 = 
èrgë_f‹óch
.
begö
();

131 ; 
	gi
 !
èrgë_syms
.
íd
(); i++, 
	gj
++) {

133 
gm_symèb_íåy
* 
	gﬁd_de°
 = *
i
;

134 
a°_ty≥de˛
 *
	gty≥
 = (*
i
)->
gëTy≥
();

135 
a°_id
* 
	gid
 = (*
i
)->
gëId
();

136 
a°_f‹óch
* 
	g„
 = *
j
;

138 
as£π
(
ty≥
->
is_¥›îty
());

140 
gm_make_ô_bñ⁄g_to_£¡block
(
„
);

146 
boﬁ
 
	gis_nodïr›
 = 
ty≥
->
is_node_¥›îty
();

147 
	gèrgë_ty≥
 = 
ty≥
->
gëT¨gëTy≥Summ¨y
();

148 
as£π
(
gm_is_¥im_ty≥
(
èrgë_ty≥
));

149 
a°_£¡block
* 
	gsc›e
 = 
gm_föd_upsc›e
(
„
);

150 
gm_symèb_íåy
 * 
	gèrgë_gøph
 = 
ty≥
->
gë_èrgë_gøph_sym
();

152 * 
	g‚ame
 = (*Ë
FE
.
voˇ_ãmp_«me_™d_add
(
id
->
gë_‹g«me
(), "_nxt");

153 
gm_symèb_íåy
* 
	g√w_de°
 = 
gm_add_√w_symbﬁ_¥›îty
(
sc›e
, 
èrgë_ty≥
, 
is_nodïr›
, 
èrgë_gøph
, 
‚ame
);

154 
	gdñëe
[] 
	g‚ame
;

159 
ª∂a˚_de„ºed_assignmít
(
„
->
gë_body
(), 
ﬁd_de°
, 
√w_de°
);

164 
a°_id
* 
	g§c
 = 
èrgë_gøph
->
gëId
();

165 
as£π
(
§c
->
gëSymInfo
(Ë!
NULL
);

167 
boﬁ
 
	g√ed_öôülizî
 = 
åue
;

168 i‡(
gm_is_Æl_gøph_ôî©i⁄
(
„
->
gë_ôî_ty≥
())) {

169 
gm_rwöfo_£ts
 *
	g£ts
 = 
gm_gë_rwöfo_£ts
(
„
);

170 
	ggm_rwöfo_m≠
& 
	gW
 = 
£ts
->
wrôe_£t
;

171 
as£π
(
W
.
föd
(
ﬁd_de°
Ë!W.
íd
());

172 
gm_rwöfo_li°
* 
	gL
 = 
W
[
ﬁd_de°
];

173 
	g°d
::
li°
<
gm_rwöfo
*>::
ôî©‹
 
I
;

174 
	gI
 = 
L
->
begö
(); I !L->
íd
(); I++) {

175 
gm_rwöfo
* 
	göfo
 = *
I
;

176 i‡((
	göfo
->
	gac˚ss_ønge
 =
GM_RANGE_LINEAR
Ë&& (
öfo
->
Æways
)) {

177 
√ed_öôülizî
 = 
Ál£
;

183 
a°_f‹óch
* 
	göô
 = 
¸óã_öôülizî
(
§c
->
c›y
(
åue
), 
is_nodïr›
, 
ﬁd_de°
, 
√w_de°
);

185 
a°_£¡
* 
	g£q_lo›
 = 
NULL
;

186 i‡(
check_c⁄dôi⁄Æ_öôülize
(
„
, 
ﬁd_de°
, 
£q_lo›
)) {

213 i‡(
	g√ed_öôülizî
Ë
add_c⁄dôi⁄Æ_öôülize
(
£q_lo›
, 
„
, 
öô
, 
ﬁd_de°
, 
√w_de°
);

215 
gm_add_£¡_bef‹e
(
„
, 
öô
);

221 
a°_f‹óch
* 
	gupd©e
 = 
¸óã_upd©î
(
§c
->
c›y
(
åue
), 
is_nodïr›
, 
ﬁd_de°
, 
√w_de°
);

222 
gm_add_£¡_a·î
(
„
, 
upd©e
);

230 ˛as†
	cgm_ª∂a˚_da_t
 : 
public
 
gm_≠∂y


232 
public
:

233 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

234 i‡(
s
->
	`gë_nodëy≥
(Ë!
AST_ASSIGN
Ë 
åue
;

235 
a°_assign
* 
a
 = (a°_assign*Ë
s
;

236 i‡(
a
->
	`is_de„r_assign
()) {

237 i‡(!
a
->
	`is_èrgë_sˇœr
()) {

238 
a°_fõld
* 
lhs
 = 
a
->
	`gë_lhs_fõld
();

239 
a°_id
* 
drivî
 = 
lhs
->
	`gë_fú°
();

240 
a°_id
* 
¥›
 = 
lhs
->
	`gë_£c⁄d
();

241 i‡(
¥›
->
	`gëSymInfo
(Ë=
e_ﬁd
) {

243 
¥›
->
	`£tSymInfo
(
e_√w
);

245 
a°_id
 *
bound
 = 
a
->
	`gë_bound
();

246 
a
->
	`£t_bound
(
NULL
);

247 
a
->
	`£t_assign_ty≥
(
GMASSIGN_NORMAL
);

248 
a
->
	`£t_ªdu˚_ty≥
(
GMREDUCE_NULL
);

249 
dñëe
 
bound
;

253  
åue
;

255 
	$ª∂a˚_da
(
gm_symèb_íåy
 *
o
, gm_symèb_íåy *
n
, 
a°_£¡
* 
_s
) {

256 
e_ﬁd
 = 
o
;

257 
e_√w
 = 
n
;

258 
s
 = 
_s
;

259 
	`£t_Æl
(
Ál£
);

260 
	`£t_f‹_£¡
(
åue
);

261 
s
->
	`åavî£_po°
(
this
);

262 
	}
}

264 
	g¥Ÿe˘ed
:

265 
gm_symèb_íåy
 *
e_ﬁd
;

266 
gm_symèb_íåy
 *
	ge_√w
;

267 
a°_£¡
 *
	gs
;

270 
	$ª∂a˚_de„ºed_assignmít
(
a°_£¡
* 
s
, 
gm_symèb_íåy
 *
èrgë_ﬁd
, gm_symèb_íåy* 
èrgë_√w
) {

271 
gm_ª∂a˚_da_t
 
T
;

272 
T
.
	`ª∂a˚_da
(
èrgë_ﬁd
, 
èrgë_√w
, 
s
);

273 
	}
}

275 
a°_f‹óch
* 
	$¸óã_öô_‹_upd©e
(
a°_id
* 
§c
, 
boﬁ
 
is_nodïr›
, 
gm_symèb_íåy
* 
ﬁd_de°
, gm_symèb_íåy* 
√w_de°
, boﬁ 
is_öô
) {

276 
	`as£π
(
§c
->
	`gëSymInfo
()!=
NULL
);

283 
a°_id
* 
lhs_drivî
 =á°_id::
	`√w_id
(
NULL
, 0, 0);

284 
a°_id
* 
rhs_drivî
 =á°_id::
	`√w_id
(
NULL
, 0, 0);

285 
a°_fõld
* 
lhs
;

286 
a°_fõld
* 
rhs
;

287 i‡(
is_öô
) {

288 
a°_id
* 
lhs_¥›
 = 
√w_de°
->
	`gëId
()->
	`c›y
(
åue
);

289 
a°_id
* 
rhs_¥›
 = 
ﬁd_de°
->
	`gëId
()->
	`c›y
(
åue
);

290 
lhs
 = 
a°_fõld
::
	`√w_fõld
(
lhs_drivî
, 
lhs_¥›
);

291 
rhs
 = 
a°_fõld
::
	`√w_fõld
(
rhs_drivî
, 
rhs_¥›
);

293 
a°_id
* 
lhs_¥›
 = 
ﬁd_de°
->
	`gëId
()->
	`c›y
(
åue
);

294 
a°_id
* 
rhs_¥›
 = 
√w_de°
->
	`gëId
()->
	`c›y
(
åue
);

295 
lhs
 = 
a°_fõld
::
	`√w_fõld
(
lhs_drivî
, 
lhs_¥›
);

296 
rhs
 = 
a°_fõld
::
	`√w_fõld
(
rhs_drivî
, 
rhs_¥›
);

298 
a°_ex¥
* 
rhs_ex¥
 =á°_ex¥::
	`√w_fõld_ex¥
(
rhs
);

299 
a°_assign
* 
a
 =á°_assign::
	`√w_assign_fõld
(
lhs
, 
rhs_ex¥
);

304 c⁄° * 
ôî_«me
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
("i");

305 
a°_id
* 
ô‹
 =á°_id::
	`√w_id
(
ôî_«me
, 0, 0);

306 
ôî_ty≥
 = 
is_nodïr›
 ? 
GMITER_NODE_ALL
 : 
GMITER_EDGE_ALL
;

307 
a°_f‹óch
* 
„
 = 
	`gm_√w_f‹óch_a·î_tc
(
ô‹
, 
§c
, 
a
, 
ôî_ty≥
);

308 
	`as£π
(
ô‹
->
	`gëSymInfo
()!=
NULL
);

309 
dñëe
[] 
ôî_«me
;

314 
lhs_drivî
->
	`£tSymInfo
(
ô‹
->
	`gëSymInfo
());

315 
rhs_drivî
->
	`£tSymInfo
(
ô‹
->
	`gëSymInfo
());

317  
„
;

318 
	}
}

320 
a°_f‹óch
* 
	$¸óã_öôülizî
(
a°_id
* 
§c
, 
boﬁ
 
is_nodïr›
, 
gm_symèb_íåy
* 
ﬁd_de°
, gm_symèb_íåy* 
√w_de°
) {

321  
	`¸óã_öô_‹_upd©e
(
§c
, 
is_nodïr›
, 
ﬁd_de°
, 
√w_de°
, 
åue
);

322 
	}
}

323 
a°_f‹óch
* 
	$¸óã_upd©î
(
a°_id
* 
§c
, 
boﬁ
 
is_nodïr›
, 
gm_symèb_íåy
* 
ﬁd_de°
, gm_symèb_íåy* 
√w_de°
) {

324  
	`¸óã_öô_‹_upd©e
(
§c
, 
is_nodïr›
, 
ﬁd_de°
, 
√w_de°
, 
Ál£
);

325 
	}
}

327 
boﬁ
 
	$check_if_modifõd_ñ£whîe
(
gm_symèb_íåy
* 
e
, 
a°_£¡
* 
my£lf
,á°_£¡* 
£q_lo›
) {

330 i‡(
my£lf
 =
£q_lo›
Ë 
Ál£
;

332 
	`as£π
(
my£lf
->
	`gë_nodëy≥
(Ë!
AST_IF
);

334 
a°_£¡
* 
up
 = (a°_£¡*Ë
my£lf
->
	`gë_∑ª¡
();

335 
	`as£π
(
up
 !
NULL
);

336 
	`as£π
(
up
->
	`is_£¡í˚
());

337 i‡(
up
->
	`gë_nodëy≥
(Ë=
AST_SENTBLOCK
) {

339 
a°_£¡block
* 
sb
 = (a°_£¡block*Ë
up
;

340 
°d
::
li°
<
a°_£¡
*>& 
£¡s
 = 
sb
->
	`gë_£¡s
();

341 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

342 
I
 = 
£¡s
.
	`begö
(); I !£¡s.
	`íd
(); I++) {

343 i‡(*
I
 =
my£lf
) ;

344 i‡(
	`gm_is_modifõd
(*
I
, 
e
)Ë 
åue
;

348  
	`check_if_modifõd_ñ£whîe
(
e
, 
up
, 
£q_lo›
);

350 
	}
}

352 
boﬁ
 
	$check_c⁄dôi⁄Æ_öôülize
(
a°_f‹óch
* 
èrgë_„
, 
gm_symèb_íåy
* 
èrgë_ﬁd
, 
a°_£¡
*& 
£q_lo›
) {

355 i‡(!
	`gm_is_modifõd_Æways_löóæy
(
èrgë_„
, 
èrgë_ﬁd
)Ë 
Ál£
;

358 
£q_lo›
 = 
	`gm_föd_í˛osög_£q_lo›
(
èrgë_„
);

359 i‡(
£q_lo›
 =
NULL
Ë 
Ál£
;

362  !
	`check_if_modifõd_ñ£whîe
(
èrgë_ﬁd
, 
èrgë_„
, 
£q_lo›
);

363 
	}
}

365 
	$add_c⁄dôi⁄Æ_öôülize
(
a°_£¡
* 
£q_lo›
, 
a°_f‹óch
* 
èrgë_„
,á°_f‹óch* 
öô
, 
gm_symèb_íåy
* 
èrgë_ﬁd
,

366 
gm_symèb_íåy
* 
èrgë_√w
) {

368 
	`gm_make_ô_bñ⁄g_to_£¡block
(
£q_lo›
);

373 
a°_£¡block
* 
up
 = 
	`gm_föd_upsc›e
(
èrgë_„
);

374 
gm_symèb
* 
up_symèb
 = 
up
->
	`gë_symèb_fõld
();

375 
a°_£¡block
* 
upup
 = 
	`gm_föd_upsc›e
(
£q_lo›
);

376 
gm_symèb
* 
upup_symèb_f
 = 
upup
->
	`gë_symèb_fõld
();

377 
	`gm_move_symbﬁ_öto
(
èrgë_√w
, 
up_symèb
, 
upup_symèb_f
, 
Ál£
);

389 
gm_symèb
* 
upup_symèb_v
 = 
upup
->
	`gë_symèb_v¨
();

390 c⁄° * 
Êag_«me
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
("is_first");

391 
gm_symèb_íåy
 *
Êag_sym
 = 
	`gm_add_√w_symbﬁ_¥imty≥
(
upup
, 
GMTYPE_BOOL
, (*Ë
Êag_«me
);

392 
a°_id
* 
lhs
 = 
Êag_sym
->
	`gëId
()->
	`c›y
(
åue
);

393 
a°_ex¥
* 
rhs
 =á°_ex¥::
	`√w_bvÆ_ex¥
(
åue
);

394 
a°_assign
* 
a_öô
 =á°_assign::
	`√w_assign_sˇœ
(
lhs
, 
rhs
);

395 
	`gm_ö£π_£¡_begö_of_sb
(
upup
, 
a_öô
, 
Ál£
);

405 
a°_ex¥
* 
c⁄d
 =á°_ex¥::
	`√w_id_ex¥
(
Êag_sym
->
	`gëId
()->
	`c›y
(
åue
));

406 
a°_£¡block
* 
thí_˛au£
 =á°_£¡block::
	`√w_£¡block
();

407 
a°_if
* 
c⁄d_öô
 =á°_if::
	`√w_if
(
c⁄d
, 
thí_˛au£
, 
NULL
);

409 
lhs
 = 
Êag_sym
->
	`gëId
()->
	`c›y
(
åue
);

410 
rhs
 = 
a°_ex¥
::
	`√w_bvÆ_ex¥
(
Ál£
);

411 
a°_assign
* 
a_£t
 =á°_assign::
	`√w_assign_sˇœ
(
lhs
, 
rhs
);

412 
thí_˛au£
->
	`add_£¡
(
a_£t
);

413 
thí_˛au£
->
	`add_£¡
(
öô
);

418 
	`gm_add_£¡_bef‹e
(
èrgë_„
, 
c⁄d_öô
);

421 
	}
}

	@gm_cpp_opt_reduce_field.cc

1 
	~<°dio.h
>

2 
	~<m≠
>

3 
	~<li°
>

4 
	~<Æg‹ôhm
>

6 
	~"gm_backíd_˝p.h
"

7 
	~"gm_îr‹.h
"

8 
	~"gm_ty≥check.h
"

9 
	~"gm_å™sf‹m_hñ≥r.h
"

10 
	~"gm_¨g›ts.h
"

11 
	~"gm_‰⁄ãnd.h
"

12 
	~"gm_öd_›t.h
"

13 
	~"gm_rw_™Æysis.h
"

15 ˛as†
	c›t_fõld_ªdu˘i⁄_t
: 
public
 
gm_≠∂y


17 
¥iv©e
:

18 
°d
::
li°
<
a°_£¡
*> 
èrgës
;

20 
≠∂y_å™sf‹m
(
a°_f‹óch
* 
„
);

22 
boﬁ
 
	$c⁄èös_¨gmömax_assign
(
a°_£¡
* 
£¡
) {

24 
£¡
->
	`gë_nodëy≥
()) {

25 
AST_IF
: {

26 
a°_if
* 
x
 = (a°_if*Ë
£¡
;

27 i‡(
	`c⁄èös_¨gmömax_assign
(
x
->
	`gë_thí
()))

28  
åue
;

29 i‡(
x
->
	`gë_ñ£
(Ë!
NULL
)

30  
	`c⁄èös_¨gmömax_assign
(
x
->
	`gë_ñ£
());

32  
Ál£
;

34 
AST_FOREACH
:

35  
	`c⁄èös_¨gmömax_assign
(((
a°_f‹óch
*Ë
£¡
)->
	`gë_body
());

36 
AST_WHILE
:

37  
	`c⁄èös_¨gmömax_assign
(((
a°_whûe
*Ë
£¡
)->
	`gë_body
());

38 
AST_ASSIGN
:

39  ((
a°_assign
*Ë
£¡
)->
	`is_¨gmömax_assign
();

40 
AST_SENTBLOCK
: {

41 
a°_£¡block
* 
block
 = (a°_£¡block*Ë
£¡
;

42 
°d
::
li°
<
a°_£¡
*> 
°©emíts
 = 
block
->
	`gë_£¡s
();

43 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

44 
I
 = 
°©emíts
.
	`begö
(); I !°©emíts.
	`íd
(); I++) {

45 i‡(
	`c⁄èös_¨gmömax_assign
(*
I
)Ë 
åue
;

47  
Ál£
;

50  
Ál£
;

54 
public
:

55 
boﬁ
 
	$checkBody
(
a°_£¡
* 
body
, 
a°_id
* 
ôî©‹
) {

57 i‡(
body
->
	`gë_nodëy≥
(Ë!
AST_SENTBLOCK
Ë 
	`checkAssign
(body, 
ôî©‹
);

59 
a°_£¡block
* 
£¡block
 = (a°_£¡block*Ë
body
;

60 
°d
::
li°
<
a°_£¡
*> 
°©emíts
 = 
£¡block
->
	`gë_£¡s
();

61 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

62 
I
 = 
°©emíts
.
	`begö
(); I !°©emíts.
	`íd
(); I++) {

63 
nodeTy≥
 = (*
I
)->
	`gë_nodëy≥
();

64 
boﬁ
 
check
;

65 
nodeTy≥
) {

66 
AST_ASSIGN
:

67 
check
 = 
	`checkAssign
(*
I
, 
ôî©‹
);

69 
AST_IF
: {

70 
a°_if
* 
x
 = (a°_if*Ë(*
I
);

71 
check
 = 
	`checkBody
(
x
->
	`gë_thí
(), 
ôî©‹
);

72 i‡(
x
->
	`gë_ñ£
(Ë!
NULL
Ë
check
 |
	`checkBody
(x->gë_ñ£(), 
ôî©‹
);

75 
AST_SENTBLOCK
:

76 
check
 = 
	`checkBody
(*
I
, 
ôî©‹
);

78 
AST_WHILE
: {

79 
a°_whûe
* 
x
 = (a°_whûe*Ë(*
I
);

80 
check
 = 
	`checkBody
(
x
->
	`gë_body
(), 
ôî©‹
);

83 
AST_FOREACH
: {

84 
a°_f‹óch
* 
x
 = (a°_f‹óch*Ë(*
I
);

85 
check
 = 
	`checkBody
(
x
->
	`gë_body
(), 
ôî©‹
);

89 
check
 = 
Ál£
;

92 i‡(
check
Ë 
åue
;

94  
Ál£
;

95 
	}
}

97 
boﬁ
 
	$checkAssign
(
a°_£¡
* 
°©emít
, 
a°_id
* 
ôî©‹
) {

99 i‡(
°©emít
->
	`gë_nodëy≥
(Ë!
AST_ASSIGN
Ë 
Ál£
;

101 
a°_assign
* 
assign
 = (a°_assign*Ë
°©emít
;

102 i‡(
assign
->
	`is_¨gmömax_assign
()Ë 
Ál£
;

104 i‡(!
assign
->
	`is_èrgë_fõld
()Ë 
Ál£
;

106 i‡(!
assign
->
	`is_ªdu˚_assign
()Ë 
Ál£
;

108 
a°_fõld
* 
fõld
 = 
assign
->
	`gë_lhs_fõld
();

109 
a°_id
* 
fú°
 = 
fõld
->
	`gë_fú°
();

111  !
	`°rcmp
(
fú°
->
	`gë_gí«me
(), 
ôî©‹
->get_genname());

112 
	}
}

115 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
£¡
) {

118 i‡(
£¡
->
	`gë_nodëy≥
(Ë!
AST_FOREACH
Ë 
åue
;

119 i‡(
	`c⁄èös_¨gmömax_assign
(
£¡
)) {

120  
åue
;

123 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
£¡
;

126 
a°_id
* 
ôî©‹
 = 
„
->
	`gë_ôî©‹
();

127 i‡(
ôî©‹
->
	`gëTy≥Summ¨y
(Ë!
GMTYPE_NODE_ITERATOR
Ë 
åue
;

129 i‡(
	`checkBody
(
„
->
	`gë_body
(), 
ôî©‹
)) {

130 
èrgës
.
	`push_back
(
„
);

132  
åue
;

134  
åue
;

135 
	}
}

138 
	$å™sf‹m_èrgës
() {

139 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

140 
I
 = 
èrgës
.
	`begö
(); I !èrgës.
	`íd
(); I++) {

141 
a°_£¡
* 
s
 = *
I
;

142 
	`as£π
(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
);

143 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

144 
	`≠∂y_å™sf‹m
(
„
);

146 
	}
}

148 
boﬁ
 
	$has_èrgës
() {

149  
èrgës
.
	`size
() > 0;

150 
	}
}

154 ˛as†
	cch™ge_ªdu˘i⁄_fõld
: 
public
 
gm_≠∂y


157 
¥iv©e
:

158 c⁄° * 
ôî©‹Name
;

159 
	m°d
::
m≠
<
°d
::
°rög
, 
	ma°_id
*>* 
	mfõldToNewV¨
;

161 
	m°d
::
li°
<
a°_assign
*> 
to_n‹mÆs
;

162 
	m°d
::
li°
<
a°_assign
*>* 
ign‹e
;

164 
	mpublic
:

165 
ch™ge_ªdu˘i⁄_fõld
(
°d
::
m≠
<°d::
°rög
, 
a°_id
*>* 
fõldToNewV¨_
, c⁄° *
ôî_«me
, std::
li°
<
a°_assign
*>* 
ign‹eLi°
) :

166 
fõldToNewV¨
(
fõldToNewV¨_
), 
ôî©‹Name
(
ôî_«me
), 
	$ign‹e
(
ign‹eLi°
) {

169 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

170 i‡(
s
->
	`gë_nodëy≥
(Ë!
AST_ASSIGN
Ë 
åue
;

172 
a°_assign
* 
a
 = (a°_assign*Ë
s
;

173 i‡(!
a
->
	`is_ªdu˚_assign
()Ë 
åue
;

174 i‡(!
a
->
	`is_èrgë_fõld
()Ë 
åue
;

175 i‡(
	`°rcmp
(
ôî©‹Name
, 
a
->
	`gë_lhs_fõld
()->
	`gë_fú°
()->
	`gë_gí«me
())Ë 
åue
;

177 
a°_id
* 
lhs
 = 
a
->
	`gë_lhs_fõld
()->
	`gë_£c⁄d
();

179 i‡(
°d
::
	`föd
(
ign‹e
->
	`begö
(), ign‹e->
	`íd
(), 
a
) != ignore->end()) {

180  
åue
;

183 
°d
::
m≠
<°d::
°rög
, 
a°_id
*>::
ôî©‹
 
I
;

184 
I
 = 
fõldToNewV¨
->
	`föd
(
lhs
->
	`gë_gí«me
());

185 i‡(
I
 =
fõldToNewV¨
->
	`íd
()Ë 
åue
;

188 
a
->
	`£t_lhs_sˇœ
(
I
->
£c⁄d
);

190 
a°_id
* 
√w_lhs
 = 
I
->
£c⁄d
->
	`c›y
(
åue
);

191 
a
->
	`£t_lhs_sˇœ
(
√w_lhs
);

193 
	`as£π
(!
a
->
	`is_¨gmömax_assign
());

196 
to_n‹mÆs
.
	`push_back
(
a
);

198  
åue
;

199 
	}
}

201 
	$po°_¥o˚ss
() {

202 
°d
::
li°
<
a°_assign
*>::
ôî©‹
 
I
;

203 
I
 = 
to_n‹mÆs
.
	`begö
(); I !to_n‹mÆs.
	`íd
(); I++) {

204 
a°_assign
* 
a
 = *
I
;

205 i‡(
°d
::
	`föd
(
ign‹e
->
	`begö
(), ign‹e->
	`íd
(), 
a
) != ignore->end()) {

208 
	`gm_make_n‹mÆ_assign
(
a
);

209 
	`gm_make_ô_bñ⁄g_to_£¡block
(
a
);

211 
	}
}

215 
födAssignsToRïœ˚
(
a°_£¡
* 
£¡
, 
°d
::
li°
<
a°_assign
*>& 
assigns
, c⁄° * 
ôîName
) {

217 
	gnodeTy≥
 = 
£¡
->
gë_nodëy≥
();

219 
	gnodeTy≥
) {

220 
	gAST_SENTBLOCK
: {

221 
°d
::
li°
<
a°_£¡
*> 
°©emíts
 = ((
a°_£¡block
*Ë
£¡
)->
gë_£¡s
();

222 
	g°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

223 
	gI
 = 
°©emíts
.
begö
(); I !°©emíts.
íd
(); I++) {

224 
födAssignsToRïœ˚
(*
I
, 
assigns
, 
ôîName
);

228 
	gAST_ASSIGN
: {

229 
a°_assign
* 
assign
 = (a°_assign*Ë
£¡
;

230 i‡(
	gassign
->
is_¨gmömax_assign
()) ;

231 i‡(!
	gassign
->
is_èrgë_fõld
()) ;

232 i‡(!
	gassign
->
is_ªdu˚_assign
()) ;

233 
a°_fõld
* 
	gfõld
 = 
assign
->
gë_lhs_fõld
();

234 
a°_id
* 
	gfú°
 = 
fõld
->
gë_fú°
();

235 i‡(!
°rcmp
(
fú°
->
gë_gí«me
(), 
ôîName
)) {

236 
	gassigns
.
push_back
(
assign
);

240 
	gAST_IF
: {

241 
a°_if
* 
x
 = (a°_if*Ë
£¡
;

242 
födAssignsToRïœ˚
(
x
->
gë_thí
(), 
assigns
, 
ôîName
);

243 i‡(
	gx
->
gë_ñ£
(Ë!
NULL
Ë
födAssignsToRïœ˚
(
x
->gë_ñ£(), 
assigns
, 
ôîName
);

246 
	gAST_WHILE
: {

247 
a°_whûe
* 
x
 = (a°_whûe*Ë
£¡
;

248 
födAssignsToRïœ˚
(
x
->
gë_body
(), 
assigns
, 
ôîName
);

251 
	gAST_FOREACH
: {

252 
a°_f‹óch
* 
x
 = (a°_f‹óch*Ë
£¡
;

253 
födAssignsToRïœ˚
(
x
->
gë_body
(), 
assigns
, 
ôîName
);

260 
	g›t_fõld_ªdu˘i⁄_t
::
	$≠∂y_å™sf‹m
(
a°_f‹óch
* 
„
) {

263 
	`gm_make_ô_bñ⁄g_to_£¡block_√°ed
(
„
);

264 
	`as£π
(
„
->
	`gë_∑ª¡
()->
	`gë_nodëy≥
(Ë=
AST_SENTBLOCK
);

265 
a°_£¡block
* 
£
 = (a°_£¡block*Ë
„
->
	`gë_∑ª¡
();

268 i‡(
£
->
	`gë_∑ª¡
()->
	`gë_nodëy≥
(Ë!
AST_SENTBLOCK
) {

269 
£
->
	`add_öfo
(
LABEL_PAR_SCOPE
, 
√w
 
	`a°_exåa_öfo
(
åue
));

273 
a°_id
* 
ôî©‹
 = 
„
->
	`gë_ôî©‹
();

274 c⁄° * 
ôî©‹Name
 = 
ôî©‹
->
	`gë_gí«me
();

276 
°d
::
li°
<
a°_assign
*> 
èrgës
;

277 
	`födAssignsToRïœ˚
(
„
->
	`gë_body
(), 
èrgës
, 
ôî©‹Name
);

278 i‡(
èrgës
.
	`size
() == 0) ;

280 
°d
::
li°
<
a°_assign
*> 
ign‹e
;

283 
°d
::
m≠
<°d::
°rög
, 
a°_id
*> 
fõldToNewV¨
;

284 
°d
::
li°
<
a°_assign
*>::
ôî©‹
 
II
;

285 
II
 = 
èrgës
.
	`begö
(); II !èrgës.
	`íd
(); II++) {

286 
a°_assign
* 
assign
 = *
II
;

288 
°d
::
°rög
 
	`fõldName
(
assign
->
	`gë_lhs_fõld
()->
	`gë_£c⁄d
()->
	`gë_gí«me
());

289 i‡(
fõldToNewV¨
.
	`föd
(
fõldName
Ë=fõldToNewV¨.
	`íd
()) {

290 
tmp
[128];

291 
	`•rötf
(
tmp
, "%s_%s", 
fõldName
.
	`c_°r
(), 
ôî©‹Name
);

292 c⁄° * 
√wName
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
(
tmp
, "_prv");

294 
gm_symèb_íåy
* 
_thªad_loˇl
;

295 
a°_fõld
* 
fõld
 = 
assign
->
	`gë_lhs_fõld
();

297 
a°_£¡block
* 
body
 = (a°_£¡block*Ë
„
->
	`gë_body
();

298 
e_ty≥
 = 
fõld
->
	`gëT¨gëTy≥Summ¨y
();

299 i‡(
	`gm_is_¥im_ty≥
(
e_ty≥
)) {

300 
_thªad_loˇl
 = 
	`gm_add_√w_symbﬁ_¥imty≥
(
body
, 
e_ty≥
, (*Ë
√wName
);

303 
gm_symèb_íåy
* 
èrgëGøph
 = 
fõld
->
	`gëT¨gëTy≥Info
()->
	`gë_èrgë_gøph_sym
();

304 i‡(
	`gm_is_node_com∑tibÀ_ty≥
(
e_ty≥
)) {

305 
_thªad_loˇl
 = 
	`gm_add_√w_symbﬁ_nodìdge_ty≥
(
body
, 
GMTYPE_NODE
, 
èrgëGøph
, (*Ë
√wName
);

306 } i‡(
	`gm_is_edge_com∑tibÀ_ty≥
(
e_ty≥
)) {

307 
_thªad_loˇl
 = 
	`gm_add_√w_symbﬁ_nodìdge_ty≥
(
body
, 
GMTYPE_EDGE
, 
èrgëGøph
, (*Ë
√wName
);

309 
	`as£π
(
Ál£
);

313 
ªdu˚_ty≥
 = 
assign
->
	`gë_ªdu˚_ty≥
();

314 
ty≥
 = 
fõld
->
	`gëT¨gëTy≥Summ¨y
();

315 
a°_ex¥
* 
öô_vÆ
;

317 i‡((
ªdu˚_ty≥
 =
GMREDUCE_MIN
Ë|| (ªdu˚_ty≥ =
GMREDUCE_MAX
)) {

318 
a°_ex¥
* 
ex¥
 = 
assign
->
	`gë_rhs
();

319 i‡(
ex¥
->
	`is_id
()) {

320 
öô_vÆ
 = 
a°_ex¥
::
	`√w_id_ex¥
(
ex¥
->
	`gë_id
());

322 
öô_vÆ
 = 
	`gm_√w_bŸtom_symbﬁ
(
ªdu˚_ty≥
, 
ty≥
);

325 
öô_vÆ
 = 
	`gm_√w_bŸtom_symbﬁ
(
ªdu˚_ty≥
, 
ty≥
);

328 
a°_assign
* 
öô_a
 =á°_assign::
	`√w_assign_sˇœ
(
_thªad_loˇl
->
	`gëId
()->
	`c›y
(
åue
), 
öô_vÆ
, 
GMASSIGN_NORMAL
);

329 
	`gm_ö£π_£¡_body_begö
(
„
, 
öô_a
, 
Ál£
);

331 
fõldToNewV¨
[
fõldName
] = 
öô_a
->
	`gë_lhs_sˇœ
();

334 
a°_ex¥
* 
ex¥
 =á°_ex¥::
	`√w_id_ex¥
(
_thªad_loˇl
->
	`gëId
()->
	`c›y
(
åue
));

335 
a°_assign
* 
backAssign
 =á°_assign::
	`√w_assign_fõld
(
fõld
->
	`c›y
(
åue
), 
ex¥
, 
GMASSIGN_REDUCE
, 
ôî©‹
->c›y—rue), 
ªdu˚_ty≥
);

336 
backAssign
->
	`£t_undî_∑øŒñ_executi⁄
(
åue
);

337 
	`gm_ö£π_£¡_body_íd
(
„
, 
backAssign
, 
åue
);

339 
ign‹e
.
	`push_back
(
backAssign
);

346 
ch™ge_ªdu˘i⁄_fõld
 
	`T
(&
fõldToNewV¨
, 
ôî©‹Name
, &
ign‹e
);

347 
	`gm_åavî£_£¡s
(
„
->
	`gë_body
(), &
T
);

348 
T
.
	`po°_¥o˚ss
();

349 
	}
}

351 
	~"gm_backíd_˝p_›t_°ïs.h
"

352 
	ggm_˝p_›t_ªdu˚_fõld
::
	$¥o˚ss
(
a°_¥ocdef
 *
p
) {

353 
›t_fõld_ªdu˘i⁄_t
 
T
;

354 
	`gm_ªdo_rw_™Æysis
(
p
->
	`gë_body
());

355 
	`gm_åavî£_£¡s
(
p
->
	`gë_body
(), &
T
);

356 i‡(
T
.
	`has_èrgës
()) {

357 
T
.
	`å™sf‹m_èrgës
();

360 
	`gm_ªdo_rw_™Æysis
(
p
->
	`gë_body
());

362 
	`£t_af„˘ed
(
åue
);

364 
	}
}

	@gm_cpp_opt_reduce_scalar.cc

1 
	~<°dio.h
>

2 
	~<m≠
>

3 
	~"gm_backíd_˝p.h
"

4 
	~"gm_îr‹.h
"

5 
	~"gm_ty≥check.h
"

6 
	~"gm_å™sf‹m_hñ≥r.h
"

7 
	~"gm_¨g›ts.h
"

8 
	~"gm_‰⁄ãnd.h
"

9 
	~"gm_öd_›t.h
"

10 
	~"gm_rw_™Æysis.h
"

28 ˛as†
	c›t_sˇœr_ªdu˘i⁄_t
 : 
public
 
gm_≠∂y


30 
public
:

32 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
£¡
) {

36 i‡(
£¡
->
	`gë_nodëy≥
(Ë!
AST_FOREACH
Ë 
åue
;

38 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
£¡
;

39 
gm_rwöfo_m≠
& 
B
 = 
	`gm_gë_bound_£t_öfo
(
„
)->
bound_£t
;

40 i‡(
B
.
	`size
(Ë=0Ë 
åue
;

42 
	`as£π
(
„
->
	`is_∑øŒñ
());

44 
boﬁ
 
has_sˇœr_ªdu˘i⁄
 = 
Ál£
;

45 
gm_rwöfo_m≠
::
ôî©‹
 
I
;

46 
I
 = 
B
.
	`begö
(); I !B.
	`íd
(); I++) {

47 
gm_symèb_íåy
* 
e
 = 
I
->
fú°
;

48 i‡(
e
->
	`gëTy≥
()->
	`is_¥›îty
()) ;

50 
has_sˇœr_ªdu˘i⁄
 = 
åue
;

55 i‡(
has_sˇœr_ªdu˘i⁄
Ë
_èrgës
.
	`push_back
(
„
);

57  
åue
;

61 
	$å™sf‹m_èrgës
() {

62 
°d
::
li°
<
a°_£¡
*>::
ôî©‹
 
I
;

63 
I
 = 
_èrgës
.
	`begö
(); I !_èrgës.
	`íd
(); I++) {

64 
a°_£¡
* 
s
 = *
I
;

65 
	`as£π
(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
);

66 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

67 
	`≠∂y_å™sf‹m
(
„
);

69 
	}
}

71 
boﬁ
 
	$has_èrgës
() {

72  
_èrgës
.
	`size
() > 0;

73 
	}
}

75 
	g¥iv©e
:

76 
°d
::
li°
<
a°_£¡
*> 
_èrgës
;

77 
≠∂y_å™sf‹m
(
a°_f‹óch
* 
„
);

81 ˛as†
	cch™ge_ªdu˘i⁄_t
 : 
public
 
gm_≠∂y


83 
public
:

84 
£t_m≠
(
°d
::
m≠
<
gm_symèb_íåy
*, gm_symèb_íåy*>*
m
) {

85 
	msymbﬁ_m≠
 = 
m
;

87 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

88 i‡(
s
->
	`gë_nodëy≥
(Ë!
AST_ASSIGN
Ë 
åue
;

89 
a°_assign
* 
a
 = (a°_assign*Ë
s
;

90 i‡(!
a
->
	`is_ªdu˚_assign
()Ë 
åue
;

91 i‡(!
a
->
	`is_èrgë_sˇœr
()Ë 
åue
;

93 
a°_id
* 
lhs
 = 
a
->
	`gë_lhs_sˇœ
();

95 
°d
::
m≠
<
gm_symèb_íåy
*, gm_symèb_íåy*>::
ôî©‹
 
I
;

96 
I
 = 
symbﬁ_m≠
->
	`föd
(
lhs
->
	`gëSymInfo
());

97 i‡(
I
 =
symbﬁ_m≠
->
	`íd
())

98  
åue
;

100 
gm_symèb_íåy
* 
√w_èrgë
 = 
I
->
£c⁄d
;

103 
lhs
->
	`£tSymInfo
(
√w_èrgë
);

104 i‡(
a
->
	`is_¨gmömax_assign
()) {

105 
°d
::
li°
<
a°_node
*>& 
L_ﬁd
 = 
a
->
	`gë_lhs_li°
();

106 
°d
::
li°
<
a°_node
*>::
ôî©‹
 
I
;

107 
I
 = 
L_ﬁd
.
	`begö
(); I !L_ﬁd.
	`íd
(); I++) {

108 
a°_node
* 
n
 = *
I
;

109 
	`as£π
(
n
->
	`gë_nodëy≥
(Ë=
AST_ID
);

110 
a°_id
* 
id
 = (a°_id*Ë
n
;

111 
gm_symèb_íåy
* 
ﬁd_e
 = 
id
->
	`gëSymInfo
();

112 
gm_symèb_íåy
* 
√w_e
 = (*
symbﬁ_m≠
)[
ﬁd_e
];

113 
	`as£π
(
√w_e
!=
NULL
);

114 
id
->
	`£tSymInfo
(
√w_e
);

119 
to_n‹mÆs
.
	`push_back
(
a
);

121  
åue
;

122 
	}
}

124 
	$po°_¥o˚ss
() {

125 
°d
::
li°
<
a°_assign
*>::
ôî©‹
 
I
;

126 
I
 = 
to_n‹mÆs
.
	`begö
(); I !to_n‹mÆs.
	`íd
(); I++) {

127 
a°_assign
* 
a
 = *
I
;

128 
	`gm_make_ô_bñ⁄g_to_£¡block
(
a
);

129 
	`gm_make_n‹mÆ_assign
(
a
);

131 
	}
}

133 
	g¥iv©e
:

134 
°d
::
m≠
<
gm_symèb_íåy
*, 
	ggm_symèb_íåy
*>* 
	gsymbﬁ_m≠
;

135 
	g°d
::
li°
<
a°_assign
*> 
to_n‹mÆs
;

141 
	g›t_sˇœr_ªdu˘i⁄_t
::
	$≠∂y_å™sf‹m
(
a°_f‹óch
* 
„
) {

142 
°d
::
m≠
<
gm_symèb_íåy
*, gm_symèb_íåy*> 
symbﬁ_m≠
;

143 
°d
::
li°
<
gm_symèb_íåy
*> 
ﬁd_s
;

144 
°d
::
li°
<
gm_symèb_íåy
*> 
√w_s
;

145 
°d
::
li°
<> 
ªdu˚_›
;

146 
°d
::
m≠
<
gm_symèb_íåy
*, std::
li°
<gm_symèb_íåy*> > 
ﬁd_suµÀ_m≠
;

147 
°d
::
m≠
<
gm_symèb_íåy
*, std::
li°
<gm_symèb_íåy*> > 
√w_suµÀ_m≠
;

148 
°d
::
li°
<°d::li°<
gm_symèb_íåy
*> > 
ﬁd_suµÀ
;

149 
°d
::
li°
<°d::li°<
gm_symèb_íåy
*> > 
√w_suµÀ
;

152 
	`gm_make_ô_bñ⁄g_to_£¡block_√°ed
(
„
);

153 
	`as£π
(
„
->
	`gë_∑ª¡
()->
	`gë_nodëy≥
(Ë=
AST_SENTBLOCK
);

154 
a°_£¡block
* 
£
 = (a°_£¡block*Ë
„
->
	`gë_∑ª¡
();

157 
£
->
	`add_öfo
(
LABEL_PAR_SCOPE
, 
√w
 
	`a°_exåa_öfo
(
åue
));

160 
gm_rwöfo_m≠
& 
B
 = 
	`gm_gë_bound_£t_öfo
(
„
)->
bound_£t
;

161 
gm_rwöfo_m≠
::
ôî©‹
 
I
;

162 
I
 = 
B
.
	`begö
(); I !B.
	`íd
(); I++) {

163 
gm_symèb_íåy
* 
e
 = 
I
->
fú°
;

164 i‡(
e
->
	`gëTy≥
()->
	`is_¥›îty
()) ;

166 
ªdu˚_ty≥
 = 
I
->
£c⁄d
->
	`‰⁄t
()->
ªdu˚_›
;

167 
e_ty≥
 = 
e
->
	`gëTy≥
()->
	`gëTy≥Summ¨y
();

168 
boﬁ
 
is_suµÀ
 = 
I
->
£c⁄d
->
	`‰⁄t
()->
is_suµÀmít
;

169 
gm_symèb_íåy
* 
‹g_èrgë
 = 
I
->
£c⁄d
->
	`‰⁄t
()->
‹g_lhs
;

171 i‡(!
	`gm_is_¥im_ty≥
(
e_ty≥
)) {

172 
	`as£π
(
e
->
	`gëTy≥
()->
	`is_node_com∑tibÀ
(Ë||É->gëTy≥()->
	`is_edge_com∑tibÀ
());

173 
	`as£π
((
ªdu˚_ty≥
 =
GMREDUCE_MAX
Ë|| (ªdu˚_ty≥ =
GMREDUCE_MIN
));

175 c⁄° * 
√w_«me
 = 
FE
.
	`voˇ_ãmp_«me_™d_add
(
e
->
	`gëId
()->
	`gë_gí«me
(), "_prv");

178 
gm_symèb_íåy
* 
_thªad_loˇl
;

179 i‡(
	`gm_is_¥im_ty≥
(
e_ty≥
)) {

180 
_thªad_loˇl
 = 
	`gm_add_√w_symbﬁ_¥imty≥
(
£
, 
e_ty≥
, (*Ë
√w_«me
);

181 } i‡(
	`gm_is_node_com∑tibÀ_ty≥
(
e_ty≥
)) {

182 
_thªad_loˇl
 = 
	`gm_add_√w_symbﬁ_nodìdge_ty≥
(
£
, 
GMTYPE_NODE
, 
e
->
	`gëTy≥
()->
	`gë_èrgë_gøph_sym
(), (*Ë
√w_«me
);

183 } i‡(
	`gm_is_edge_com∑tibÀ_ty≥
(
e_ty≥
)) {

184 
_thªad_loˇl
 = 
	`gm_add_√w_symbﬁ_nodìdge_ty≥
(
£
, 
GMTYPE_EDGE
, 
e
->
	`gëTy≥
()->
	`gë_èrgë_gøph_sym
(), (*Ë
√w_«me
);

186 
	`as£π
(
Ál£
);

189 
	`as£π
(
symbﬁ_m≠
.
	`föd
(
e
Ë=symbﬁ_m≠.
	`íd
());

192 
symbﬁ_m≠
[
e
] = 
_thªad_loˇl
;

194 i‡(
is_suµÀ
) {

195 
°d
::
li°
<
gm_symèb_íåy
*> & 
L1
 = 
ﬁd_suµÀ_m≠
[
‹g_èrgë
];

196 
°d
::
li°
<
gm_symèb_íåy
*> & 
L2
 = 
√w_suµÀ_m≠
[
‹g_èrgë
];

197 
L1
.
	`push_back
(
e
);

198 
L2
.
	`push_back
(
_thªad_loˇl
);

202 
	`as£π
(
	`gm_is_°ri˘_ªdu˚_›
(
ªdu˚_ty≥
));

203 
ﬁd_s
.
	`push_back
(
e
);

204 
√w_s
.
	`push_back
(
_thªad_loˇl
);

205 
ªdu˚_›
.
	`push_back
(
ªdu˚_ty≥
);

209 i‡(!
is_suµÀ
) {

210 
ex¥_ty≥
 = 
e
->
	`gëTy≥
()->
	`gëTy≥Summ¨y
();

211 
a°_ex¥
* 
öô_vÆ
;

212 i‡((
ªdu˚_ty≥
 =
GMREDUCE_MIN
Ë|| (ªdu˚_ty≥ =
GMREDUCE_MAX
)) {

213 
öô_vÆ
 = 
a°_ex¥
::
	`√w_id_ex¥
(
e
->
	`gëId
()->
	`c›y
(
åue
));

215 
öô_vÆ
 = 
	`gm_√w_bŸtom_symbﬁ
(
ªdu˚_ty≥
, 
ex¥_ty≥
);

217 
a°_assign
* 
öô_a
 =á°_assign::
	`√w_assign_sˇœ
(
_thªad_loˇl
->
	`gëId
()->
	`c›y
(
åue
), 
öô_vÆ
, 
GMASSIGN_NORMAL
);

219 
	`gm_add_£¡_bef‹e
(
„
, 
öô_a
);

222 
dñëe
[] 
√w_«me
;

225 
°d
::
li°
<
gm_symèb_íåy
*>::
ôî©‹
 
J
;

226 
J
 = 
ﬁd_s
.
	`begö
(); J !ﬁd_s.
	`íd
(); J++) {

227 
gm_symèb_íåy
* 
e
 = *
J
;

228 i‡(
ﬁd_suµÀ_m≠
.
	`föd
(
e
Ë=ﬁd_suµÀ_m≠.
	`íd
()) {

229 
°d
::
li°
<
gm_symèb_íåy
*> 
L
;

230 
ﬁd_suµÀ
.
	`push_back
(
L
);

231 
√w_suµÀ
.
	`push_back
(
L
);

234 
ﬁd_suµÀ
.
	`push_back
(
ﬁd_suµÀ_m≠
[
e
]);

235 
√w_suµÀ
.
	`push_back
(
√w_suµÀ_m≠
[
e
]);

245 
ch™ge_ªdu˘i⁄_t
 
T
;

246 
T
.
	`£t_m≠
(&
symbﬁ_m≠
);

247 
	`gm_åavî£_£¡s
(
„
->
	`gë_body
(), &
T
);

248 
T
.
	`po°_¥o˚ss
();

253 
n›_ªdu˚_sˇœr
* 
N
 = 
√w
 
	`n›_ªdu˚_sˇœr
();

254 
N
->
	`£t_symbﬁs
(
ﬁd_s
, 
√w_s
, 
ªdu˚_›
, 
ﬁd_suµÀ
, 
√w_suµÀ
);

255 
	`gm_ö£π_£¡_íd_of_sb
(
£
, 
N
, 
Ál£
);

257 
	}
}

259 
	gn›_ªdu˚_sˇœr
::
£t_symbﬁs
(
°d
::
li°
<
gm_symèb_íåy
*>& 
O
,

260 
°d
::
li°
<
gm_symèb_íåy
*>& 
N
,

261 
°d
::
li°
<>& 
R
, std::li°<°d::li°<
gm_symèb_íåy
*> >& 
O_S
,

262 
°d
::
li°
<°d::li°<
gm_symèb_íåy
*> >& 
N_S
) {

264 
ﬁd_s
 = 
O
;

265 
	g√w_s
 = 
N
;

266 
	gªdu˚_›
 = 
R
;

267 
	gﬁd_suµÀ
 = 
O_S
;

268 
	g√w_suµÀ
 = 
N_S
;

271 
boﬁ
 
	gn›_ªdu˚_sˇœr
::
	$do_rw_™Æysis
() {

273 
gm_rwöfo_£ts
* 
£ts
 = 
	`gë_rwöfo_£ts
(
this
);

274 
gm_rwöfo_m≠
& 
R
 = 
£ts
->
ªad_£t
;

275 
gm_rwöfo_m≠
& 
W
 = 
£ts
->
wrôe_£t
;

278 
°d
::
li°
<
gm_symèb_íåy
*>::
ôî©‹
 
I
;

279 
I
 = 
ﬁd_s
.
	`begö
(); I !ﬁd_s.
	`íd
(); I++) {

280 
gm_rwöfo
* 
r
 = gm_rwöfo::
	`√w_sˇœ_ö°
((*
I
)->
	`gëId
());

281 
	`gm_add_rwöfo_to_£t
(
R
, *
I
, 
r
);

285 
I
 = 
√w_s
.
	`begö
(); I !√w_s.
	`íd
(); I++) {

286 
gm_rwöfo
* 
w
 = gm_rwöfo::
	`√w_sˇœ_ö°
((*
I
)->
	`gëId
());

287 
	`gm_add_rwöfo_to_£t
(
W
, *
I
, 
w
);

291 
°d
::
li°
<°d::li°<
gm_symèb_íåy
*> >::
ôî©‹
 
II
;

292 
II
 = 
ﬁd_suµÀ
.
	`begö
(); II !ﬁd_suµÀ.
	`íd
(); II++) {

293 
°d
::
li°
<
gm_symèb_íåy
*>& 
L
 = *
II
;

294 
I
 = 
L
.
	`begö
(); I !L.
	`íd
(); I++) {

295 
gm_rwöfo
* 
r
 = gm_rwöfo::
	`√w_sˇœ_ö°
((*
I
)->
	`gëId
());

296 
	`gm_add_rwöfo_to_£t
(
R
, *
I
, 
r
);

299 
II
 = 
√w_suµÀ
.
	`begö
(); II !√w_suµÀ.
	`íd
(); II++) {

300 
°d
::
li°
<
gm_symèb_íåy
*>& 
L
 = *
II
;

301 
I
 = 
L
.
	`begö
(); I !L.
	`íd
(); I++) {

302 
gm_rwöfo
* 
w
 = gm_rwöfo::
	`√w_sˇœ_ö°
((*
I
)->
	`gëId
());

303 
	`gm_add_rwöfo_to_£t
(
W
, *
I
, 
w
);

307  
åue
;

308 
	}
}

310 
	gn›_ªdu˚_sˇœr
::
	$gíî©e
(
gm_˝p_gí
* 
gí
) {

311 
°d
::
li°
<
gm_symèb_íåy
*>::
ôî©‹
 
I1
;

312 
°d
::
li°
<
gm_symèb_íåy
*>::
ôî©‹
 
I2
;

313 
°d
::
li°
<>::
ôî©‹
 
I3
;

314 
°d
::
li°
<°d::li°<
gm_symèb_íåy
*> >::
ôî©‹
 
I4
;

315 
°d
::
li°
<°d::li°<
gm_symèb_íåy
*> >::
ôî©‹
 
I5
;

316 
I1
 = 
ﬁd_s
.
	`begö
();

317 
I2
 = 
√w_s
.
	`begö
();

318 
I3
 = 
ªdu˚_›
.
	`begö
();

319 
I4
 = 
ﬁd_suµÀ
.
	`begö
();

320 
I5
 = 
√w_suµÀ
.
	`begö
();

321 ; 
I1
 !
ﬁd_s
.
	`íd
(); I1++, 
I2
++, 
I3
++) {

322 
gm_symèb_íåy
* 
ﬁd_sym
 = *
I1
;

323 
gm_symèb_íåy
* 
√w_sym
 = *
I2
;

324 
r_ty≥
 = *
I3
;

325 
°d
::
li°
<
gm_symèb_íåy
*>& 
OLD_LIST
 = *
I4
;

326 
°d
::
li°
<
gm_symèb_íåy
*>& 
NEW_LIST
 = *
I5
;

328 
a°_id
* 
lhs
 = 
ﬁd_sym
->
	`gëId
()->
	`c›y
(
åue
);

329 
a°_id
* 
rhs_s
 = 
√w_sym
->
	`gëId
()->
	`c›y
(
åue
);

330 
a°_ex¥
* 
rhs
 =á°_ex¥::
	`√w_id_ex¥
(
rhs_s
);

332 
a°_assign
* 
√w_assign
 =á°_assign::
	`√w_assign_sˇœ
(
lhs
, 
rhs
, 
GMASSIGN_REDUCE
, 
NULL
, 
r_ty≥
);

334 i‡(
OLD_LIST
.
	`size
() > 0) {

335 
	`as£π
(
OLD_LIST
.
	`size
(Ë=
NEW_LIST
.size());

336 
√w_assign
->
	`£t_¨gmömax_assign
(
åue
);

337 
°d
::
li°
<
gm_symèb_íåy
*>::
ôî©‹
 
J1
 = 
OLD_LIST
.
	`begö
();

338 
°d
::
li°
<
gm_symèb_íåy
*>::
ôî©‹
 
J2
 = 
NEW_LIST
.
	`begö
();

339 ; 
J1
 !
OLD_LIST
.
	`íd
(); J1++, 
J2
++) {

340 
gm_symèb_íåy
* 
lhs_sym
 = *
J1
;

341 
gm_symèb_íåy
* 
rhs_sym
 = *
J2
;

342 
	`as£π
(
lhs_sym
!=
NULL
);

343 
	`as£π
(
rhs_sym
!=
NULL
);

344 
a°_id
* 
lhs
 = 
lhs_sym
->
	`gëId
()->
	`c›y
(
åue
);

345 (
	`as£π
(
lhs
!=
NULL
));

346 
	`as£π
(
lhs
->
	`gëSymInfo
(Ë!
NULL
);

347 
a°_id
* 
rhs_s
 = 
rhs_sym
->
	`gëId
()->
	`c›y
(
åue
);

348 
a°_ex¥
* 
rhs
 =á°_ex¥::
	`√w_id_ex¥
(
rhs_s
);

350 
√w_assign
->
	`gë_lhs_li°
().
	`push_back
(
lhs
);

351 
√w_assign
->
	`gë_rhs_li°
().
	`push_back
(
rhs
);

355 
gí
->
	`gíî©e_£¡_ªdu˚_assign
(
√w_assign
);

357 
dñëe
 
√w_assign
;

359 
	}
}

361 
	~"gm_backíd_˝p_›t_°ïs.h
"

362 
	ggm_˝p_›t_ªdu˚_sˇœr
::
	$¥o˚ss
(
a°_¥ocdef
 *
p
) {

363 
›t_sˇœr_ªdu˘i⁄_t
 
T
;

364 
	`gm_ªdo_rw_™Æysis
(
p
->
	`gë_body
());

365 
	`gm_åavî£_£¡s
(
p
->
	`gë_body
(), &
T
);

366 i‡(
T
.
	`has_èrgës
()) {

367 
T
.
	`å™sf‹m_èrgës
();

370 
	`gm_ªdo_rw_™Æysis
(
p
->
	`gë_body
());

372 
	`£t_af„˘ed
(
åue
);

374 
	}
}

	@gm_cpp_opt_save_bfs.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_ty≥check.h
"

5 
	~"gm_å™sf‹m_hñ≥r.h
"

6 
	~"gm_code_wrôî.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_åavî£.h
"

9 
	~"gm_ty≥check.h
"

10 
	~"gm_å™sf‹m_hñ≥r.h
"

12 
	~"gm_backíd_˝p_›t_°ïs.h
"

14 ˛as†
	c˝p_check_ßve_bfs_t
 : 
public
 
gm_≠∂y


16 
public
:

17 
	$˝p_check_ßve_bfs_t
() {

18 
	`£t_f‹_£¡
(
åue
);

19 
	`£t_£∑øã_po°_≠∂y
(
åue
);

23 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

24 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_BFS
) {

25 
a°_bfs
* 
bfs
 = (a°_bfs*Ë
s
;

26 i‡(
bfs
->
	`is_bfs
()Ë
L
.
	`push_‰⁄t
(bfs);

27 } i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
) {

28 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

29 i‡(
	`gm_is_down_nbr_node_ôî©i⁄
(
„
->
	`gë_ôî_ty≥
())) {

30 
a°_bfs
* 
bfs
 = 
L
.
	`‰⁄t
();

31 
bfs
->
	`add_öfo_boﬁ
(
CPPBE_INFO_USE_DOWN_NBR
, 
åue
);

34  
åue
;

35 
	}
}

37 
boﬁ
 
	$≠∂y2
(
a°_£¡
* 
s
) {

38 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_BFS
) {

39 
a°_bfs
* 
bfs
 = (a°_bfs*Ë
s
;

40 i‡(
bfs
->
	`is_bfs
()Ë
L
.
	`p›_‰⁄t
();

42  
åue
;

43 
	}
}

44 
	g¥iv©e
:

45 
°d
::
li°
<
a°_bfs
*> 
L
;

48 
	ggm_˝p_›t_ßve_bfs
::
	$¥o˚ss
(
a°_¥ocdef
* 
p
) {

49 
˝p_check_ßve_bfs_t
 
T
;

50 
p
->
	`åavî£_bŸh
(&
T
);

53 
	}
}

	@gm_cpp_opt_select_map_implementation.cc

1 
	~<°dio.h
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

5 
	~"gm_åavî£.h
"

6 
	~"gm_buûtö.h
"

7 
	~"gm_å™sf‹m_hñ≥r.h
"

9 
	~"gm_backíd_˝p_›t_°ïs.h
"

11 
	#Ve˘‹
 
°d
::
ve˘‹
<
gm_symèb_íåy
*>

	)

12 
	#Iãøt‹
 
Ve˘‹
::
ôî©‹


	)

14 
	eußge


16 
	mMIN
, 
	mMAX
, 
	mINVALID


19 ˛as†
	cab°ø˘_m≠_fûãr
: 
public
 
gm_≠∂y


21 
¥Ÿe˘ed
:

22 
Ve˘‹
 
ˇndid©es
;

24 
	$ab°ø˘_m≠_fûãr
() {

27 
	$ab°ø˘_m≠_fûãr
(
Ve˘‹
 
ˇndid©e_£qs
) :

28 
	$ˇndid©es
(
ˇndid©e_£qs
) {

29 
	}
}

31 
vútuÆ
 
≠∂yBuûtIn
(
a°_ex¥_buûtö
* 
buûtIn
, 
Iãøt‹
 
posôi⁄
, 
gm_buûtö_def
* 
def
, 
gm_mëhod_id_t
 
mëhodId
) = 0;

33 
	gpublic
:

34 
Ve˘‹
 
	$gë_ˇndid©es
() {

35  
ˇndid©es
;

36 
	}
}

38 
vútuÆ
 
boﬁ
 
	$≠∂y
(
gm_symèb_íåy
* 
e
, 
symèb_ty≥
) {

39 i‡(
symèb_ty≥
 !
GM_SYMTAB_VAR
Ë 
åue
;

40 i‡(
	`gm_is_m≠_ty≥
(
e
->
	`gëTy≥
()->
	`gëTy≥Summ¨y
())) {

41 
ˇndid©es
.
	`push_back
(
e
);

43  
åue
;

44 
	}
}

46 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_ex¥
* 
ex¥
) {

47 i‡(
ex¥
->
	`gë_nodëy≥
(Ë!
AST_EXPR_BUILTIN
Ë 
åue
;

49 
a°_ex¥_buûtö
* 
buûtIn
 = (a°_ex¥_buûtö*Ë
ex¥
;

50 if(
buûtIn
->
	`drivî_is_fõld
()Ë 
åue
;

51 if(
	`gm_is_void_ty≥
(
buûtIn
->
	`gë_sour˚_ty≥
())Ë 
åue
;

53 
gm_symèb_íåy
* 
drivîE¡ry
 = 
buûtIn
->
	`gë_drivî
()->
	`gëSymInfo
();

55 
Iãøt‹
 
posôi⁄
 = 
°d
::
	`föd
(
ˇndid©es
.
	`begö
(), c™did©es.
	`íd
(), 
drivîE¡ry
);

56 i‡(
posôi⁄
 =
ˇndid©es
.
	`íd
()Ë 
åue
;

58 
gm_buûtö_def
* 
def
 = 
buûtIn
->
	`gë_buûtö_def
();

59 
gm_mëhod_id_t
 
mëhodId
 = (gm_mëhod_id_tË
def
->
	`gë_mëhod_id
();

60 
	`≠∂yBuûtIn
(
buûtIn
, 
posôi⁄
, 
def
, 
mëhodId
);

61  
åue
;

62 
	}
}

66 ˛as†
	cm≠_fûãr
: 
public
 
ab°ø˘_m≠_fûãr


68 
public
:

69 
	$≠∂yBuûtIn
(
a°_ex¥_buûtö
* 
buûtIn
, 
Iãøt‹
 
posôi⁄
, 
gm_buûtö_def
* 
def
, 
gm_mëhod_id_t
 
mëhodId
) {}

70 
	}
};

72 ˛as†
	cm≠_ªmove_sˇœr_fûãr
: 
public
 
ab°ø˘_m≠_fûãr


74 
¥iv©e
:

75 
a°_¥ocdef
* 
¥o˚duª
;

76 
gm_symèb_íåy
* 
	mm≠E¡ry
;

77 
gm_symèb_íåy
* 
	mˇndid©eV¨übÀ
;

78 
	mnumFound
;

79 
ußge
 
	mœ°_ußge
;

81 
ußge
 
	$checkUßge
(
a°_id
* 
id
) {

83 
gm_rda_m≠
 
rdaM≠
;

84 
	`gm_do_ªachög_def_™Æysis
(
¥o˚duª
, 
rdaM≠
);

86 
boﬁ
 
x
 = 
	`gm_has_™y_ªachög_defs
(
rdaM≠
, 
id
);

88 
gm_rda_£t
& 
defs
 = 
	`gm_gë_Æl_ªachög_defs
(
rdaM≠
, 
id
);

89 
	`as£π
(
defs
.
	`size
() > 0);

91 
gm_rda_£t
::
ôî©‹
 
II
;

92 
II
 = 
defs
.
	`begö
(); II !defs.
	`íd
(); II++) {

93 
ußge
 
u
 = 
	`checkDeföôi⁄
(*
II
);

95 i‡(
u
 =
INVALID
)  INVALID;

96 i‡(
œ°_ußge
 =
INVALID
Ëœ°_ußgê
u
;

97 i‡(
u
 !
œ°_ußge
Ë 
INVALID
;

100  
œ°_ußge
;

103 
ußge
 
	$checkDeföôi⁄
(
a°_node
* 
defNode
) {

104 i‡(
defNode
->
	`gë_nodëy≥
(Ë!
AST_EXPR_BUILTIN
Ë 
INVALID
;

106 
a°_ex¥_buûtö
* 
rhsBuûtIn
 = (a°_ex¥_buûtö*Ë
defNode
;

107 i‡(
rhsBuûtIn
->
	`gë_drivî
()->
	`gëSymInfo
(Ë!
m≠E¡ry
Ë 
INVALID
;

109 
gm_mëhod_id_t
 
mëhodId
 = (gm_mëhod_id_tË
rhsBuûtIn
->
	`gë_buûtö_def
()->
	`gë_mëhod_id
();

110 
mëhodId
) {

111 
GM_BLTIN_MAP_GET_MIN_KEY
:

112  
MIN
;

113 
GM_BLTIN_MAP_GET_MAX_KEY
:

114  
MAX
;

116  
INVALID
;

118 
	}
}

120 
	gpublic
:

121 
	$m≠_ªmove_sˇœr_fûãr
(
Ve˘‹
 
ˇndid©eM≠s
, 
a°_¥ocdef
* 
¥oc
, 
gm_symèb_íåy
* 
m≠
Ë: 
	$ab°ø˘_m≠_fûãr
(
ˇndid©eM≠s
) {

122 
m≠E¡ry
 = 
m≠
;

123 
¥o˚duª
 = 
¥oc
;

124 
ˇndid©eV¨übÀ
 = 
NULL
;

125 
numFound
 = 0;

126 
œ°_ußge
 = 
INVALID
;

127 
	}
}

129 
ußge
 
	$gë_ußge
() {

130  
œ°_ußge
;

131 
	}
}

133 
boﬁ
 
	$foundV¨übÀ
() {

134  
numFound
 == 1;

135 
	}
}

137 
gm_symèb_íåy
* 
	$gëV¨übÀE¡ry
() {

138  
ˇndid©eV¨übÀ
;

139 
	}
}

141 
vútuÆ
 
boﬁ
 
	$≠∂y
(
gm_symèb_íåy
* 
e
, 
symèb_ty≥
) {

142  
åue
;

143 
	}
}

145 
	$≠∂yBuûtIn
(
a°_ex¥_buûtö
* 
buûtIn
, 
Iãøt‹
 
posôi⁄
, 
gm_buûtö_def
* 
def
, 
gm_mëhod_id_t
 
mëhodId
) {

146 if(
mëhodId
 !
GM_BLTIN_MAP_REMOVE
) ;

148 if(
buûtIn
->
	`gë_drivî
()->
	`gëSymInfo
(Ë!
m≠E¡ry
) ;

150 
°d
::
li°
<
a°_ex¥
*> 
¨gumíts
 = 
buûtIn
->
	`gë_¨gs
();

151 
	`as£π
(
¨gumíts
.
	`size
() == 1);

153 
a°_ex¥
* 
¨g
 = 
¨gumíts
.
	`‰⁄t
();

154 if(!
¨g
->
	`is_id
()) ;

156 
a°_id
* 
ˇndid©eArg
 = 
¨g
->
	`gë_id
();

157 
gm_symèb_íåy
* 
√wC™did©e
 = 
ˇndid©eArg
->
	`gëSymInfo
();

159 if(
ˇndid©eV¨übÀ
 !
√wC™did©e
Ë
numFound
++;

161 
gm_symèb_íåy
* 
m≠E¡ry
 = *
posôi⁄
;

162 if(
	`checkUßge
(
ˇndid©eArg
Ë!
INVALID
) {

163 if(
ˇndid©eV¨übÀ
 =
NULL
) {

164 
ˇndid©eV¨übÀ
 = 
√wC™did©e
;

167 
numFound
 = 0;

169 
	}
}

172 ˛as†
	cªmove_mömax_å™sf‹mî
: 
public
 
gm_≠∂y


174 
¥iv©e
:

175 
ußge
 
u£
;

176 
gm_symèb_íåy
* 
	mm≠
;

178 
	mpublic
:

179 
	$ªmove_mömax_å™sf‹mî
(
gm_symèb_íåy
* 
m≠_
, 
ußge
 
u£_
) :

180 
	`u£
(
u£_
), 
	$m≠
(
m≠_
) {

183 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_ex¥
* 
ex¥
) {

184 i‡(
ex¥
->
	`gë_nodëy≥
(Ë!
AST_EXPR_BUILTIN
Ë 
åue
;

186 
a°_ex¥_buûtö
* 
buûtIn
 = (a°_ex¥_buûtö*Ë
ex¥
;

187 i‡(
buûtIn
->
	`drivî_is_fõld
()Ë 
åue
;

188 i‡(
	`gm_is_void_ty≥
(
buûtIn
->
	`gë_sour˚_ty≥
())Ë 
åue
;

190 
gm_symèb_íåy
* 
drivîE¡ry
 = 
buûtIn
->
	`gë_drivî
()->
	`gëSymInfo
();

191 i‡(
drivîE¡ry
 !
m≠
Ë 
åue
;

193 
gm_buûtö_def
* 
def
 = 
buûtIn
->
	`gë_buûtö_def
();

194 
gm_mëhod_id_t
 
mëhodId
 = (gm_mëhod_id_tË
def
->
	`gë_mëhod_id
();

195 i‡(
mëhodId
 !
GM_BLTIN_MAP_REMOVE
Ë 
åue
;

197 
gm_mëhod_id_t
 
√w_mëhod_id
 = (
u£
 =
MIN
Ë? 
GM_BLTIN_MAP_REMOVE_MIN
 : 
GM_BLTIN_MAP_REMOVE_MAX
;

198 
gm_buûtö_def
* 
√w_def
 = 
BUILT_IN
.
	`föd_buûtö_def
(
def
->
	`gë_sour˚_ty≥_summ¨y
(), 
√w_mëhod_id
, 0);

199 
buûtIn
->
	`£t_buûtö_def
(
√w_def
);

200 
buûtIn
->
	`gë_¨gs
().
	`˛ór
();

202  
åue
;

203 
	}
}

207 ˛as†
	cm≠_ac˚ss_å™sf‹mî
 : 
public
 
gm_≠∂y


209 
¥iv©e
:

210 
gm_symèb_íåy
* 
m≠
;

211 
gm_symèb_íåy
* 
	mv¨
;

212 
ußge
 
	mu£
;

214 
	mpublic
:

215 
	$m≠_ac˚ss_å™sf‹mî
(
gm_symèb_íåy
* 
m≠_
, gm_symèb_íåy* 
v¨_
, 
ußge
 
u£_
Ë: 
	`m≠
(m≠_), 
	`v¨
(v¨_), 
	$u£
(
u£_
) {}

217 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
£¡
) {

218 if(
£¡
->
	`gë_nodëy≥
(Ë!
AST_ASSIGN
Ë 
åue
;

220 
a°_assign
* 
assign
 = (a°_assign*Ë
£¡
;

221 
a°_ex¥
* 
rhs
 = 
assign
->
	`gë_rhs
();

222 if(!
rhs
->
	`is_m≠ac˚ss
()Ë 
åue
;

224 
a°_ex¥_m≠ac˚ss
* 
ex¥_m≠_ac˚ss
 = (a°_ex¥_m≠ac˚ss*Ë
rhs
;

225 
a°_m≠ac˚ss
* 
m≠_ac˚ss
 = 
ex¥_m≠_ac˚ss
->
	`gë_m≠ac˚ss
();

226 
a°_id
* 
m≠_id
 = 
m≠_ac˚ss
->
	`gë_m≠_id
();

227 if(
m≠_id
->
	`gëSymInfo
(Ë!
m≠
Ë 
åue
;

229 
a°_ex¥
* 
key_ex¥
 = 
m≠_ac˚ss
->
	`gë_key_ex¥
();

230 if(!
key_ex¥
->
	`is_id
()Ë 
åue
;

231 if(
key_ex¥
->
	`gë_id
()->
	`gëSymInfo
(Ë!
v¨
Ë 
åue
;

233 
gm_mëhod_id_t
 
mëhod_id
 = (
u£
 =
MIN
Ë? 
GM_BLTIN_MAP_GET_MIN_VALUE
 : 
GM_BLTIN_MAP_GET_MAX_VALUE
;

235 
gm_buûtö_def
* 
buûtö_def
 = 
BUILT_IN
.
	`föd_buûtö_def
(
GMTYPE_MAP
, 
mëhod_id
, 0);

236 
a°_ex¥_buûtö
* 
√w_buûtö
 =á°_ex¥_buûtö::
	`√w_buûtö_ex¥
(
m≠_id
, 
buûtö_def
, 
NULL
);

238 
assign
->
	`£t_rhs
(
√w_buûtö
);

240  
åue
;

241 
	}
}

244 
	ggm_˝p_›t_£À˘_m≠_im∂emíèti⁄
::
	$¥o˚ss
(
a°_¥ocdef
* 
p
) {

246 
m≠_fûãr
 
m≠Fûãr
;

247 
	`gm_åavî£_symèbs
(
p
, &
m≠Fûãr
, 
Ál£
);

248 
Ve˘‹
 
m≠C™did©es
 = 
m≠Fûãr
.
	`gë_ˇndid©es
();

250 
Iãøt‹
 
II
 = 
m≠C™did©es
.
	`begö
(); II !m≠C™did©es.
	`íd
(); II++) {

251 
gm_symèb_íåy
* 
m≠E¡ry
 = *
II
;

252 
m≠_ªmove_sˇœr_fûãr
 
	`sˇœrFûãr
(
m≠C™did©es
, 
p
, 
m≠E¡ry
);

253 
	`gm_åavî£_ex¥s
(
p
, &
sˇœrFûãr
, 
Ál£
);

254 if(
sˇœrFûãr
.
	`foundV¨übÀ
()) {

255 
ußge
 
u£
 = 
sˇœrFûãr
.
	`gë_ußge
();

256 if(
u£
 =
MIN
) {

257 
m≠E¡ry
->
	`add_öfo_boﬁ
(
CPPBE_INFO_USE_PRIORITY_MAP_MIN
, 
åue
);

259 
m≠E¡ry
->
	`add_öfo_boﬁ
(
CPPBE_INFO_USE_PRIORITY_MAP_MAX
, 
åue
);

262 
ªmove_mömax_å™sf‹mî
 
	`mömaxTønsf‹mî
(
m≠E¡ry
, 
u£
);

263 
	`gm_åavî£_ex¥s
(
p
, &
mömaxTønsf‹mî
, 
Ál£
);

265 
m≠_ac˚ss_å™sf‹mî
 
	`m≠Ac˚ssTønsf‹mî
(
m≠E¡ry
, 
sˇœrFûãr
.
	`gëV¨übÀE¡ry
(), 
u£
);

266 
	`gm_åavî£_£¡s
(
p
, &
m≠Ac˚ssTønsf‹mî
, 
Ál£
);

269 
	}
}

271 #unde‡
Iãøt‹


272 #unde‡
Ve˘‹


	@gm_cpp_opt_select_par.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_îr‹.h
"

4 
	~"gm_ty≥check.h
"

5 
	~"gm_å™sf‹m_hñ≥r.h
"

6 
	~"gm_code_wrôî.h
"

7 
	~"gm_‰⁄ãnd.h
"

8 
	~"gm_åavî£.h
"

9 
	~"gm_ty≥check.h
"

10 
	~"gm_å™sf‹m_hñ≥r.h
"

12 
	~"gm_backíd_˝p_›t_°ïs.h
"

14 ˛as†
	c£t_to_£q_t
 : 
public
 
gm_≠∂y


16 
public
:

17 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

18 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
) {

19 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

20 
„
->
	`£t_£quítül
(
åue
);

22  
åue
;

24 
	}
};

26 ˛as†
	cchoo£_∑øŒñ_t
 : 
public
 
gm_≠∂y


28 
public
:

29 
	$choo£_∑øŒñ_t
() :

30 
	$_ö_bfs
(
Ál£
) {

33 
	$begö_c⁄ãxt
(
a°_node
* 
n
) {

34 i‡((
n
->
	`gë_nodëy≥
(Ë=
AST_BFS
Ë&& (((
a°_bfs
*Ën)->
	`is_bfs
())) {

35 
	`as£π
(
_ö_bfs
 =
Ál£
);

36 
_ö_bfs
 = 
åue
;

38 
	}
}

39 
	$íd_c⁄ãxt
(
a°_node
* 
n
) {

40 i‡((
n
->
	`gë_nodëy≥
(Ë=
AST_BFS
Ë&& (((
a°_bfs
*Ën)->
	`is_bfs
())) {

41 
_ö_bfs
 = 
Ál£
;

43 
	}
}

45 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

46 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
) {

47 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

48 i‡(
_ö_bfs
) {

49 
„
->
	`£t_£quítül
(
åue
);

50 } i‡(
„
->
	`is_£quítül
()) {

52 
„
->
	`£t_£quítül
(
åue
);

53 } i‡(
	`gm_is_Æl_gøph_ôî©i⁄
(
„
->
	`gë_ôî_ty≥
())) {

54 
£t_to_£q_t
 
T
;

57 
„
->
	`£t_£quítül
(
Ál£
);

60 
	`gm_åavî£_up_£¡
(
s
->
	`gë_∑ª¡
(), &
T
);

63 } i‡(
	`gm_is_sim∂e_cﬁÀ˘i⁄_ôî©i⁄
(
„
->
	`gë_ôî_ty≥
())) {

66 
£t_to_£q_t
 
T
;

68 
„
->
	`£t_£quítül
(
åue
);

72 
„
->
	`£t_£quítül
(
åue
);

75  
åue
;

76 
	}
}

78 
	g¥iv©e
:

79 
boﬁ
 
_ö_bfs
;

83 ˛as†
	cmake_Æl_£q_t
 : 
public
 
gm_≠∂y


85 
public
:

86 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

87 i‡(
s
->
	`gë_nodëy≥
(Ë=
AST_FOREACH
) {

88 
a°_f‹óch
* 
„
 = (a°_f‹óch*Ë
s
;

89 
„
->
	`£t_£quítül
(
åue
);

91  
åue
;

93 
	}
};

95 
gm_˝p_gí
 
CPP_BE
;

97 
	ggm_˝p_›t_£À˘_∑r
::
	$¥o˚ss
(
a°_¥ocdef
* 
p
) {

98 i‡(!
CPP_BE
.
	`is_èrgë_omp
()) {

99 
make_Æl_£q_t
 
A
;

100 
	`gm_åavî£_£¡s
(
p
, &
A
);

102 
choo£_∑øŒñ_t
 
A
;

103 
	`gm_åavî£_£¡s
(
p
, &
A
);

107 
	}
}

	@gm_cpp_opt_select_seq_implementation.cc

1 
	~<°dio.h
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

4 
	~"gm_åavî£.h
"

5 
	~"gm_buûtö.h
"

7 
	~"gm_backíd_˝p_›t_°ïs.h
"

9 
	#Ve˘‹
 
°d
::
ve˘‹
<
gm_symèb_íåy
*>

	)

10 
	#Iãøt‹
 
Ve˘‹
::
ôî©‹


	)

12 ˛as†
	cab°ø˘_£quí˚_fûãr
: 
public
 
gm_≠∂y


14 
¥Ÿe˘ed
:

15 
Ve˘‹
 
ˇndid©es
;

17 
	$ab°ø˘_£quí˚_fûãr
() {

20 
	$ab°ø˘_£quí˚_fûãr
(
Ve˘‹
 
ˇndid©e_£qs
) :

21 
	$ˇndid©es
(
ˇndid©e_£qs
) {

22 
	}
}

24 
vútuÆ
 
≠∂yBuûtIn
(
a°_ex¥_buûtö
* 
buûtIn
, 
Iãøt‹
 
posôi⁄
, 
gm_buûtö_def
* 
def
, 
gm_mëhod_id_t
 
mëhodId
) = 0;

26 
	gpublic
:

27 
Ve˘‹
 
	$gë_ˇndid©es
() {

28  
ˇndid©es
;

29 
	}
}

31 
vútuÆ
 
boﬁ
 
	$≠∂y
(
gm_symèb_íåy
* 
e
, 
symèb_ty≥
) {

32 i‡(
symèb_ty≥
 !
GM_SYMTAB_VAR
Ë 
åue
;

33 i‡(
	`gm_is_£quí˚_cﬁÀ˘i⁄_ty≥
(
e
->
	`gëTy≥
()->
	`gëTy≥Summ¨y
())) {

34 
ˇndid©es
.
	`push_back
(
e
);

36  
åue
;

37 
	}
}

39 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_ex¥
* 
ex¥
) {

40 i‡(
ex¥
->
	`gë_nodëy≥
(Ë!
AST_EXPR_BUILTIN
Ë 
åue
;

42 
a°_ex¥_buûtö
* 
buûtIn
 = (a°_ex¥_buûtö*Ë
ex¥
;

43 if(
buûtIn
->
	`drivî_is_fõld
()Ë 
åue
;

44 if(
	`gm_is_void_ty≥
(
buûtIn
->
	`gë_sour˚_ty≥
())Ë 
åue
;

46 
gm_symèb_íåy
* 
drivîE¡ry
 = 
buûtIn
->
	`gë_drivî
()->
	`gëSymInfo
();

48 
Iãøt‹
 
posôi⁄
 = 
°d
::
	`föd
(
ˇndid©es
.
	`begö
(), c™did©es.
	`íd
(), 
drivîE¡ry
);

49 i‡(
posôi⁄
 =
ˇndid©es
.
	`íd
()Ë 
åue
;

51 
gm_buûtö_def
* 
def
 = 
buûtIn
->
	`gë_buûtö_def
();

52 
gm_mëhod_id_t
 
mëhodId
 = (gm_mëhod_id_tË
def
->
	`gë_mëhod_id
();

53 
	`≠∂yBuûtIn
(
buûtIn
, 
posôi⁄
, 
def
, 
mëhodId
);

54  
åue
;

55 
	}
}

59 ˛as†
	c£quí˚_‰⁄t_ußge_fûãr
: 
public
 
ab°ø˘_£quí˚_fûãr


61 
public
:

62 
	$≠∂yBuûtIn
(
a°_ex¥_buûtö
* 
buûtIn
, 
Iãøt‹
 
posôi⁄
, 
gm_buûtö_def
* 
def
, 
gm_mëhod_id_t
 
mëhodId
) {

63 
mëhodId
) {

64 
GM_BLTIN_SET_ADD_BACK
:

65 
GM_BLTIN_SET_REMOVE_BACK
:

66 
GM_BLTIN_SET_PEEK_BACK
:

67 
ˇndid©es
.
	`îa£
(
posôi⁄
);

72 
	}
};

74 ˛as†
	c£q_‰⁄t_to_back_å™sf‹mî
: 
public
 
ab°ø˘_£quí˚_fûãr


76 
¥iv©e
:

77 
gm_mëhod_id_t
 
	$gë_å™sf‹med_mëhod_id
(
gm_mëhod_id_t
 
mëhodId
) {

78 
mëhodId
) {

79 
GM_BLTIN_SET_ADD
:

80  
GM_BLTIN_SET_ADD_BACK
;

81 
GM_BLTIN_SEQ_POP_FRONT
:

82  
GM_BLTIN_SET_REMOVE_BACK
;

83 
GM_BLTIN_SET_PEEK
:

84  
GM_BLTIN_SET_PEEK_BACK
;

86  
mëhodId
;

90 
public
:

91 
	$£q_‰⁄t_to_back_å™sf‹mî
(
Ve˘‹
 
ˇndid©e_£qs
) :

92 
	$ab°ø˘_£quí˚_fûãr
(
ˇndid©e_£qs
) {

93 
	}
}

95 
	$≠∂yBuûtIn
(
a°_ex¥_buûtö
* 
buûtIn
, 
Iãøt‹
 
posôi⁄
, 
gm_buûtö_def
* 
def
, 
gm_mëhod_id_t
 
mëhodId
) {

97 
gm_mëhod_id_t
 
√wMëhodId
 = 
	`gë_å™sf‹med_mëhod_id
(
mëhodId
);

98 i‡(
mëhodId
 !
√wMëhodId
) {

99 
gm_buûtö_m™agî
 
m™agî
;

100 
gm_buûtö_def
* 
√wBuûtInDef
 = 
BUILT_IN
.
	`föd_buûtö_def
(
def
->
	`gë_sour˚_ty≥_summ¨y
(), 
√wMëhodId
, 0);

101 
buûtIn
->
	`£t_buûtö_def
(
√wBuûtInDef
);

103 
	}
}

106 ˛as†
	c£quí˚_back_ußge_fûéî
: 
public
 
ab°ø˘_£quí˚_fûãr


108 
public
:

109 
	$≠∂yBuûtIn
(
a°_ex¥_buûtö
* 
buûtIn
, 
Iãøt‹
 
posôi⁄
, 
gm_buûtö_def
* 
def
, 
gm_mëhod_id_t
 
mëhodId
) {

110 
mëhodId
) {

111 
GM_BLTIN_SET_ADD
:

112 
GM_BLTIN_SEQ_POP_FRONT
:

113 
GM_BLTIN_SET_PEEK
:

114 
ˇndid©es
.
	`îa£
(
posôi⁄
);

118 
	}
};

120 ˛as†
	c£quí˚_to_ve˘‹_å™sf‹mî


122 
	m¥iv©e
:

123 
Ve˘‹
 
ˇndid©es
;

125 
	mpublic
:

126 
	$£quí˚_to_ve˘‹_å™sf‹mî
(
Ve˘‹
 
ˇndid©e_£qs
) :

127 
	$ˇndid©es
(
ˇndid©e_£qs
) {

130 
	$å™sf‹m_Æl
() {

131 
Iãøt‹
 
II
;

132 
II
 = 
ˇndid©es
.
	`begö
(); II !ˇndid©es.
	`íd
(); II++) {

133 
gm_symèb_íåy
* 
íåy
 = *
II
;

134 
íåy
->
	`add_öfo_boﬁ
(
CPPBE_INFO_USE_VECTOR_SEQUENCE
, 
åue
);

136 
	}
}

153 ˛as†
	ccﬁÀ˘i⁄_ußge_fûãr
 : 
public
 
gm_≠∂y


155 
¥iv©e
:

156 
°d
::
ve˘‹
<
gm_symèb_íåy
*> 
ˇndid©es
;

158 
	mpublic
:

159 
cﬁÀ˘i⁄_ußge_fûãr
(
°d
::
ve˘‹
<
gm_symèb_íåy
*> 
£q_ˇndid©es
Ë: 
	$ˇndid©es
(
£q_ˇndid©es
) {}

161 
°d
::
ve˘‹
<
gm_symèb_íåy
*> 
	$gë_ˇndid©es
() {

162  
ˇndid©es
;

163 
	}
}

165 
boﬁ
 
	$≠∂y
(
a°_£¡
* 
s
) {

166 if(
s
->
	`gë_nodëy≥
(Ë!
AST_ASSIGN
Ë 
åue
;

168 
a°_assign
* 
assign
 = (a°_assign*Ë
s
;

169 if(!
assign
->
	`is_èrgë_sˇœr
()Ë 
åue
;

171 
gm_symèb_íåy
* 
èrgë
 = 
assign
->
	`gë_lhs_sˇœ
()->
	`gëSymInfo
();

172 if(!
	`gm_is_£quí˚_cﬁÀ˘i⁄_ty≥
(
èrgë
->
	`gëTy≥
()->
	`gëTy≥Summ¨y
())Ë 
åue
;

174 
a°_ex¥
* 
rhs
 = 
assign
->
	`gë_rhs
();

175 if(!
rhs
->
	`is_id
()Ë 
åue
;

177 
a°_id
* 
rhs_id
 = 
rhs
->
	`gë_id
();

178 if(!
	`gm_is_cﬁÀ˘i⁄_ôî©‹_ty≥
(
rhs_id
->
	`gëTy≥Summ¨y
())Ë 
åue
;

180 
Iãøt‹
 
posôi⁄
 = 
°d
::
	`föd
(
ˇndid©es
.
	`begö
(), c™did©es.
	`íd
(), 
èrgë
);

181 i‡(
posôi⁄
 !
ˇndid©es
.
	`íd
()Ëˇndid©es.
	`îa£
(position);

183  
åue
;

184 
	}
}

186 
vútuÆ
 
boﬁ
 
	$≠∂y
(
a°_ex¥
* 
ex¥
) {

187 i‡(
ex¥
->
	`gë_nodëy≥
(Ë!
AST_EXPR_BUILTIN
Ë 
åue
;

189 
a°_ex¥_buûtö
* 
buûtIn
 = (a°_ex¥_buûtö*Ë
ex¥
;

190 if(
buûtIn
->
	`drivî_is_fõld
()Ë 
åue
;

191 if(
	`gm_is_void_ty≥
(
buûtIn
->
	`gë_sour˚_ty≥
())Ë 
åue
;

193 
gm_symèb_íåy
* 
drivîE¡ry
 = 
buûtIn
->
	`gë_drivî
()->
	`gëSymInfo
();

194 
drivîTy≥
 = 
drivîE¡ry
->
	`gëTy≥
()->
	`gëTy≥Summ¨y
();

195 if(!
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ty≥
(
drivîTy≥
)Ë 
åue
;

197 
gm_mëhod_id_t
 
mëhodId
 = (gm_mëhod_id_tË
buûtIn
->
	`gë_buûtö_def
()->
	`gë_mëhod_id
();

199 
gm_symèb_íåy
* 
possibÀSeq
;

200 
mëhodId
) {

201 
GM_BLTIN_SET_ADD
:

202 
GM_BLTIN_SET_ADD_BACK
: {

203 
a°_ex¥
* 
¨g
 = 
buûtIn
->
	`gë_¨gs
().
	`‰⁄t
();

204 
	`as£π
(
¨g
->
	`is_id
());

205 
possibÀSeq
 = 
¨g
->
	`gë_id
()->
	`gëSymInfo
();

208 
GM_BLTIN_SET_PEEK
:

209 
GM_BLTIN_SET_PEEK_BACK
: {

210 if(
buûtIn
->
	`gë_∑ª¡
()->
	`gë_nodëy≥
(Ë!
AST_ASSIGN
Ë 
åue
;

211 
a°_assign
* 
assign
 = (a°_assign*Ë
buûtIn
->
	`gë_∑ª¡
();

212 if(
assign
->
	`gë_lhs_ty≥
(Ë!
GMTYPE_NSEQ
 &&ássign->gë_lhs_ty≥(Ë!
GMTYPE_ESEQ
Ë 
åue
;

213 
	`as£π
(
assign
->
	`is_èrgë_sˇœr
());

214 
possibÀSeq
 = 
assign
->
	`gë_lhs_sˇœ
()->
	`gëSymInfo
();

218  
åue
;

221 
Iãøt‹
 
posôi⁄
 = 
°d
::
	`föd
(
ˇndid©es
.
	`begö
(), c™did©es.
	`íd
(), 
possibÀSeq
);

222 i‡(
posôi⁄
 !
ˇndid©es
.
	`íd
()Ëˇndid©es.
	`îa£
(position);

224  
åue
;

225 
	}
}

228 
	ggm_˝p_›t_£À˘_£q_im∂emíèti⁄
::
	$¥o˚ss
(
a°_¥ocdef
* 
p
) {

229 
£quí˚_‰⁄t_ußge_fûãr
 
‰⁄tFûãr
;

230 
	`gm_åavî£_symèbs
(
p
, &
‰⁄tFûãr
, 
Ál£
);

231 
	`gm_åavî£_ex¥s
(
p
, &
‰⁄tFûãr
, 
Ál£
);

233 
°d
::
ve˘‹
<
gm_symèb_íåy
*> 
‰⁄tC™did©es
 = 
‰⁄tFûãr
.
	`gë_ˇndid©es
();

234 
£q_‰⁄t_to_back_å™sf‹mî
 
	`‰⁄tToBack
(
‰⁄tC™did©es
);

235 
	`gm_åavî£_ex¥s
(
p
, &
‰⁄tToBack
, 
Ál£
);

237 
£quí˚_back_ußge_fûéî
 
å™sf‹mFûãr
;

238 
	`gm_åavî£_symèbs
(
p
, &
å™sf‹mFûãr
, 
Ál£
);

239 
	`gm_åavî£_ex¥s
(
p
, &
å™sf‹mFûãr
, 
Ál£
);

240 
°d
::
ve˘‹
<
gm_symèb_íåy
*> 
å™sf‹mC™did©es
 = 
å™sf‹mFûãr
.
	`gë_ˇndid©es
();

242 
cﬁÀ˘i⁄_ußge_fûãr
 
	`cﬁÀ˘i⁄Fûãr
(
å™sf‹mC™did©es
);

243 
	`gm_åavî£_ex¥s
(
p
, &
cﬁÀ˘i⁄Fûãr
, 
Ál£
);

244 
	`gm_åavî£_£¡s
(
p
, &
cﬁÀ˘i⁄Fûãr
, 
Ál£
);

245 
å™sf‹mC™did©es
 = 
cﬁÀ˘i⁄Fûãr
.
	`gë_ˇndid©es
();

247 
£quí˚_to_ve˘‹_å™sf‹mî
 
	`å™sf‹mî
(
å™sf‹mC™did©es
);

248 
å™sf‹mî
.
	`å™sf‹m_Æl
();

249 
	}
}

251 #unde‡
Iãøt‹


252 #unde‡
Ve˘‹


	@gm_cpplib_gen.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_‰⁄ãnd_≠i.h
"

4 
	~"gm_ty≥check.h
"

5 
	~"gm_îr‹.h
"

6 
	~"gm_åavî£.h
"

7 
	~"gm_misc.h
"

8 
	~"gm_ty≥check.h
"

9 
	~"gm_a°.h
"

10 
	~"gm_å™sf‹m_hñ≥r.h
"

11 
	~"gm_buûtö.h
"

13 
	~"gm_˝∂ib_w‹ds.h
"

14 
	~"gm_backíd_mpi.h
"

16 
gm_mpi_gí
 
MPI_GEN
;

20 
	ggm_˝∂ib
::
	$buûd_up_œnguage_voˇ
(
gm_voˇbuœry
& 
V
) {

21 
V
.
	`add_w‹d
(
NODE_T
);

22 
V
.
	`add_w‹d
(
EDGE_T
);

23 
V
.
	`add_w‹d
(
GRAPH_T
);

24 
V
.
	`add_w‹d
(
SET_T
);

25 
V
.
	`add_w‹d
(
ORDER_T
);

26 
V
.
	`add_w‹d
(
NODE_IDX
);

27 
V
.
	`add_w‹d
(
EDGE_IDX
);

28 
V
.
	`add_w‹d
(
R_NODE_IDX
);

29 
V
.
	`add_w‹d
(
R_EDGE_IDX
);

30 
V
.
	`add_w‹d
(
BEGIN
);

31 
V
.
	`add_w‹d
(
R_BEGIN
);

32 
V
.
	`add_w‹d
(
FW_EDGE_IDX
);

33 
	}
}

35 c⁄° * 
	ggm_˝∂ib
::
	$gë_ty≥_°rög
(
ty≥
) {

36 i‡(
	`gm_is_gøph_ty≥
(
ty≥
)) {

37  
GRAPH_T
;

38 } i‡(
	`gm_is_nodìdge_ty≥
(
ty≥
)) {

39 i‡(
	`gm_is_node_ty≥
(
ty≥
))

40  
NODE_T
;

42  
EDGE_T
;

43 } i‡(
	`gm_is_node_ôî©‹_ty≥
(
ty≥
)) {

44  
NODEITER_T
;

45 } i‡(
	`gm_is_edge_ôî©‹_ty≥
(
ty≥
)) {

46  
EDGEITER_T
;

47 } i‡(
	`gm_is_cﬁÀ˘i⁄_ôî©‹_ty≥
(
ty≥
)) {

48 
	`¥ötf
("ty≥ = %s\n", 
	`gm_gë_ty≥_°rög
(
ty≥
));

49 
	`as£π
(
Ál£
);

51 } i‡(
	`gm_is_cﬁÀ˘i⁄_ty≥
(
ty≥
)) {

52 
	`as£π
(
	`gm_is_node_cﬁÀ˘i⁄_ty≥
(
ty≥
Ë|| 
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ty≥
(type));

53 i‡(
	`gm_is_£t_cﬁÀ˘i⁄_ty≥
(
ty≥
))

54  
SET_T
;

55 i‡(
	`gm_is_‹dî_cﬁÀ˘i⁄_ty≥
(
ty≥
))

56  
ORDER_T
;

57 i‡(
	`gm_is_£quí˚_cﬁÀ˘i⁄_ty≥
(
ty≥
))

58  
SEQ_T
;

59 i‡(
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ty≥
(
ty≥
))

60  
QUEUE_T
;

62 
	`as£π
(
Ál£
);

65 } i‡(
	`gm_is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄_ty≥
(
ty≥
)) {

66  
QUEUE_T
;

67 } i‡(
	`gm_is_m≠_ty≥
(
ty≥
)) {

68  
MAP_T
;

70 
	`¥ötf
("ty≥ = %d %s\n", 
ty≥
, 
	`gm_gë_ty≥_°rög
(type));

71 
	`as£π
(
Ál£
);

74 
	}
}

76 c⁄° * 
	ggm_˝∂ib
::
	$gë_ty≥_°rög
(
a°_ty≥de˛
* 
t
) {

77  
	`gë_ty≥_°rög
(
t
->
	`gëTy≥Summ¨y
());

78 
	}
}

80 c⁄° * 
	ggm_˝∂ib
::
	$max_node_ödex
(
a°_id
* 
gøph
) {

81 
	`•rötf
(
°r_buf
, "%s.%s()", 
gøph
->
	`gë_gí«me
(), 
NUM_NODES
);

82  
°r_buf
;

83 
	}
}

84 c⁄° * 
	ggm_˝∂ib
::
	$max_edge_ödex
(
a°_id
* 
gøph
) {

85 
	`•rötf
(
°r_buf
, "%s.%s()", 
gøph
->
	`gë_gí«me
(), 
NUM_EDGES
);

86  
°r_buf
;

87 
	}
}

88 c⁄° * 
	ggm_˝∂ib
::
	$node_ödex
(
a°_id
* 
ôî
) {

90  
ôî
->
	`gë_gí«me
();

91 
	}
}

92 c⁄° * 
	ggm_˝∂ib
::
	$edge_ödex
(
a°_id
* 
ôî
) {

94  
ôî
->
	`gë_gí«me
();

95 
	}
}

97 c⁄° * 
	ggm_˝∂ib
::
	$fw_edge_ödex
(
a°_id
* 
ôî
)

100 
	`•rötf
(
°r_buf
, "%s.%s[%s]",

101 
ôî
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
(),

102 
FW_EDGE_IDX
,
ôî
->
	`gë_gí«me
());

103  
°r_buf
;

104 
	}
}

106 
boﬁ
 
	ggm_˝∂ib
::
	$add_cﬁÀ˘i⁄_def
(
a°_id
* 
i
) {

107 
Body
->
	`push
("(");

109 
a°_ty≥de˛
* 
t
 = 
i
->
	`gëTy≥Info
();

110 i‡(
t
->
	`is_£t_cﬁÀ˘i⁄
(Ë||Å->
	`is_‹dî_cﬁÀ˘i⁄
(Ë||Å->
	`is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄
()) {

112 
	`as£π
(
t
->
	`gë_èrgë_gøph_id
(Ë!
NULL
);

114 i‡(!
t
->
	`is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄
()Ë
Body
->
	`push
—->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
());

115 i‡(
t
->
	`is_node_cﬁÀ˘i⁄
()) {

116 
Body
->
	`push
(".");

117 
Body
->
	`push
(
NUM_NODES
);

118 
Body
->
	`push
("()");

119 } i‡(
t
->
	`is_edge_cﬁÀ˘i⁄
()) {

120 
Body
->
	`push
(".");

121 
Body
->
	`push
(
NUM_EDGES
);

122 
Body
->
	`push
("()");

123 } i‡(
t
->
	`is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄
()) {

124 
	`as£π
(
åue
);

126 
	`as£π
(
Ál£
);

131 i‡(
t
->
	`is_‹dî_cﬁÀ˘i⁄
(Ë||Å->
	`is_£quí˚_cﬁÀ˘i⁄
(Ë||Å->
	`is_cﬁÀ˘i⁄_of_cﬁÀ˘i⁄
()) {

132 
Body
->
	`push
("G");

136 
Body
->
	`push 
(");");

138  
Ál£
;

139 
	}
}

141 c⁄° * 
	ggm_˝∂ib
::
	$gëM≠Ty≥Såög
(
ty≥
) {

142 
ty≥
) {

143 
MEDIUM
:

145 
PRIORITY_MIN
:

147 
PRIORITY_MAX
:

150 
	`as£π
(
Ál£
);

151  
NULL
;

153 
	}
}

155 c⁄° * 
	ggm_˝∂ib
::
	$gëM≠DeÁu…VÆueF‹Ty≥
(
ty≥
) {

156 i‡(
	`gm_is_Êﬂt_ty≥
(
ty≥
)) {

158 } i‡(
	`gm_is_öãgî_ty≥
(
ty≥
)) {

160 } i‡(
	`gm_is_boﬁón_ty≥
(
ty≥
)) {

162 } i‡(
	`gm_is_node_ty≥
(
ty≥
)) {

164 } i‡(
	`gm_is_edge_ty≥
(
ty≥
)) {

168 
	`as£π
(
Ál£
);

170  
NULL
;

171 
	}
}

173 c⁄° * 
	ggm_˝∂ib
::
	$gëAddôi⁄ÆM≠P¨amëîs
(
m≠Ty≥
) {

174 
m≠Ty≥
) {

175 
MEDIUM
:

177 
PRIORITY_MIN
:

178 
PRIORITY_MAX
:

181 
	`as£π
(
Ál£
);

184 
	}
}

186 
	ggm_˝∂ib
::
	$add_mpi_m≠_def
(
a°_m≠ty≥de˛
* 
m≠
, 
a°_id
* 
m≠Id
) {

188 
m≠Ty≥
 = 
MEDIUM
;

189 i‡(
m≠Id
->
	`gëSymInfo
()->
	`has_öfo
(
CPPBE_INFO_USE_PRIORITY_MAP_MIN
)Ë
m≠Ty≥
 = 
PRIORITY_MIN
;

190 i‡(
m≠Id
->
	`gëSymInfo
()->
	`has_öfo
(
CPPBE_INFO_USE_PRIORITY_MAP_MAX
)Ë
m≠Ty≥
 = 
PRIORITY_MAX
;

192 
keyTy≥
 = 
m≠
->
	`gëKeyTy≥Summ¨y
();

193 
vÆueTy≥
 = 
m≠
->
	`gëVÆueTy≥Summ¨y
();

194 i‡(
vÆueTy≥
 =
GMTYPE_BOOL
) {

195 
vÆueTy≥
 = 
GMTYPE_INT
;

199 if(
MPI_GEN
.
	`is_ö_∑øŒñ_lo›
()) {

200 
ty≥Buf„r
[128];

201 
	`•rötf
(
ty≥Buf„r
, "gm_map_medium");

207 
buf„r
[256];

208 
	`•rötf
(
buf„r
, "%s<%s, %s> %†(%s, %s);", 
ty≥Buf„r
, "node_t", "öt32_t", 
m≠Id
->
	`gë_gí«me
(), "gm_rt_get_num_threads()", "0");

209 
Body
->
	`push 
(
buf„r
);

211 
ty≥Buf„r
[128];

213 
	`•rötf
(
ty≥Buf„r
, "gm_map_node_int");

219 
buf„r
[256];

220 
	`•rötf
(
buf„r
, "%†%s;", 
ty≥Buf„r
, 
m≠Id
->
	`gë_gí«me
());

221 
Body
->
	`push 
(
buf„r
);

223 
	}
}

225 
	ggm_˝∂ib
::
	$add_m≠_def
(
a°_m≠ty≥de˛
* 
m≠
, 
a°_id
* 
m≠Id
) {

227 
m≠Ty≥
 = 
MEDIUM
;

228 i‡(
m≠Id
->
	`gëSymInfo
()->
	`has_öfo
(
CPPBE_INFO_USE_PRIORITY_MAP_MIN
)Ë
m≠Ty≥
 = 
PRIORITY_MIN
;

229 i‡(
m≠Id
->
	`gëSymInfo
()->
	`has_öfo
(
CPPBE_INFO_USE_PRIORITY_MAP_MAX
)Ë
m≠Ty≥
 = 
PRIORITY_MAX
;

231 
keyTy≥
 = 
m≠
->
	`gëKeyTy≥Summ¨y
();

232 
vÆueTy≥
 = 
m≠
->
	`gëVÆueTy≥Summ¨y
();

233 i‡(
vÆueTy≥
 =
GMTYPE_BOOL
) {

234 
vÆueTy≥
 = 
GMTYPE_INT
;

239 
ty≥Buf„r
[128];

240 
	`•rötf
(
ty≥Buf„r
, "%s<%s, %s>", 
	`gëM≠Ty≥Såög
(
m≠Ty≥
), 
	`gëTy≥Såög
(
keyTy≥
), gëTy≥Såög(
vÆueTy≥
));

242 
∑ømëîBuf„r
[64];

243 
	`•rötf
(
∑ømëîBuf„r
, "(%†%s)", 
	`gëAddôi⁄ÆM≠P¨amëîs
(
m≠Ty≥
), 
	`gëM≠DeÁu…VÆueF‹Ty≥
(
vÆueTy≥
));

245 
buf„r
[256];

246 
	`•rötf
(
buf„r
, "%†%s%s;", 
ty≥Buf„r
, 
m≠Id
->
	`gë_gí«me
(), 
∑ømëîBuf„r
);

247 
Body
->
	`push 
(
buf„r
);

248 
	}
}

250 
	ggm_˝∂ib
::
	$gíî©e_£¡_n›
(
a°_n›
 *
f
) {

251 
subty≥
 = 
f
->
	`gë_subty≥
();

252 
subty≥
) {

254 
	`as£π
(
Ál£
);

257 
	}
}

259 
	ggm_˝∂ib
::
	$gíî©e_ex¥_nû
(
a°_ex¥
* 
e
, 
gm_code_wrôî
& 
Body
) {

260 i‡(
e
->
	`gë_ty≥_summ¨y
(Ë=
GMTYPE_NIL_EDGE
) {

261 
Body
.
	`push
("gm_graph::NIL_EDGE");

262 } i‡(
e
->
	`gë_ty≥_summ¨y
(Ë=
GMTYPE_NIL_NODE
) {

263 
Body
.
	`push
("gm_graph::NIL_NODE");

265 
	`as£π
(
Ál£
);

267 
	}
}

269 c⁄° * 
	ggm_˝∂ib
::
	$gë_fun˘i⁄_«me_n£t
(
mëhodId
, 
boﬁ
 
ö_∑øŒñ
) {

270 
mëhodId
) {

271 
GM_BLTIN_SET_HAS
:

273 
GM_BLTIN_SET_REMOVE
:

274  
ö_∑øŒñ
 ? "remove_par" : "remove_seq";

275 
GM_BLTIN_SET_ADD
:

276  
ö_∑øŒñ
 ? "add_par" : "add_seq";

277 
GM_BLTIN_SET_UNION
:

279 
GM_BLTIN_SET_COMPLEMENT
:

281 
GM_BLTIN_SET_INTERSECT
:

283 
GM_BLTIN_SET_SUBSET
:

285 
GM_BLTIN_SET_SIZE
:

287 
GM_BLTIN_SET_CLEAR
:

290 
	`as£π
(
Ál£
);

293 
	}
}

295 c⁄° * 
	ggm_˝∂ib
::
	$gë_fun˘i⁄_«me_n£q
(
mëhodId
) {

296 
mëhodId
) {

297 
GM_BLTIN_SET_ADD
:

299 
GM_BLTIN_SET_ADD_BACK
:

301 
GM_BLTIN_SEQ_POP_FRONT
:

303 
GM_BLTIN_SET_REMOVE_BACK
:

305 
GM_BLTIN_SET_SIZE
:

308 
	`as£π
(
Ál£
);

311 
	}
}

313 c⁄° * 
	ggm_˝∂ib
::
	$gë_fun˘i⁄_«me_n‹dî
(
mëhodId
) {

314 
mëhodId
) {

315 
GM_BLTIN_SET_ADD
:

317 
GM_BLTIN_SET_ADD_BACK
:

319 
GM_BLTIN_SET_REMOVE
:

321 
GM_BLTIN_SET_REMOVE_BACK
:

323 
GM_BLTIN_SET_HAS
:

325 
GM_BLTIN_SET_SIZE
:

328 
	`as£π
(
Ál£
);

331 
	}
}

333 c⁄° * 
	ggm_˝∂ib
::
	$gë_fun˘i⁄_«me_m≠
(
mëhodId
, 
boﬁ
 
ö_∑øŒñ
) {

335 
mëhodId
) {

336 
GM_BLTIN_MAP_SIZE
:

337 if(
ö_∑øŒñ
)

341 
GM_BLTIN_MAP_CLEAR
:

343 
GM_BLTIN_MAP_HAS_MAX_VALUE
:

344 
GM_BLTIN_MAP_HAS_MIN_VALUE
:

345 
GM_BLTIN_MAP_HAS_KEY
:

346 
GM_BLTIN_MAP_GET_MAX_KEY
:

347 
GM_BLTIN_MAP_GET_MIN_KEY
:

348 
GM_BLTIN_MAP_GET_MAX_VALUE
:

349 
GM_BLTIN_MAP_GET_MIN_VALUE
: {

350 i‡(
ö_∑øŒñ
)

353  
	`gë_fun˘i⁄_«me_m≠_∑r
(
mëhodId
);

355  
	`gë_fun˘i⁄_«me_m≠_£q
(
mëhodId
);

357 
GM_BLTIN_MAP_REMOVE
:

358 i‡(
ö_∑øŒñ
) {

363 
GM_BLTIN_MAP_REMOVE_MAX
:

365 
GM_BLTIN_MAP_REMOVE_MIN
:

368 
	`as£π
(
Ál£
);

371 
	}
}

373 c⁄° * 
	ggm_˝∂ib
::
	$gë_fun˘i⁄_«me_m≠_∑r
(
mëhodId
) {

374 
mëhodId
) {

378 
GM_BLTIN_MAP_HAS_MAX_VALUE
:

380 
GM_BLTIN_MAP_HAS_MIN_VALUE
:

382 
GM_BLTIN_MAP_HAS_KEY
:

384 
GM_BLTIN_MAP_GET_MAX_KEY
:

386 
GM_BLTIN_MAP_GET_MIN_KEY
:

388 
GM_BLTIN_MAP_GET_MAX_VALUE
:

390 
GM_BLTIN_MAP_GET_MIN_VALUE
:

393 
	`as£π
(
Ál£
);

397 
	}
}

399 c⁄° * 
	ggm_˝∂ib
::
	$gë_fun˘i⁄_«me_m≠_£q
(
mëhodId
) {

400 
mëhodId
) {

401 
GM_BLTIN_MAP_HAS_MAX_VALUE
:

403 
GM_BLTIN_MAP_HAS_MIN_VALUE
:

405 
GM_BLTIN_MAP_HAS_KEY
:

407 
GM_BLTIN_MAP_GET_MAX_KEY
:

409 
GM_BLTIN_MAP_GET_MIN_KEY
:

411 
GM_BLTIN_MAP_GET_MAX_VALUE
:

413 
GM_BLTIN_MAP_GET_MIN_VALUE
:

416 
	`as£π
(
Ál£
);

420 
	}
}

422 c⁄° * 
	ggm_˝∂ib
::
	$gë_fun˘i⁄_«me_gøph
(
mëhodId
) {

423 
mëhodId
) {

424 
GM_BLTIN_GRAPH_NUM_NODES
:

425  
NUM_NODES
;

426 
GM_BLTIN_GRAPH_NUM_EDGES
:

427  
NUM_EDGES
;

428 
GM_BLTIN_GRAPH_RAND_NODE
:

429  
RANDOM_NODE
;

431 
	`as£π
(
Ál£
);

434 
	}
}

436 
	ggm_˝∂ib
::
	$add_¨gumíts_™d_thªad
(
gm_code_wrôî
& 
body
, 
a°_ex¥_buûtö
* 
buûtöEx¥
, 
boﬁ
 
addThªadId
) {

437 
maö
->
	`gíî©e_ex¥_li°
(
buûtöEx¥
->
	`gë_¨gs
());

438 i‡(
addThªadId
Ë
body
.
	`push
(",gm_rt_thread_id()");

439 
body
.
	`push
(")");

440 
	}
}

442 
	ggm_˝∂ib
::
	$gíî©e_ex¥_buûtö_fõld
(
a°_ex¥_buûtö_fõld
* 
buûtöEx¥
, 
gm_code_wrôî
& 
body
) {

444 
a°_fõld
* 
drivî
 = 
buûtöEx¥
->
	`gë_fõld_drivî
();

445 
gm_buûtö_def
* 
deföôi⁄
 = 
buûtöEx¥
->
	`gë_buûtö_def
();

446 
a°_£¡
* 
£¡
 = 
	`gm_föd_∑ª¡_£¡í˚
(
buûtöEx¥
);

448 
	`as£π
(
deföôi⁄
 !
NULL
);

449 
	`as£π
(
£¡
 !
NULL
);

451 
sour˚Ty≥
 = 
deföôi⁄
->
	`gë_sour˚_ty≥_summ¨y
();

452 
mëhodId
 = 
deföôi⁄
->
	`gë_mëhod_id
();

454 
boﬁ
 
∑øŒñExecuti⁄
 = 
£¡
->
	`is_undî_∑øŒñ_executi⁄
();

455 
boﬁ
 
addThªadId
 = 
Ál£
;

457 c⁄° * 
fun˘i⁄Name
;

458 
sour˚Ty≥
) {

459 
GMTYPE_NSET
:

460 
fun˘i⁄Name
 = 
	`gë_fun˘i⁄_«me_n£t
(
mëhodId
, 
∑øŒñExecuti⁄
);

462 
GMTYPE_NSEQ
:

463 
fun˘i⁄Name
 = 
	`gë_fun˘i⁄_«me_n£q
(
mëhodId
);

465 
GMTYPE_NORDER
:

466 
fun˘i⁄Name
 = 
	`gë_fun˘i⁄_«me_n‹dî
(
mëhodId
);

469 
	`as£π
(
Ál£
);

473 
	`•rötf
(
°r_buf
, "%s[%s].%s(", 
drivî
->
	`gë_£c⁄d
()->
	`gë_gí«me
(), drivî->
	`gë_fú°
()->gë_gí«me(), 
fun˘i⁄Name
);

474 
body
.
	`push
(
°r_buf
);

475 
	`add_¨gumíts_™d_thªad
(
body
, 
buûtöEx¥
, 
addThªadId
);

477 
	}
}

479 
	ggm_˝∂ib
::
	$gíî©e_ex¥_buûtö
(
a°_ex¥_buûtö
* 
e
, 
gm_code_wrôî
& 
Body
) {

481 i‡(
e
->
	`drivî_is_fõld
()) {

482 
	`gíî©e_ex¥_buûtö_fõld
((
a°_ex¥_buûtö_fõld
*Ë
e
, 
Body
);

486 
a°_id
* 
i
 = 
e
->
	`gë_drivî
();

487 
gm_buûtö_def
* 
def
 = 
e
->
	`gë_buûtö_def
();

488 
a°_£¡
* 
s
 = 
	`gm_föd_∑ª¡_£¡í˚
(
e
);

489 
	`as£π
(
def
 !
NULL
);

490 
	`as£π
(
s
 !
NULL
);

491 
§c_ty≥
 = 
def
->
	`gë_sour˚_ty≥_summ¨y
();

492 
mëhod_id
 = 
def
->
	`gë_mëhod_id
();

493 
boﬁ
 
undî_∑øŒñ
 = 
s
->
	`is_undî_∑øŒñ_executi⁄
();

494 
boﬁ
 
add_thªad_id
 = 
Ál£
;

496 c⁄° * 
func_«me
;

497 
§c_ty≥
) {

498 
GMTYPE_GRAPH
:

499 
func_«me
 = 
	`gë_fun˘i⁄_«me_gøph
(
mëhod_id
);

501 
GMTYPE_NODE
:

502 
mëhod_id
) {

503 
GM_BLTIN_NODE_DEGREE
:

504 
Body
.
	`push
("/*1*/");

506 
ãmp_buf
[256];

507 
	`•rötf
(
ãmp_buf
, "int ___begin_start, ___begin_end; get_begin_start_end(%s, ___begin_start, ___begin_end, G);",

508 
i
->
	`gë_gí«me
());

509 
Body
.
	`ö£π_©_¥ev_löe
(
ãmp_buf
);

510 
	`as£π
(
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
(Ë!
NULL
);

513 
	`•rötf
(
°r_buf
, "(___begin_end - ___begin_start)");

515 
Body
.
	`push
(
°r_buf
);

517 
GM_BLTIN_NODE_IN_DEGREE
:

518 
Body
.
	`push
("/*2*/");

519 
	`as£π
(
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
(Ë!
NULL
);

520 
	`•rötf
(
°r_buf
, "(%s.%s[%s+1] - %s.%s[%s])", 
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
(), 
R_BEGIN
, i->get_genname(),

521 
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
(), 
R_BEGIN
, i->get_genname());

522 
Body
.
	`push
(
°r_buf
);

524 
GM_BLTIN_NODE_IS_NBR_FROM
:

525 
Body
.
	`push
("/*3*/");

526 
	`as£π
(
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
(Ë!
NULL
);

527 
	`•rötf
(
°r_buf
, "%s.is_√ighb‹(", 
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
());

528 
Body
.
	`push
(
°r_buf
);

529 
maö
->
	`gíî©e_ex¥
(
e
->
	`gë_¨gs
().
	`‰⁄t
());

530 
	`•rötf
(
°r_buf
, ",%s)", 
i
->
	`gë_gí«me
());

531 
Body
.
	`push
(
°r_buf
);

533 
GM_BLTIN_NODE_HAS_EDGE_TO
:

534 
Body
.
	`push
("/*4*/");

535 
	`as£π
(
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
(Ë!
NULL
);

537 
	`•rötf
(
°r_buf
, "%s.is_√ighb‹(", 
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
());

538 
Body
.
	`push
(
°r_buf
);

539 
	`•rötf
(
°r_buf
, "%s,", 
i
->
	`gë_gí«me
());

540 
Body
.
	`push
(
°r_buf
);

541 
maö
->
	`gíî©e_ex¥
(
e
->
	`gë_¨gs
().
	`‰⁄t
());

542 
Body
.
	`push
(")");

544 
GM_BLTIN_NODE_RAND_NBR
:

545 
Body
.
	`push
("/*5*/");

546 
	`as£π
(
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
(Ë!
NULL
);

547 
	`•rötf
(
°r_buf
, "%s.pick_øndom_out_√ighb‹(%s)", 
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
(), i->get_genname());

548 
Body
.
	`push
(
°r_buf
);

551 
	`as£π
(
Ál£
);

555 
GMTYPE_NODE_ITERATOR
:

556 
mëhod_id
) {

557 
GM_BLTIN_NODE_TO_EDGE
: {

558 c⁄° * 
Æüs_«me
 = 
i
->
	`gëSymInfo
()->
	`föd_öfo_°rög
(
CPPBE_INFO_NEIGHBOR_ITERATOR
);

559 
	`as£π
(
Æüs_«me
 !
NULL
);

560 
	`as£π
(
	`°æí
(
Æüs_«me
) > 0);

561 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(
Æüs_«me
))

562 
	`•rötf
(
°r_buf
, "G.gë_globÆ_edge_num(%s)",
Æüs_«me
);

564 
	`•rötf
(
°r_buf
, "%s", 
Æüs_«me
);

568 
	`as£π
(
Ál£
);

571 
Body
.
	`push
(
°r_buf
);

573 
GMTYPE_EDGE
:

574 
mëhod_id
) {

575 
GM_BLTIN_EDGE_FROM
: {

576 
Body
.
	`push
("/*reaching1*/");

577 
	`•rötf
(
°r_buf
, "%s.%s[%s]", 
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
(), 
FROM_IDX
, i->get_genname());

580 
GM_BLTIN_EDGE_TO
: {

583 
Body
.
	`push
("/*reaching2*/");

584 if(
MPI_GEN
.
	`is_¥e£¡_ö_loˇl_ac˚ss_nodes
(
i
->
	`gë_gí«me
())||MPI_GEN.
	`is_¥e£¡_ö_loˇl_ac˚ss_edges
(i->get_genname())) {

585 
	`•rötf
(
°r_buf
, "%s.%s[%s]", 
i
->
	`gëTy≥Info
()->
	`gë_èrgë_gøph_id
()->
	`gë_gí«me
(), 
NODE_IDX
, i->get_genname());

587 
	`•rötf
(
°r_buf
, "%s[%†- %s]", "√w_node_idx", 
i
->
	`gë_gí«me
(), "new_begin[0]");

592 
	`as£π
(
Ál£
);

595 
Body
.
	`push
(
°r_buf
);

597 
GMTYPE_NSET
:

598 
func_«me
 = 
	`gë_fun˘i⁄_«me_n£t
(
mëhod_id
, 
undî_∑øŒñ
);

600 
GMTYPE_NORDER
:

601 
func_«me
 = 
	`gë_fun˘i⁄_«me_n‹dî
(
mëhod_id
);

603 
GMTYPE_NSEQ
:

604 
func_«me
 = 
	`gë_fun˘i⁄_«me_n£q
(
mëhod_id
);

606 
GMTYPE_MAP
:

607 
func_«me
 = 
	`gë_fun˘i⁄_«me_m≠
(
mëhod_id
);

610 
	`as£π
(
Ál£
);

614 
	`•rötf
(
°r_buf
, "%s.%s(", 
i
->
	`gë_gí«me
(), 
func_«me
);

615 
Body
.
	`push
(
°r_buf
);

616 
	`add_¨gumíts_™d_thªad
(
Body
, 
e
, 
add_thªad_id
);

617 
	}
}

619 c⁄° * 
	ggm_˝∂ib
::
	$gë_ªdu˘i⁄_fun˘i⁄_«me
(
GM_REDUCE_T
 
ty≥
) {

620 
ty≥
) {

621 
GMREDUCE_PLUS
:

623 
GMREDUCE_MULT
:

625 
GMREDUCE_AND
:

627 
GMREDUCE_OR
:

629 
GMREDUCE_MIN
:

631 
GMREDUCE_MAX
:

634 
	`as£π
(
Ál£
);

637 
	}
}

639 
boﬁ
 
	ggm_˝∂ib
::
	$has_›timized_ty≥_«me
(
gm_symèb_íåy
* 
sym
) {

640 i‡(
sym
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_VECTOR_SEQUENCE
)Ë 
åue
;

641 i‡(
sym
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_PRIORITY_MAP_MIN
)Ë 
åue
;

642 i‡(
sym
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_PRIORITY_MAP_MAX
)Ë 
åue
;

643  
Ál£
;

644 
	}
}

646 c⁄° * 
	ggm_˝∂ib
::
	$gë_›timized_ty≥_«me
(
gm_symèb_íåy
* 
sym
) {

647 i‡(
sym
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_VECTOR_SEQUENCE
)) {

648 
GMTYPE_T
 
ty≥
 = (GMTYPE_TË
sym
->
	`gëTy≥
()->
	`gëTy≥Summ¨y
();

649 i‡(
	`gm_is_node_£quí˚_ty≥
(
ty≥
))

654 i‡(
sym
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_PRIORITY_MAP_MIN
))  "XXX";

655 i‡(
sym
->
	`föd_öfo_boﬁ
(
CPPBE_INFO_USE_PRIORITY_MAP_MAX
))  "XXX";

656  
	`gë_ty≥_°rög
(
sym
->
	`gëTy≥
());

657 
	}
}

	@gm_cpplib_opt.cc

1 
	~<°dio.h
>

2 
	~"gm_backíd_˝p.h
"

3 
	~"gm_‰⁄ãnd_≠i.h
"

4 
	~"gm_ty≥check.h
"

5 
	~"gm_îr‹.h
"

6 
	~"gm_åavî£.h
"

7 
	~"gm_misc.h
"

8 
	~"gm_ty≥check.h
"

9 
	~"gm_a°.h
"

10 
	~"gm_å™sf‹m_hñ≥r.h
"

11 
	~"gm_buûtö.h
"

17 
boﬁ
 
	ggm_˝∂ib
::
	$do_loˇl_›timize
() {

18 c⁄° * 
NAMES
[] = { "[(nothing)]" };

19 c⁄° 
COUNT
 = (
NAMES
) / (const *);

21 
boﬁ
 
is_okay
 = 
åue
;

23 
i
 = 0; i < 
COUNT
; i++) {

24 
	`gm_begö_mö‹_compûî_°age
(
i
 + 1, 
NAMES
[i]);

26 
i
) {

29 
COUNT
:

31 
	`as£π
(
Ál£
);

35 
	`gm_íd_mö‹_compûî_°age
();

36 i‡(!
is_okay
) ;

38  
is_okay
;

39 
	}
}

	@gm_cpplib_words.h

1 #i‚de‡
GM_CPPLIB_WORDS


2 
	#GM_CPPLIB_WORDS


	)

3 c⁄° * 
	gNODE_IDX
 = "local_node_idx";

4 c⁄° * 
	gEDGE_IDX
 = "edge_idx";

5 c⁄° * 
	gR_NODE_IDX
 = "local_r_node_idx";

6 c⁄° * 
	gR_EDGE_IDX
 = "r_edge_idx";

7 c⁄° * 
	gBEGIN
 = "local_begin";

8 c⁄° * 
	gR_BEGIN
 = "local_r_begin";

9 c⁄° * 
	gNUM_NODES
 = "num_nodes";

10 c⁄° * 
	gNUM_EDGES
 = "num_edges";

12 c⁄° * 
	gNUM_LOCAL_NODES
 = "get_num_of_local_nodes";

13 c⁄° * 
	gNUM_LOCAL_EDGES
 = "get_num_of_local_forward_edges";

15 c⁄° * 
	gRANDOM_NODE
 = "pick_random_node";

17 c⁄° * 
	gNODE_T
 = "node_t";

18 c⁄° * 
	gEDGE_T
 = "edge_t";

19 c⁄° * 
	gNODEITER_T
 = "node_t";

20 c⁄° * 
	gEDGEITER_T
 = "edge_t";

21 c⁄° * 
	gGRAPH_T
 = "gm_graph";

22 c⁄° * 
	gSET_T
 = "gm_node_set";

23 c⁄° * 
	gORDER_T
 = "gm_node_order";

24 c⁄° * 
	gSEQ_T
 = "gm_node_seq";

25 c⁄° * 
	gQUEUE_T
 = "gm_collection";

26 c⁄° * 
	gMAP_T
 = "gm_map";

27 c⁄° * 
	gPROP_OF_COL
 = "gm_property_of_collection";

28 c⁄° * 
	gIS_IN
 = "is_in";

29 c⁄° * 
	gMAX_SET_CNT
 = "max_size";

30 c⁄° * 
	gGET_LIST
 = "get_list";

31 c⁄° * 
	gFROM_IDX
 = "local_node_idx_src";

32 c⁄° * 
	gFW_EDGE_IDX
 = "local_e_rev2idx";

33 c⁄° * 
	gORG_EDGE_IDX
 = "local_e_idx2idx";

34 c⁄° * 
	gGET_ORG_IDX
 = "get_org_edge_idx";

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
40
957
gm_cpp_decide_schedule.cc
gm_cpp_gen.cc
gm_cpp_gen_bfs.cc
gm_cpp_gen_buildup_language_voca.cc
gm_cpp_gen_check_bfs.cc
gm_cpp_gen_check_rev_edge.cc
gm_cpp_gen_check_usermain.cc
gm_cpp_gen_foreach.cc
gm_cpp_gen_main.cc
gm_cpp_gen_mark_parallel.cc
gm_cpp_gen_misc_check.cc
gm_cpp_gen_prop_decl.cc
gm_cpp_gen_regular.cc
gm_cpp_gen_sanitize_name.cc
gm_cpp_opt.cc
gm_cpp_opt_check_feasible.cc
gm_cpp_opt_common_nbr.cc
gm_cpp_opt_debug.cc
gm_cpp_opt_defer.cc
gm_cpp_opt_reduce_field.cc
gm_cpp_opt_reduce_scalar.cc
gm_cpp_opt_save_bfs.cc
gm_cpp_opt_select_map_implementation.cc
gm_cpp_opt_select_par.cc
gm_cpp_opt_select_seq_implementation.cc
gm_cpplib_gen.cc
gm_cpplib_opt.cc
gm_cpplib_words.h
/usr/include/stdio.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/wctype.h
